This is libc.info, produced by makeinfo version 4.1 from libc.texinfo.

INFO-DIR-SECTION GNU libraries
START-INFO-DIR-ENTRY
* Libc: (libc).                 C library.
END-INFO-DIR-ENTRY

   This file documents the GNU C library.

   This is Edition 0.10, last updated 2001-07-06, of `The GNU C Library
Reference Manual', for Version 2.2.x.

   Copyright (C) 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2001, 2002
Free Software Foundation, Inc.

   Permission is granted to copy, distribute and/or modify this document
under the terms of the GNU Free Documentation License, Version 1.1 or
any later version published by the Free Software Foundation; with the
Invariant Sections being "Free Software Needs Free Documentation" and
"GNU Lesser General Public License", the Front-Cover texts being (a)
(see below), and with the Back-Cover Texts being (b) (see below).  A
copy of the license is included in the section entitled "GNU Free
Documentation License".

   (a) The FSF's Front-Cover Text is:

   A GNU Manual

   (b) The FSF's Back-Cover Text is:

   You have freedom to copy and modify this GNU Manual, like GNU
software.  Copies published by the Free Software Foundation raise
funds for GNU development.


File: libc.info,  Node: Library Summary,  Next: Installation,  Prev: Language Features,  Up: Top

Summary of Library Facilities
*****************************

   This appendix is a complete list of the facilities declared within
the header files supplied with the GNU C library.  Each entry also
lists the standard or other source from which each facility is derived,
and tells you where in the manual you can find more information about
how to use it.

`long int a64l (const char *STRING)'
     `stdlib.h' (XPG):  *Note Encode Binary Data::.

`void abort (void)'
     `stdlib.h' (ISO):  *Note Aborting a Program::.

`int abs (int NUMBER)'
     `stdlib.h' (ISO):  *Note Absolute Value::.

`int accept (int SOCKET, struct sockaddr *ADDR, socklen_t *LENGTH_PTR)'
     `sys/socket.h' (BSD):  *Note Accepting Connections::.

`int access (const char *FILENAME, int HOW)'
     `unistd.h' (POSIX.1):  *Note Testing File Access::.

`ACCOUNTING'
     `utmp.h' (SVID):  *Note Manipulating the Database::.

`double acos (double X)'
     `math.h' (ISO):  *Note Inverse Trig Functions::.

`float acosf (float X)'
     `math.h' (ISO):  *Note Inverse Trig Functions::.

`double acosh (double X)'
     `math.h' (ISO):  *Note Hyperbolic Functions::.

`float acoshf (float X)'
     `math.h' (ISO):  *Note Hyperbolic Functions::.

`long double acoshl (long double X)'
     `math.h' (ISO):  *Note Hyperbolic Functions::.

`long double acosl (long double X)'
     `math.h' (ISO):  *Note Inverse Trig Functions::.

`int addmntent (FILE *STREAM, const struct mntent *MNT)'
     `mntent.h' (BSD):  *Note mtab::.

`int adjtime (const struct timeval *DELTA, struct timeval *OLDDELTA)'
     `sys/time.h' (BSD):  *Note High-Resolution Calendar::.

`int adjtimex (struct timex *TIMEX)'
     `sys/timex.h' (GNU):  *Note High-Resolution Calendar::.

`AF_FILE'
     `sys/socket.h' (GNU):  *Note Address Formats::.

`AF_INET'
     `sys/socket.h' (BSD):  *Note Address Formats::.

`AF_INET6'
     `sys/socket.h' (IPv6 Basic API):  *Note Address Formats::.

`AF_LOCAL'
     `sys/socket.h' (POSIX):  *Note Address Formats::.

`AF_UNIX'
     `sys/socket.h' (BSD, Unix98):  *Note Address Formats::.

`AF_UNSPEC'
     `sys/socket.h' (BSD):  *Note Address Formats::.

`int aio_cancel (int FILDES, struct aiocb *AIOCBP)'
     `aio.h' (POSIX.1b):  *Note Cancel AIO Operations::.

`int aio_cancel64 (int FILDES, struct aiocb64 *AIOCBP)'
     `aio.h' (Unix98):  *Note Cancel AIO Operations::.

`int aio_error (const struct aiocb *AIOCBP)'
     `aio.h' (POSIX.1b):  *Note Status of AIO Operations::.

`int aio_error64 (const struct aiocb64 *AIOCBP)'
     `aio.h' (Unix98):  *Note Status of AIO Operations::.

`int aio_fsync (int OP, struct aiocb *AIOCBP)'
     `aio.h' (POSIX.1b):  *Note Synchronizing AIO Operations::.

`int aio_fsync64 (int OP, struct aiocb64 *AIOCBP)'
     `aio.h' (Unix98):  *Note Synchronizing AIO Operations::.

`void aio_init (const struct aioinit *INIT)'
     `aio.h' (GNU):  *Note Configuration of AIO::.

`int aio_read (struct aiocb *AIOCBP)'
     `aio.h' (POSIX.1b):  *Note Asynchronous Reads/Writes::.

`int aio_read64 (struct aiocb *AIOCBP)'
     `aio.h' (Unix98):  *Note Asynchronous Reads/Writes::.

`ssize_t aio_return (const struct aiocb *AIOCBP)'
     `aio.h' (POSIX.1b):  *Note Status of AIO Operations::.

`int aio_return64 (const struct aiocb64 *AIOCBP)'
     `aio.h' (Unix98):  *Note Status of AIO Operations::.

`int aio_suspend (const struct aiocb *const LIST[], int NENT, const struct timespec *TIMEOUT)'
     `aio.h' (POSIX.1b):  *Note Synchronizing AIO Operations::.

`int aio_suspend64 (const struct aiocb64 *const LIST[], int NENT, const struct timespec *TIMEOUT)'
     `aio.h' (Unix98):  *Note Synchronizing AIO Operations::.

`int aio_write (struct aiocb *AIOCBP)'
     `aio.h' (POSIX.1b):  *Note Asynchronous Reads/Writes::.

`int aio_write64 (struct aiocb *AIOCBP)'
     `aio.h' (Unix98):  *Note Asynchronous Reads/Writes::.

`unsigned int alarm (unsigned int SECONDS)'
     `unistd.h' (POSIX.1):  *Note Setting an Alarm::.

`void * alloca (size_t SIZE);'
     `stdlib.h' (GNU, BSD):  *Note Variable Size Automatic::.

`int alphasort (const void *A, const void *B)'
     `dirent.h' (BSD/SVID):  *Note Scanning Directory Content::.

`int alphasort64 (const void *A, const void *B)'
     `dirent.h' (GNU):  *Note Scanning Directory Content::.

`tcflag_t ALTWERASE'
     `termios.h' (BSD):  *Note Local Modes::.

`int ARG_MAX'
     `limits.h' (POSIX.1):  *Note General Limits::.

`error_t argp_err_exit_status'
     `argp.h' (GNU):  *Note Argp Global Variables::.

`void argp_error (const struct argp_state *STATE, const char *FMT, ...)'
     `argp.h' (GNU):  *Note Argp Helper Functions::.

`int ARGP_ERR_UNKNOWN'
     `argp.h' (GNU):  *Note Argp Parser Functions::.

`void argp_failure (const struct argp_state *STATE, int STATUS, int ERRNUM, const char *FMT, ...)'
     `argp.h' (GNU):  *Note Argp Helper Functions::.

`void argp_help (const struct argp *ARGP, FILE *STREAM, unsigned FLAGS, char *NAME)'
     `argp.h' (GNU):  *Note Argp Help::.

`ARGP_IN_ORDER'
     `argp.h' (GNU):  *Note Argp Flags::.

`ARGP_KEY_ARG'
     `argp.h' (GNU):  *Note Argp Special Keys::.

`ARGP_KEY_ARGS'
     `argp.h' (GNU):  *Note Argp Special Keys::.

`ARGP_KEY_END'
     `argp.h' (GNU):  *Note Argp Special Keys::.

`ARGP_KEY_ERROR'
     `argp.h' (GNU):  *Note Argp Special Keys::.

`ARGP_KEY_FINI'
     `argp.h' (GNU):  *Note Argp Special Keys::.

`ARGP_KEY_HELP_ARGS_DOC'
     `argp.h' (GNU):  *Note Argp Help Filter Keys::.

`ARGP_KEY_HELP_DUP_ARGS_NOTE'
     `argp.h' (GNU):  *Note Argp Help Filter Keys::.

`ARGP_KEY_HELP_EXTRA'
     `argp.h' (GNU):  *Note Argp Help Filter Keys::.

`ARGP_KEY_HELP_HEADER'
     `argp.h' (GNU):  *Note Argp Help Filter Keys::.

`ARGP_KEY_HELP_POST_DOC'
     `argp.h' (GNU):  *Note Argp Help Filter Keys::.

`ARGP_KEY_HELP_PRE_DOC'
     `argp.h' (GNU):  *Note Argp Help Filter Keys::.

`ARGP_KEY_INIT'
     `argp.h' (GNU):  *Note Argp Special Keys::.

`ARGP_KEY_NO_ARGS'
     `argp.h' (GNU):  *Note Argp Special Keys::.

`ARGP_KEY_SUCCESS'
     `argp.h' (GNU):  *Note Argp Special Keys::.

`ARGP_LONG_ONLY'
     `argp.h' (GNU):  *Note Argp Flags::.

`ARGP_NO_ARGS'
     `argp.h' (GNU):  *Note Argp Flags::.

`ARGP_NO_ERRS'
     `argp.h' (GNU):  *Note Argp Flags::.

`ARGP_NO_EXIT'
     `argp.h' (GNU):  *Note Argp Flags::.

`ARGP_NO_HELP'
     `argp.h' (GNU):  *Note Argp Flags::.

`error_t argp_parse (const struct argp *ARGP, int ARGC, char **ARGV, unsigned FLAGS, int *ARG_INDEX, void *INPUT)'
     `argp.h' (GNU):  *Note Suboptions: Argp.

`ARGP_PARSE_ARGV0'
     `argp.h' (GNU):  *Note Argp Flags::.

`const char * argp_program_bug_address'
     `argp.h' (GNU):  *Note Argp Global Variables::.

`const char * argp_program_version'
     `argp.h' (GNU):  *Note Argp Global Variables::.

`argp_program_version_hook'
     `argp.h' (GNU):  *Note Argp Global Variables::.

`ARGP_SILENT'
     `argp.h' (GNU):  *Note Argp Flags::.

`void argp_state_help (const struct argp_state *STATE, FILE *STREAM, unsigned FLAGS)'
     `argp.h' (GNU):  *Note Argp Helper Functions::.

`void argp_usage (const struct argp_state *STATE)'
     `argp.h' (GNU):  *Note Argp Helper Functions::.

`error_t argz_add (char **ARGZ, size_t *ARGZ_LEN, const char *STR)'
     `argz.h' (GNU):  *Note Argz Functions::.

`error_t argz_add_sep (char **ARGZ, size_t *ARGZ_LEN, const char *STR, int DELIM)'
     `argz.h' (GNU):  *Note Argz Functions::.

`error_t argz_append (char **ARGZ, size_t *ARGZ_LEN, const char *BUF, size_t BUF_LEN)'
     `argz.h' (GNU):  *Note Argz Functions::.

`size_t argz_count (const char *ARGZ, size_t ARG_LEN)'
     `argz.h' (GNU):  *Note Argz Functions::.

`error_t argz_create (char *const ARGV[], char **ARGZ, size_t *ARGZ_LEN)'
     `argz.h' (GNU):  *Note Argz Functions::.

`error_t argz_create_sep (const char *STRING, int SEP, char **ARGZ, size_t *ARGZ_LEN)'
     `argz.h' (GNU):  *Note Argz Functions::.

`error_t argz_delete (char **ARGZ, size_t *ARGZ_LEN, char *ENTRY)'
     `argz.h' (GNU):  *Note Argz Functions::.

`void argz_extract (char *ARGZ, size_t ARGZ_LEN, char **ARGV)'
     `argz.h' (GNU):  *Note Argz Functions::.

`error_t argz_insert (char **ARGZ, size_t *ARGZ_LEN, char *BEFORE, const char *ENTRY)'
     `argz.h' (GNU):  *Note Argz Functions::.

`char * argz_next (char *ARGZ, size_t ARGZ_LEN, const char *ENTRY)'
     `argz.h' (GNU):  *Note Argz Functions::.

`error_t argz_replace (char **ARGZ, size_t *ARGZ_LEN, const char *STR, const char *WITH, unsigned *REPLACE_COUNT)'
     `argz.h' (GNU):  *Note Argz Functions::.

`void argz_stringify (char *ARGZ, size_t LEN, int SEP)'
     `argz.h' (GNU):  *Note Argz Functions::.

`char * asctime (const struct tm *BROKENTIME)'
     `time.h' (ISO):  *Note Formatting Calendar Time::.

`char * asctime_r (const struct tm *BROKENTIME, char *BUFFER)'
     `time.h' (POSIX.1c):  *Note Formatting Calendar Time::.

`double asin (double X)'
     `math.h' (ISO):  *Note Inverse Trig Functions::.

`float asinf (float X)'
     `math.h' (ISO):  *Note Inverse Trig Functions::.

`double asinh (double X)'
     `math.h' (ISO):  *Note Hyperbolic Functions::.

`float asinhf (float X)'
     `math.h' (ISO):  *Note Hyperbolic Functions::.

`long double asinhl (long double X)'
     `math.h' (ISO):  *Note Hyperbolic Functions::.

`long double asinl (long double X)'
     `math.h' (ISO):  *Note Inverse Trig Functions::.

`int asprintf (char **PTR, const char *TEMPLATE, ...)'
     `stdio.h' (GNU):  *Note Dynamic Output::.

`void assert (int EXPRESSION)'
     `assert.h' (ISO):  *Note Consistency Checking::.

`void assert_perror (int ERRNUM)'
     `assert.h' (GNU):  *Note Consistency Checking::.

`double atan (double X)'
     `math.h' (ISO):  *Note Inverse Trig Functions::.

`double atan2 (double Y, double X)'
     `math.h' (ISO):  *Note Inverse Trig Functions::.

`float atan2f (float Y, float X)'
     `math.h' (ISO):  *Note Inverse Trig Functions::.

`long double atan2l (long double Y, long double X)'
     `math.h' (ISO):  *Note Inverse Trig Functions::.

`float atanf (float X)'
     `math.h' (ISO):  *Note Inverse Trig Functions::.

`double atanh (double X)'
     `math.h' (ISO):  *Note Hyperbolic Functions::.

`float atanhf (float X)'
     `math.h' (ISO):  *Note Hyperbolic Functions::.

`long double atanhl (long double X)'
     `math.h' (ISO):  *Note Hyperbolic Functions::.

`long double atanl (long double X)'
     `math.h' (ISO):  *Note Inverse Trig Functions::.

`int atexit (void (*FUNCTION) (void))'
     `stdlib.h' (ISO):  *Note Cleanups on Exit::.

`double atof (const char *STRING)'
     `stdlib.h' (ISO):  *Note Parsing of Floats::.

`int atoi (const char *STRING)'
     `stdlib.h' (ISO):  *Note Parsing of Integers::.

`long int atol (const char *STRING)'
     `stdlib.h' (ISO):  *Note Parsing of Integers::.

`long long int atoll (const char *STRING)'
     `stdlib.h' (ISO):  *Note Parsing of Integers::.

`B0'
     `termios.h' (POSIX.1):  *Note Line Speed::.

`B110'
     `termios.h' (POSIX.1):  *Note Line Speed::.

`B115200'
     `termios.h' (GNU):  *Note Line Speed::.

`B1200'
     `termios.h' (POSIX.1):  *Note Line Speed::.

`B134'
     `termios.h' (POSIX.1):  *Note Line Speed::.

`B150'
     `termios.h' (POSIX.1):  *Note Line Speed::.

`B1800'
     `termios.h' (POSIX.1):  *Note Line Speed::.

`B19200'
     `termios.h' (POSIX.1):  *Note Line Speed::.

`B200'
     `termios.h' (POSIX.1):  *Note Line Speed::.

`B230400'
     `termios.h' (GNU):  *Note Line Speed::.

`B2400'
     `termios.h' (POSIX.1):  *Note Line Speed::.

`B300'
     `termios.h' (POSIX.1):  *Note Line Speed::.

`B38400'
     `termios.h' (POSIX.1):  *Note Line Speed::.

`B460800'
     `termios.h' (GNU):  *Note Line Speed::.

`B4800'
     `termios.h' (POSIX.1):  *Note Line Speed::.

`B50'
     `termios.h' (POSIX.1):  *Note Line Speed::.

`B57600'
     `termios.h' (GNU):  *Note Line Speed::.

`B600'
     `termios.h' (POSIX.1):  *Note Line Speed::.

`B75'
     `termios.h' (POSIX.1):  *Note Line Speed::.

`B9600'
     `termios.h' (POSIX.1):  *Note Line Speed::.

`int backtrace (void **BUFFER, int SIZE)'
     `execinfo.h' (GNU):  *Note Backtraces::.

`char ** backtrace_symbols (void *const *BUFFER, int SIZE)'
     `execinfo.h' (GNU):  *Note Backtraces::.

`void backtrace_symbols_fd (void *const *BUFFER, int SIZE, int FD)'
     `execinfo.h' (GNU):  *Note Backtraces::.

`char * basename (char *PATH)'
     `libgen.h' (XPG):  *Note Finding Tokens in a String::.

`char * basename (const char *FILENAME)'
     `string.h' (GNU):  *Note Finding Tokens in a String::.

`int BC_BASE_MAX'
     `limits.h' (POSIX.2):  *Note Utility Limits::.

`int BC_DIM_MAX'
     `limits.h' (POSIX.2):  *Note Utility Limits::.

`int bcmp (const void *A1, const void *A2, size_t SIZE)'
     `string.h' (BSD):  *Note String/Array Comparison::.

`void bcopy (const void *FROM, void *TO, size_t SIZE)'
     `string.h' (BSD):  *Note Copying and Concatenation::.

`int BC_SCALE_MAX'
     `limits.h' (POSIX.2):  *Note Utility Limits::.

`int BC_STRING_MAX'
     `limits.h' (POSIX.2):  *Note Utility Limits::.

`int bind (int SOCKET, struct sockaddr *ADDR, socklen_t LENGTH)'
     `sys/socket.h' (BSD):  *Note Setting Address::.

`char * bindtextdomain (const char *DOMAINNAME, const char *DIRNAME)'
     `libintl.h' (GNU):  *Note Locating gettext catalog::.

`char * bind_textdomain_codeset (const char *DOMAINNAME, const char *CODESET)'
     `libintl.h' (GNU):  *Note Charset conversion in gettext::.

`blkcnt64_t'
     `sys/types.h' (Unix98):  *Note Attribute Meanings::.

`blkcnt_t'
     `sys/types.h' (Unix98):  *Note Attribute Meanings::.

`BOOT_TIME'
     `utmp.h' (SVID):  *Note Manipulating the Database::.

`BOOT_TIME'
     `utmpx.h' (XPG4.2):  *Note XPG Functions::.

`int brk (void *ADDR)'
     `unistd.h' (BSD):  *Note Resizing the Data Segment::.

`tcflag_t BRKINT'
     `termios.h' (POSIX.1):  *Note Input Modes::.

`_BSD_SOURCE'
     (GNU):  *Note Feature Test Macros::.

`void * bsearch (const void *KEY, const void *ARRAY, size_t COUNT, size_t SIZE, comparison_fn_t COMPARE)'
     `stdlib.h' (ISO):  *Note Array Search Function::.

`wint_t btowc (int C)'
     `wchar.h' (ISO):  *Note Converting a Character::.

`int BUFSIZ'
     `stdio.h' (ISO):  *Note Controlling Buffering::.

`void bzero (void *BLOCK, size_t SIZE)'
     `string.h' (BSD):  *Note Copying and Concatenation::.

`double cabs (complex double Z)'
     `complex.h' (ISO):  *Note Absolute Value::.

`float cabsf (complex float Z)'
     `complex.h' (ISO):  *Note Absolute Value::.

`long double cabsl (complex long double Z)'
     `complex.h' (ISO):  *Note Absolute Value::.

`complex double cacos (complex double Z)'
     `complex.h' (ISO):  *Note Inverse Trig Functions::.

`complex float cacosf (complex float Z)'
     `complex.h' (ISO):  *Note Inverse Trig Functions::.

`complex double cacosh (complex double Z)'
     `complex.h' (ISO):  *Note Hyperbolic Functions::.

`complex float cacoshf (complex float Z)'
     `complex.h' (ISO):  *Note Hyperbolic Functions::.

`complex long double cacoshl (complex long double Z)'
     `complex.h' (ISO):  *Note Hyperbolic Functions::.

`complex long double cacosl (complex long double Z)'
     `complex.h' (ISO):  *Note Inverse Trig Functions::.

`void * calloc (size_t COUNT, size_t ELTSIZE)'
     `malloc.h', `stdlib.h' (ISO):  *Note Allocating Cleared Space::.

`char * canonicalize_file_name (const char *NAME)'
     `stdlib.h' (GNU):  *Note Symbolic Links::.

`double carg (complex double Z)'
     `complex.h' (ISO):  *Note Operations on Complex::.

`float cargf (complex float Z)'
     `complex.h' (ISO):  *Note Operations on Complex::.

`long double cargl (complex long double Z)'
     `complex.h' (ISO):  *Note Operations on Complex::.

`complex double casin (complex double Z)'
     `complex.h' (ISO):  *Note Inverse Trig Functions::.

`complex float casinf (complex float Z)'
     `complex.h' (ISO):  *Note Inverse Trig Functions::.

`complex double casinh (complex double Z)'
     `complex.h' (ISO):  *Note Hyperbolic Functions::.

`complex float casinhf (complex float Z)'
     `complex.h' (ISO):  *Note Hyperbolic Functions::.

`complex long double casinhl (complex long double Z)'
     `complex.h' (ISO):  *Note Hyperbolic Functions::.

`complex long double casinl (complex long double Z)'
     `complex.h' (ISO):  *Note Inverse Trig Functions::.

`complex double catan (complex double Z)'
     `complex.h' (ISO):  *Note Inverse Trig Functions::.

`complex float catanf (complex float Z)'
     `complex.h' (ISO):  *Note Inverse Trig Functions::.

`complex double catanh (complex double Z)'
     `complex.h' (ISO):  *Note Hyperbolic Functions::.

`complex float catanhf (complex float Z)'
     `complex.h' (ISO):  *Note Hyperbolic Functions::.

`complex long double catanhl (complex long double Z)'
     `complex.h' (ISO):  *Note Hyperbolic Functions::.

`complex long double catanl (complex long double Z)'
     `complex.h' (ISO):  *Note Inverse Trig Functions::.

`nl_catd catopen (const char *CAT_NAME, int FLAG)'
     `nl_types.h' (X/Open):  *Note The catgets Functions::.

`int cbc_crypt (char *KEY, char *BLOCKS, unsigned LEN, unsigned MODE, char *IVEC)'
     `rpc/des_crypt.h' (SUNRPC):  *Note DES Encryption::.

`double cbrt (double X)'
     `math.h' (BSD):  *Note Exponents and Logarithms::.

`float cbrtf (float X)'
     `math.h' (BSD):  *Note Exponents and Logarithms::.

`long double cbrtl (long double X)'
     `math.h' (BSD):  *Note Exponents and Logarithms::.

`complex double ccos (complex double Z)'
     `complex.h' (ISO):  *Note Trig Functions::.

`complex float ccosf (complex float Z)'
     `complex.h' (ISO):  *Note Trig Functions::.

`complex double ccosh (complex double Z)'
     `complex.h' (ISO):  *Note Hyperbolic Functions::.

`complex float ccoshf (complex float Z)'
     `complex.h' (ISO):  *Note Hyperbolic Functions::.

`complex long double ccoshl (complex long double Z)'
     `complex.h' (ISO):  *Note Hyperbolic Functions::.

`complex long double ccosl (complex long double Z)'
     `complex.h' (ISO):  *Note Trig Functions::.

`cc_t'
     `termios.h' (POSIX.1):  *Note Mode Data Types::.

`tcflag_t CCTS_OFLOW'
     `termios.h' (BSD):  *Note Control Modes::.

`double ceil (double X)'
     `math.h' (ISO):  *Note Rounding Functions::.

`float ceilf (float X)'
     `math.h' (ISO):  *Note Rounding Functions::.

`long double ceill (long double X)'
     `math.h' (ISO):  *Note Rounding Functions::.

`complex double cexp (complex double Z)'
     `complex.h' (ISO):  *Note Exponents and Logarithms::.

`complex float cexpf (complex float Z)'
     `complex.h' (ISO):  *Note Exponents and Logarithms::.

`complex long double cexpl (complex long double Z)'
     `complex.h' (ISO):  *Note Exponents and Logarithms::.

`speed_t cfgetispeed (const struct termios *TERMIOS-P)'
     `termios.h' (POSIX.1):  *Note Line Speed::.

`speed_t cfgetospeed (const struct termios *TERMIOS-P)'
     `termios.h' (POSIX.1):  *Note Line Speed::.

`int cfmakeraw (struct termios *TERMIOS-P)'
     `termios.h' (BSD):  *Note Noncanonical Input::.

`void cfree (void *PTR)'
     `stdlib.h' (Sun):  *Note Freeing after Malloc::.

`int cfsetispeed (struct termios *TERMIOS-P, speed_t SPEED)'
     `termios.h' (POSIX.1):  *Note Line Speed::.

`int cfsetospeed (struct termios *TERMIOS-P, speed_t SPEED)'
     `termios.h' (POSIX.1):  *Note Line Speed::.

`int cfsetspeed (struct termios *TERMIOS-P, speed_t SPEED)'
     `termios.h' (BSD):  *Note Line Speed::.

`CHAR_BIT'
     `limits.h' (ISO):  *Note Width of Type::.

`CHAR_MAX'
     `limits.h' (ISO):  *Note Range of Type::.

`CHAR_MIN'
     `limits.h' (ISO):  *Note Range of Type::.

`int chdir (const char *FILENAME)'
     `unistd.h' (POSIX.1):  *Note Working Directory::.

`int CHILD_MAX'
     `limits.h' (POSIX.1):  *Note General Limits::.

`int chmod (const char *FILENAME, mode_t MODE)'
     `sys/stat.h' (POSIX.1):  *Note Setting Permissions::.

`int chown (const char *FILENAME, uid_t OWNER, gid_t GROUP)'
     `unistd.h' (POSIX.1):  *Note File Owner::.

`tcflag_t CIGNORE'
     `termios.h' (BSD):  *Note Control Modes::.

`double cimag (complex double Z)'
     `complex.h' (ISO):  *Note Operations on Complex::.

`float cimagf (complex float Z)'
     `complex.h' (ISO):  *Note Operations on Complex::.

`long double cimagl (complex long double Z)'
     `complex.h' (ISO):  *Note Operations on Complex::.

`int clearenv (void)'
     `stdlib.h' (GNU):  *Note Environment Access::.

`void clearerr (FILE *STREAM)'
     `stdio.h' (ISO):  *Note Error Recovery::.

`void clearerr_unlocked (FILE *STREAM)'
     `stdio.h' (GNU):  *Note Error Recovery::.

`int CLK_TCK'
     `time.h' (POSIX.1):  *Note CPU Time::.

`tcflag_t CLOCAL'
     `termios.h' (POSIX.1):  *Note Control Modes::.

`clock_t clock (void)'
     `time.h' (ISO):  *Note CPU Time::.

`int CLOCKS_PER_SEC'
     `time.h' (ISO):  *Note CPU Time::.

`clock_t'
     `time.h' (ISO):  *Note CPU Time::.

`complex double clog (complex double Z)'
     `complex.h' (ISO):  *Note Exponents and Logarithms::.

`complex double clog10 (complex double Z)'
     `complex.h' (GNU):  *Note Exponents and Logarithms::.

`complex float clog10f (complex float Z)'
     `complex.h' (GNU):  *Note Exponents and Logarithms::.

`complex long double clog10l (complex long double Z)'
     `complex.h' (GNU):  *Note Exponents and Logarithms::.

`complex float clogf (complex float Z)'
     `complex.h' (ISO):  *Note Exponents and Logarithms::.

`complex long double clogl (complex long double Z)'
     `complex.h' (ISO):  *Note Exponents and Logarithms::.

`int close (int FILEDES)'
     `unistd.h' (POSIX.1):  *Note Opening and Closing Files::.

`int closedir (DIR *DIRSTREAM)'
     `dirent.h' (POSIX.1):  *Note Reading/Closing Directory::.

`void closelog (void)'
     `syslog.h' (BSD):  *Note closelog::.

`int COLL_WEIGHTS_MAX'
     `limits.h' (POSIX.2):  *Note Utility Limits::.

`size_t confstr (int PARAMETER, char *BUF, size_t LEN)'
     `unistd.h' (POSIX.2):  *Note String Parameters::.

`complex double conj (complex double Z)'
     `complex.h' (ISO):  *Note Operations on Complex::.

`complex float conjf (complex float Z)'
     `complex.h' (ISO):  *Note Operations on Complex::.

`complex long double conjl (complex long double Z)'
     `complex.h' (ISO):  *Note Operations on Complex::.

`int connect (int SOCKET, struct sockaddr *ADDR, socklen_t LENGTH)'
     `sys/socket.h' (BSD):  *Note Connecting::.

`cookie_close_function'
     `stdio.h' (GNU):  *Note Hook Functions::.

`cookie_io_functions_t'
     `stdio.h' (GNU):  *Note Streams and Cookies::.

`cookie_read_function'
     `stdio.h' (GNU):  *Note Hook Functions::.

`cookie_seek_function'
     `stdio.h' (GNU):  *Note Hook Functions::.

`cookie_write_function'
     `stdio.h' (GNU):  *Note Hook Functions::.

`double copysign (double X, double Y)'
     `math.h' (ISO):  *Note FP Bit Twiddling::.

`float copysignf (float X, float Y)'
     `math.h' (ISO):  *Note FP Bit Twiddling::.

`long double copysignl (long double X, long double Y)'
     `math.h' (ISO):  *Note FP Bit Twiddling::.

`double cos (double X)'
     `math.h' (ISO):  *Note Trig Functions::.

`float cosf (float X)'
     `math.h' (ISO):  *Note Trig Functions::.

`double cosh (double X)'
     `math.h' (ISO):  *Note Hyperbolic Functions::.

`float coshf (float X)'
     `math.h' (ISO):  *Note Hyperbolic Functions::.

`long double coshl (long double X)'
     `math.h' (ISO):  *Note Hyperbolic Functions::.

`long double cosl (long double X)'
     `math.h' (ISO):  *Note Trig Functions::.

`complex double cpow (complex double BASE, complex double POWER)'
     `complex.h' (ISO):  *Note Exponents and Logarithms::.

`complex float cpowf (complex float BASE, complex float POWER)'
     `complex.h' (ISO):  *Note Exponents and Logarithms::.

`complex long double cpowl (complex long double BASE, complex long double POWER)'
     `complex.h' (ISO):  *Note Exponents and Logarithms::.

`complex double cproj (complex double Z)'
     `complex.h' (ISO):  *Note Operations on Complex::.

`complex float cprojf (complex float Z)'
     `complex.h' (ISO):  *Note Operations on Complex::.

`complex long double cprojl (complex long double Z)'
     `complex.h' (ISO):  *Note Operations on Complex::.

`tcflag_t CREAD'
     `termios.h' (POSIX.1):  *Note Control Modes::.

`double creal (complex double Z)'
     `complex.h' (ISO):  *Note Operations on Complex::.

`float crealf (complex float Z)'
     `complex.h' (ISO):  *Note Operations on Complex::.

`long double creall (complex long double Z)'
     `complex.h' (ISO):  *Note Operations on Complex::.

`int creat (const char *FILENAME, mode_t MODE)'
     `fcntl.h' (POSIX.1):  *Note Opening and Closing Files::.

`int creat64 (const char *FILENAME, mode_t MODE)'
     `fcntl.h' (Unix98):  *Note Opening and Closing Files::.

`tcflag_t CRTS_IFLOW'
     `termios.h' (BSD):  *Note Control Modes::.

`char * crypt (const char *KEY, const char *SALT)'
     `crypt.h' (BSD, SVID):  *Note crypt::.

`char * crypt_r (const char *KEY, const char *SALT, struct crypt_data * DATA)'
     `crypt.h' (GNU):  *Note crypt::.

`tcflag_t CS5'
     `termios.h' (POSIX.1):  *Note Control Modes::.

`tcflag_t CS6'
     `termios.h' (POSIX.1):  *Note Control Modes::.

`tcflag_t CS7'
     `termios.h' (POSIX.1):  *Note Control Modes::.

`tcflag_t CS8'
     `termios.h' (POSIX.1):  *Note Control Modes::.

`complex double csin (complex double Z)'
     `complex.h' (ISO):  *Note Trig Functions::.

`complex float csinf (complex float Z)'
     `complex.h' (ISO):  *Note Trig Functions::.

`complex double csinh (complex double Z)'
     `complex.h' (ISO):  *Note Hyperbolic Functions::.

`complex float csinhf (complex float Z)'
     `complex.h' (ISO):  *Note Hyperbolic Functions::.

`complex long double csinhl (complex long double Z)'
     `complex.h' (ISO):  *Note Hyperbolic Functions::.

`complex long double csinl (complex long double Z)'
     `complex.h' (ISO):  *Note Trig Functions::.

`tcflag_t CSIZE'
     `termios.h' (POSIX.1):  *Note Control Modes::.

`_CS_LFS64_CFLAGS'
     `unistd.h' (Unix98):  *Note String Parameters::.

`_CS_LFS64_LDFLAGS'
     `unistd.h' (Unix98):  *Note String Parameters::.

`_CS_LFS64_LIBS'
     `unistd.h' (Unix98):  *Note String Parameters::.

`_CS_LFS64_LINTFLAGS'
     `unistd.h' (Unix98):  *Note String Parameters::.

`_CS_LFS_CFLAGS'
     `unistd.h' (Unix98):  *Note String Parameters::.

`_CS_LFS_LDFLAGS'
     `unistd.h' (Unix98):  *Note String Parameters::.

`_CS_LFS_LIBS'
     `unistd.h' (Unix98):  *Note String Parameters::.

`_CS_LFS_LINTFLAGS'
     `unistd.h' (Unix98):  *Note String Parameters::.

`_CS_PATH'
     `unistd.h' (POSIX.2):  *Note String Parameters::.

`complex double csqrt (complex double Z)'
     `complex.h' (ISO):  *Note Exponents and Logarithms::.

`complex float csqrtf (complex float Z)'
     `complex.h' (ISO):  *Note Exponents and Logarithms::.

`complex long double csqrtl (complex long double Z)'
     `complex.h' (ISO):  *Note Exponents and Logarithms::.

`tcflag_t CSTOPB'
     `termios.h' (POSIX.1):  *Note Control Modes::.

`complex double ctan (complex double Z)'
     `complex.h' (ISO):  *Note Trig Functions::.

`complex float ctanf (complex float Z)'
     `complex.h' (ISO):  *Note Trig Functions::.

`complex double ctanh (complex double Z)'
     `complex.h' (ISO):  *Note Hyperbolic Functions::.

`complex float ctanhf (complex float Z)'
     `complex.h' (ISO):  *Note Hyperbolic Functions::.

`complex long double ctanhl (complex long double Z)'
     `complex.h' (ISO):  *Note Hyperbolic Functions::.

`complex long double ctanl (complex long double Z)'
     `complex.h' (ISO):  *Note Trig Functions::.

`char * ctermid (char *STRING)'
     `stdio.h' (POSIX.1):  *Note Identifying the Terminal::.

`char * ctime (const time_t *TIME)'
     `time.h' (ISO):  *Note Formatting Calendar Time::.

`char * ctime_r (const time_t *TIME, char *BUFFER)'
     `time.h' (POSIX.1c):  *Note Formatting Calendar Time::.

`char * cuserid (char *STRING)'
     `stdio.h' (POSIX.1):  *Note Who Logged In::.

`int daylight'
     `time.h' (SVID):  *Note Time Zone Functions::.

`DBL_DIG'
     `float.h' (ISO):  *Note Floating Point Parameters::.

`DBL_EPSILON'
     `float.h' (ISO):  *Note Floating Point Parameters::.

`DBL_MANT_DIG'
     `float.h' (ISO):  *Note Floating Point Parameters::.

`DBL_MAX'
     `float.h' (ISO):  *Note Floating Point Parameters::.

`DBL_MAX_10_EXP'
     `float.h' (ISO):  *Note Floating Point Parameters::.

`DBL_MAX_EXP'
     `float.h' (ISO):  *Note Floating Point Parameters::.

`DBL_MIN'
     `float.h' (ISO):  *Note Floating Point Parameters::.

`DBL_MIN_10_EXP'
     `float.h' (ISO):  *Note Floating Point Parameters::.

`DBL_MIN_EXP'
     `float.h' (ISO):  *Note Floating Point Parameters::.

`char * dcgettext (const char *DOMAINNAME, const char *MSGID, int CATEGORY)'
     `libintl.h' (GNU):  *Note Translation with gettext::.

`char * dcngettext (const char *DOMAIN, const char *MSGID1, const char *MSGID2, unsigned long int N, int CATEGORY)'
     `libintl.h' (GNU):  *Note Advanced gettext functions::.

`DEAD_PROCESS'
     `utmp.h' (SVID):  *Note Manipulating the Database::.

`DEAD_PROCESS'
     `utmpx.h' (XPG4.2):  *Note XPG Functions::.

`DES_DECRYPT'
     `rpc/des_crypt.h' (SUNRPC):  *Note DES Encryption::.

`DES_ENCRYPT'
     `rpc/des_crypt.h' (SUNRPC):  *Note DES Encryption::.

`DESERR_BADPARAM'
     `rpc/des_crypt.h' (SUNRPC):  *Note DES Encryption::.

`DESERR_HWERROR'
     `rpc/des_crypt.h' (SUNRPC):  *Note DES Encryption::.

`DESERR_NOHWDEVICE'
     `rpc/des_crypt.h' (SUNRPC):  *Note DES Encryption::.

`DESERR_NONE'
     `rpc/des_crypt.h' (SUNRPC):  *Note DES Encryption::.

`int DES_FAILED (int ERR)'
     `rpc/des_crypt.h' (SUNRPC):  *Note DES Encryption::.

`DES_HW'
     `rpc/des_crypt.h' (SUNRPC):  *Note DES Encryption::.

`void des_setparity (char *KEY)'
     `rpc/des_crypt.h' (SUNRPC):  *Note DES Encryption::.

`DES_SW'
     `rpc/des_crypt.h' (SUNRPC):  *Note DES Encryption::.

`dev_t'
     `sys/types.h' (POSIX.1):  *Note Attribute Meanings::.

`char * dgettext (const char *DOMAINNAME, const char *MSGID)'
     `libintl.h' (GNU):  *Note Translation with gettext::.

`double difftime (time_t TIME1, time_t TIME0)'
     `time.h' (ISO):  *Note Elapsed Time::.

`DIR'
     `dirent.h' (POSIX.1):  *Note Opening a Directory::.

`int dirfd (DIR *DIRSTREAM)'
     `dirent.h' (GNU):  *Note Opening a Directory::.

`char * dirname (char *PATH)'
     `libgen.h' (XPG):  *Note Finding Tokens in a String::.

`div_t div (int NUMERATOR, int DENOMINATOR)'
     `stdlib.h' (ISO):  *Note Integer Division::.

`div_t'
     `stdlib.h' (ISO):  *Note Integer Division::.

`char * dngettext (const char *DOMAIN, const char *MSGID1, const char *MSGID2, unsigned long int N)'
     `libintl.h' (GNU):  *Note Advanced gettext functions::.

`double drand48 (void)'
     `stdlib.h' (SVID):  *Note SVID Random::.

`int drand48_r (struct drand48_data *BUFFER, double *RESULT)'
     `stdlib.h' (GNU):  *Note SVID Random::.

`double drem (double NUMERATOR, double DENOMINATOR)'
     `math.h' (BSD):  *Note Remainder Functions::.

`float dremf (float NUMERATOR, float DENOMINATOR)'
     `math.h' (BSD):  *Note Remainder Functions::.

`long double dreml (long double NUMERATOR, long double DENOMINATOR)'
     `math.h' (BSD):  *Note Remainder Functions::.

`mode_t DTTOIF (int DTYPE)'
     `dirent.h' (BSD):  *Note Directory Entries::.

`int dup (int OLD)'
     `unistd.h' (POSIX.1):  *Note Duplicating Descriptors::.

`int dup2 (int OLD, int NEW)'
     `unistd.h' (POSIX.1):  *Note Duplicating Descriptors::.

`int E2BIG'
     `errno.h' (POSIX.1: Argument list too long):  *Note Error Codes::.

`int EACCES'
     `errno.h' (POSIX.1: Permission denied):  *Note Error Codes::.

`int EADDRINUSE'
     `errno.h' (BSD: Address already in use):  *Note Error Codes::.

`int EADDRNOTAVAIL'
     `errno.h' (BSD: Cannot assign requested address):  *Note Error
     Codes::.

`int EADV'
     `errno.h' (Linux???: Advertise error):  *Note Error Codes::.

`int EAFNOSUPPORT'
     `errno.h' (BSD: Address family not supported by protocol):  *Note
     Error Codes::.

`int EAGAIN'
     `errno.h' (POSIX.1: Resource temporarily unavailable):  *Note
     Error Codes::.

`int EALREADY'
     `errno.h' (BSD: Operation already in progress):  *Note Error
     Codes::.

`int EAUTH'
     `errno.h' (BSD: Authentication error):  *Note Error Codes::.

`int EBACKGROUND'
     `errno.h' (GNU: Inappropriate operation for background process):
     *Note Error Codes::.

`int EBADE'
     `errno.h' (Linux???: Invalid exchange):  *Note Error Codes::.

`int EBADF'
     `errno.h' (POSIX.1: Bad file descriptor):  *Note Error Codes::.

`int EBADFD'
     `errno.h' (Linux???: File descriptor in bad state):  *Note Error
     Codes::.

`int EBADMSG'
     `errno.h' (XOPEN: Bad message):  *Note Error Codes::.

`int EBADR'
     `errno.h' (Linux???: Invalid request descriptor):  *Note Error
     Codes::.

`int EBADRPC'
     `errno.h' (BSD: RPC struct is bad):  *Note Error Codes::.

`int EBADRQC'
     `errno.h' (Linux???: Invalid request code):  *Note Error Codes::.

`int EBADSLT'
     `errno.h' (Linux???: Invalid slot):  *Note Error Codes::.

`int EBFONT'
     `errno.h' (Linux???: Bad font file format):  *Note Error Codes::.

`int EBUSY'
     `errno.h' (POSIX.1: Device or resource busy):  *Note Error Codes::.

`int ecb_crypt (char *KEY, char *BLOCKS, unsigned LEN, unsigned MODE)'
     `rpc/des_crypt.h' (SUNRPC):  *Note DES Encryption::.

`int ECHILD'
     `errno.h' (POSIX.1: No child processes):  *Note Error Codes::.

`tcflag_t ECHO'
     `termios.h' (POSIX.1):  *Note Local Modes::.

`tcflag_t ECHOCTL'
     `termios.h' (BSD):  *Note Local Modes::.

`tcflag_t ECHOE'
     `termios.h' (POSIX.1):  *Note Local Modes::.

`tcflag_t ECHOK'
     `termios.h' (POSIX.1):  *Note Local Modes::.

`tcflag_t ECHOKE'
     `termios.h' (BSD):  *Note Local Modes::.

`tcflag_t ECHONL'
     `termios.h' (POSIX.1):  *Note Local Modes::.

`tcflag_t ECHOPRT'
     `termios.h' (BSD):  *Note Local Modes::.

`int ECHRNG'
     `errno.h' (Linux???: Channel number out of range):  *Note Error
     Codes::.

`int ECOMM'
     `errno.h' (Linux???: Communication error on send):  *Note Error
     Codes::.

`int ECONNABORTED'
     `errno.h' (BSD: Software caused connection abort):  *Note Error
     Codes::.

`int ECONNREFUSED'
     `errno.h' (BSD: Connection refused):  *Note Error Codes::.

`int ECONNRESET'
     `errno.h' (BSD: Connection reset by peer):  *Note Error Codes::.

`char * ecvt (double VALUE, int NDIGIT, int *DECPT, int *NEG)'
     `stdlib.h' (SVID, Unix98):  *Note System V Number Conversion::.

`char * ecvt_r (double VALUE, int NDIGIT, int *DECPT, int *NEG, char *BUF, size_t LEN)'
     `stdlib.h' (GNU):  *Note System V Number Conversion::.

`int ED'
     `errno.h' (GNU: ?):  *Note Error Codes::.

`int EDEADLK'
     `errno.h' (POSIX.1: Resource deadlock avoided):  *Note Error
     Codes::.

`int EDEADLOCK'
     `errno.h' (Linux???: File locking deadlock error):  *Note Error
     Codes::.

`int EDESTADDRREQ'
     `errno.h' (BSD: Destination address required):  *Note Error
     Codes::.

`int EDIED'
     `errno.h' (GNU: Translator died):  *Note Error Codes::.

`int EDOM'
     `errno.h' (ISO: Numerical argument out of domain):  *Note Error
     Codes::.

`int EDOTDOT'
     `errno.h' (Linux???: RFS specific error):  *Note Error Codes::.

`int EDQUOT'
     `errno.h' (BSD: Disk quota exceeded):  *Note Error Codes::.

`int EEXIST'
     `errno.h' (POSIX.1: File exists):  *Note Error Codes::.

`int EFAULT'
     `errno.h' (POSIX.1: Bad address):  *Note Error Codes::.

`int EFBIG'
     `errno.h' (POSIX.1: File too large):  *Note Error Codes::.

`int EFTYPE'
     `errno.h' (BSD: Inappropriate file type or format):  *Note Error
     Codes::.

`int EGRATUITOUS'
     `errno.h' (GNU: Gratuitous error):  *Note Error Codes::.

`int EGREGIOUS'
     `errno.h' (GNU: You really blew it this time):  *Note Error
     Codes::.

`int EHOSTDOWN'
     `errno.h' (BSD: Host is down):  *Note Error Codes::.

`int EHOSTUNREACH'
     `errno.h' (BSD: No route to host):  *Note Error Codes::.

`int EIDRM'
     `errno.h' (XOPEN: Identifier removed):  *Note Error Codes::.

`int EIEIO'
     `errno.h' (GNU: Computer bought the farm):  *Note Error Codes::.

`int EILSEQ'
     `errno.h' (ISO: Invalid or incomplete multibyte or wide
     character):  *Note Error Codes::.

`int EINPROGRESS'
     `errno.h' (BSD: Operation now in progress):  *Note Error Codes::.

`int EINTR'
     `errno.h' (POSIX.1: Interrupted system call):  *Note Error Codes::.

`int EINVAL'
     `errno.h' (POSIX.1: Invalid argument):  *Note Error Codes::.

`int EIO'
     `errno.h' (POSIX.1: Input/output error):  *Note Error Codes::.

`int EISCONN'
     `errno.h' (BSD: Transport endpoint is already connected):  *Note
     Error Codes::.

`int EISDIR'
     `errno.h' (POSIX.1: Is a directory):  *Note Error Codes::.

`int EISNAM'
     `errno.h' (Linux???: Is a named type file):  *Note Error Codes::.

`int EL2HLT'
     `errno.h' (Obsolete: Level 2 halted):  *Note Error Codes::.

`int EL2NSYNC'
     `errno.h' (Obsolete: Level 2 not synchronized):  *Note Error
     Codes::.

`int EL3HLT'
     `errno.h' (Obsolete: Level 3 halted):  *Note Error Codes::.

`int EL3RST'
     `errno.h' (Obsolete: Level 3 reset):  *Note Error Codes::.

`int ELIBACC'
     `errno.h' (Linux???: Can not access a needed shared library):
     *Note Error Codes::.

`int ELIBBAD'
     `errno.h' (Linux???: Accessing a corrupted shared library):  *Note
     Error Codes::.

`int ELIBEXEC'
     `errno.h' (Linux???: Cannot exec a shared library directly):
     *Note Error Codes::.

`int ELIBMAX'
     `errno.h' (Linux???: Attempting to link in too many shared
     libraries):  *Note Error Codes::.

`int ELIBSCN'
     `errno.h' (Linux???: .lib section in a.out corrupted):  *Note
     Error Codes::.

`int ELNRNG'
     `errno.h' (Linux???: Link number out of range):  *Note Error
     Codes::.

`int ELOOP'
     `errno.h' (BSD: Too many levels of symbolic links):  *Note Error
     Codes::.

`int EMEDIUMTYPE'
     `errno.h' (Linux???: Wrong medium type):  *Note Error Codes::.

`int EMFILE'
     `errno.h' (POSIX.1: Too many open files):  *Note Error Codes::.

`int EMLINK'
     `errno.h' (POSIX.1: Too many links):  *Note Error Codes::.

`EMPTY'
     `utmp.h' (SVID):  *Note Manipulating the Database::.

`EMPTY'
     `utmpx.h' (XPG4.2):  *Note XPG Functions::.

`int EMSGSIZE'
     `errno.h' (BSD: Message too long):  *Note Error Codes::.

`int EMULTIHOP'
     `errno.h' (XOPEN: Multihop attempted):  *Note Error Codes::.

`int ENAMETOOLONG'
     `errno.h' (POSIX.1: File name too long):  *Note Error Codes::.

`int ENAVAIL'
     `errno.h' (Linux???: No XENIX semaphores available):  *Note Error
     Codes::.

`void encrypt (char *BLOCK, int EDFLAG)'
     `crypt.h' (BSD, SVID):  *Note DES Encryption::.

`void encrypt_r (char *BLOCK, int EDFLAG, struct crypt_data * DATA)'
     `crypt.h' (GNU):  *Note DES Encryption::.

`void endfsent (void)'
     `fstab.h' (BSD):  *Note fstab::.

`void endgrent (void)'
     `grp.h' (SVID, BSD):  *Note Scanning All Groups::.

`void endhostent (void)'
     `netdb.h' (BSD):  *Note Host Names::.

`int endmntent (FILE *STREAM)'
     `mntent.h' (BSD):  *Note mtab::.

`void endnetent (void)'
     `netdb.h' (BSD):  *Note Networks Database::.

`void endnetgrent (void)'
     `netdb.h' (BSD):  *Note Lookup Netgroup::.

`void endprotoent (void)'
     `netdb.h' (BSD):  *Note Protocols Database::.

`void endpwent (void)'
     `pwd.h' (SVID, BSD):  *Note Scanning All Users::.

`void endservent (void)'
     `netdb.h' (BSD):  *Note Services Database::.

`void endutent (void)'
     `utmp.h' (SVID):  *Note Manipulating the Database::.

`void endutxent (void)'
     `utmpx.h' (XPG4.2):  *Note XPG Functions::.

`int ENEEDAUTH'
     `errno.h' (BSD: Need authenticator):  *Note Error Codes::.

`int ENETDOWN'
     `errno.h' (BSD: Network is down):  *Note Error Codes::.

`int ENETRESET'
     `errno.h' (BSD: Network dropped connection on reset):  *Note Error
     Codes::.

`int ENETUNREACH'
     `errno.h' (BSD: Network is unreachable):  *Note Error Codes::.

`int ENFILE'
     `errno.h' (POSIX.1: Too many open files in system):  *Note Error
     Codes::.

`int ENOANO'
     `errno.h' (Linux???: No anode):  *Note Error Codes::.

`int ENOBUFS'
     `errno.h' (BSD: No buffer space available):  *Note Error Codes::.

`int ENOCSI'
     `errno.h' (Linux???: No CSI structure available):  *Note Error
     Codes::.

`int ENODATA'
     `errno.h' (XOPEN: No data available):  *Note Error Codes::.

`int ENODEV'
     `errno.h' (POSIX.1: No such device):  *Note Error Codes::.

`int ENOENT'
     `errno.h' (POSIX.1: No such file or directory):  *Note Error
     Codes::.

`int ENOEXEC'
     `errno.h' (POSIX.1: Exec format error):  *Note Error Codes::.

`int ENOLCK'
     `errno.h' (POSIX.1: No locks available):  *Note Error Codes::.

`int ENOLINK'
     `errno.h' (XOPEN: Link has been severed):  *Note Error Codes::.

`int ENOMEDIUM'
     `errno.h' (Linux???: No medium found):  *Note Error Codes::.

`int ENOMEM'
     `errno.h' (POSIX.1: Cannot allocate memory):  *Note Error Codes::.

`int ENOMSG'
     `errno.h' (XOPEN: No message of desired type):  *Note Error
     Codes::.

`int ENONET'
     `errno.h' (Linux???: Machine is not on the network):  *Note Error
     Codes::.

`int ENOPKG'
     `errno.h' (Linux???: Package not installed):  *Note Error Codes::.

`int ENOPROTOOPT'
     `errno.h' (BSD: Protocol not available):  *Note Error Codes::.

`int ENOSPC'
     `errno.h' (POSIX.1: No space left on device):  *Note Error Codes::.

`int ENOSR'
     `errno.h' (XOPEN: Out of streams resources):  *Note Error Codes::.

`int ENOSTR'
     `errno.h' (XOPEN: Device not a stream):  *Note Error Codes::.

`int ENOSYS'
     `errno.h' (POSIX.1: Function not implemented):  *Note Error
     Codes::.

`int ENOTBLK'
     `errno.h' (BSD: Block device required):  *Note Error Codes::.

`int ENOTCONN'
     `errno.h' (BSD: Transport endpoint is not connected):  *Note Error
     Codes::.

`int ENOTDIR'
     `errno.h' (POSIX.1: Not a directory):  *Note Error Codes::.

`int ENOTEMPTY'
     `errno.h' (POSIX.1: Directory not empty):  *Note Error Codes::.

`int ENOTNAM'
     `errno.h' (Linux???: Not a XENIX named type file):  *Note Error
     Codes::.

`int ENOTSOCK'
     `errno.h' (BSD: Socket operation on non-socket):  *Note Error
     Codes::.

`int ENOTSUP'
     `errno.h' (POSIX.1: Not supported):  *Note Error Codes::.

`int ENOTTY'
     `errno.h' (POSIX.1: Inappropriate ioctl for device):  *Note Error
     Codes::.

`int ENOTUNIQ'
     `errno.h' (Linux???: Name not unique on network):  *Note Error
     Codes::.

`char ** environ'
     `unistd.h' (POSIX.1):  *Note Environment Access::.

`error_t envz_add (char **ENVZ, size_t *ENVZ_LEN, const char *NAME, const char *VALUE)'
     `envz.h' (GNU):  *Note Envz Functions::.

`char * envz_entry (const char *ENVZ, size_t ENVZ_LEN, const char *NAME)'
     `envz.h' (GNU):  *Note Envz Functions::.

`char * envz_get (const char *ENVZ, size_t ENVZ_LEN, const char *NAME)'
     `envz.h' (GNU):  *Note Envz Functions::.

`error_t envz_merge (char **ENVZ, size_t *ENVZ_LEN, const char *ENVZ2, size_t ENVZ2_LEN, int OVERRIDE)'
     `envz.h' (GNU):  *Note Envz Functions::.

`void envz_strip (char **ENVZ, size_t *ENVZ_LEN)'
     `envz.h' (GNU):  *Note Envz Functions::.

`int ENXIO'
     `errno.h' (POSIX.1: No such device or address):  *Note Error
     Codes::.

`int EOF'
     `stdio.h' (ISO):  *Note EOF and Errors::.

`int EOPNOTSUPP'
     `errno.h' (BSD: Operation not supported):  *Note Error Codes::.

`int EOVERFLOW'
     `errno.h' (XOPEN: Value too large for defined data type):  *Note
     Error Codes::.

`int EPERM'
     `errno.h' (POSIX.1: Operation not permitted):  *Note Error Codes::.

`int EPFNOSUPPORT'
     `errno.h' (BSD: Protocol family not supported):  *Note Error
     Codes::.

`int EPIPE'
     `errno.h' (POSIX.1: Broken pipe):  *Note Error Codes::.

`int EPROCLIM'
     `errno.h' (BSD: Too many processes):  *Note Error Codes::.

`int EPROCUNAVAIL'
     `errno.h' (BSD: RPC bad procedure for program):  *Note Error
     Codes::.

`int EPROGMISMATCH'
     `errno.h' (BSD: RPC program version wrong):  *Note Error Codes::.

`int EPROGUNAVAIL'
     `errno.h' (BSD: RPC program not available):  *Note Error Codes::.

`int EPROTO'
     `errno.h' (XOPEN: Protocol error):  *Note Error Codes::.

`int EPROTONOSUPPORT'
     `errno.h' (BSD: Protocol not supported):  *Note Error Codes::.

`int EPROTOTYPE'
     `errno.h' (BSD: Protocol wrong type for socket):  *Note Error
     Codes::.

`int EQUIV_CLASS_MAX'
     `limits.h' (POSIX.2):  *Note Utility Limits::.

`double erand48 (unsigned short int XSUBI[3])'
     `stdlib.h' (SVID):  *Note SVID Random::.

`int erand48_r (unsigned short int XSUBI[3], struct drand48_data *BUFFER, double *RESULT)'
     `stdlib.h' (GNU):  *Note SVID Random::.

`int ERANGE'
     `errno.h' (ISO: Numerical result out of range):  *Note Error
     Codes::.

`int EREMCHG'
     `errno.h' (Linux???: Remote address changed):  *Note Error Codes::.

`int EREMOTE'
     `errno.h' (BSD: Object is remote):  *Note Error Codes::.

`int EREMOTEIO'
     `errno.h' (Linux???: Remote I/O error):  *Note Error Codes::.

`int ERESTART'
     `errno.h' (Linux???: Interrupted system call should be restarted):
     *Note Error Codes::.

`double erf (double X)'
     `math.h' (SVID):  *Note Special Functions::.

`double erfc (double X)'
     `math.h' (SVID):  *Note Special Functions::.

`float erfcf (float X)'
     `math.h' (SVID):  *Note Special Functions::.

`long double erfcl (long double X)'
     `math.h' (SVID):  *Note Special Functions::.

`float erff (float X)'
     `math.h' (SVID):  *Note Special Functions::.

`long double erfl (long double X)'
     `math.h' (SVID):  *Note Special Functions::.

`int EROFS'
     `errno.h' (POSIX.1: Read-only file system):  *Note Error Codes::.

`int ERPCMISMATCH'
     `errno.h' (BSD: RPC version wrong):  *Note Error Codes::.

`void err (int STATUS, const char *FORMAT, ...)'
     `err.h' (BSD):  *Note Error Messages::.

`volatile int errno'
     `errno.h' (ISO):  *Note Checking for Errors::.

`void error (int STATUS, int ERRNUM, const char *FORMAT, ...)'
     `error.h' (GNU):  *Note Error Messages::.

`void error_at_line (int STATUS, int ERRNUM, const char *FNAME, unsigned int LINENO, const char *FORMAT, ...)'
     `error.h' (GNU):  *Note Error Messages::.

`unsigned int error_message_count'
     `error.h' (GNU):  *Note Error Messages::.

`int error_one_per_line'
     `error.h' (GNU):  *Note Error Messages::.

`void (* error_print_progname ) (void)'
     `error.h' (GNU):  *Note Error Messages::.

`void errx (int STATUS, const char *FORMAT, ...)'
     `err.h' (BSD):  *Note Error Messages::.

`int ESHUTDOWN'
     `errno.h' (BSD: Cannot send after transport endpoint shutdown):
     *Note Error Codes::.

`int ESOCKTNOSUPPORT'
     `errno.h' (BSD: Socket type not supported):  *Note Error Codes::.

`int ESPIPE'
     `errno.h' (POSIX.1: Illegal seek):  *Note Error Codes::.

`int ESRCH'
     `errno.h' (POSIX.1: No such process):  *Note Error Codes::.

`int ESRMNT'
     `errno.h' (Linux???: Srmount error):  *Note Error Codes::.

`int ESTALE'
     `errno.h' (BSD: Stale NFS file handle):  *Note Error Codes::.

`int ESTRPIPE'
     `errno.h' (Linux???: Streams pipe error):  *Note Error Codes::.

`int ETIME'
     `errno.h' (XOPEN: Timer expired):  *Note Error Codes::.

`int ETIMEDOUT'
     `errno.h' (BSD: Connection timed out):  *Note Error Codes::.

`int ETOOMANYREFS'
     `errno.h' (BSD: Too many references: cannot splice):  *Note Error
     Codes::.

`int ETXTBSY'
     `errno.h' (BSD: Text file busy):  *Note Error Codes::.

`int EUCLEAN'
     `errno.h' (Linux???: Structure needs cleaning):  *Note Error
     Codes::.

`int EUNATCH'
     `errno.h' (Linux???: Protocol driver not attached):  *Note Error
     Codes::.

`int EUSERS'
     `errno.h' (BSD: Too many users):  *Note Error Codes::.

`int EWOULDBLOCK'
     `errno.h' (BSD: Operation would block):  *Note Error Codes::.

`int EXDEV'
     `errno.h' (POSIX.1: Invalid cross-device link):  *Note Error
     Codes::.

`int execl (const char *FILENAME, const char *ARG0, ...)'
     `unistd.h' (POSIX.1):  *Note Executing a File::.

`int execle (const char *FILENAME, const char *ARG0, char *const ENV[], ...)'
     `unistd.h' (POSIX.1):  *Note Executing a File::.

`int execlp (const char *FILENAME, const char *ARG0, ...)'
     `unistd.h' (POSIX.1):  *Note Executing a File::.

`int execv (const char *FILENAME, char *const ARGV[])'
     `unistd.h' (POSIX.1):  *Note Executing a File::.

`int execve (const char *FILENAME, char *const ARGV[], char *const ENV[])'
     `unistd.h' (POSIX.1):  *Note Executing a File::.

`int execvp (const char *FILENAME, char *const ARGV[])'
     `unistd.h' (POSIX.1):  *Note Executing a File::.

`int EXFULL'
     `errno.h' (Linux???: Exchange full):  *Note Error Codes::.

`void _Exit (int STATUS)'
     `stdlib.h' (ISO):  *Note Termination Internals::.

`void _exit (int STATUS)'
     `unistd.h' (POSIX.1):  *Note Termination Internals::.

`void exit (int STATUS)'
     `stdlib.h' (ISO):  *Note Normal Termination::.

`int EXIT_FAILURE'
     `stdlib.h' (ISO):  *Note Exit Status::.

`int EXIT_SUCCESS'
     `stdlib.h' (ISO):  *Note Exit Status::.

`double exp (double X)'
     `math.h' (ISO):  *Note Exponents and Logarithms::.

`double exp10 (double X)'
     `math.h' (GNU):  *Note Exponents and Logarithms::.

`float exp10f (float X)'
     `math.h' (GNU):  *Note Exponents and Logarithms::.

`long double exp10l (long double X)'
     `math.h' (GNU):  *Note Exponents and Logarithms::.

`double exp2 (double X)'
     `math.h' (ISO):  *Note Exponents and Logarithms::.

`float exp2f (float X)'
     `math.h' (ISO):  *Note Exponents and Logarithms::.

`long double exp2l (long double X)'
     `math.h' (ISO):  *Note Exponents and Logarithms::.

`float expf (float X)'
     `math.h' (ISO):  *Note Exponents and Logarithms::.

`long double expl (long double X)'
     `math.h' (ISO):  *Note Exponents and Logarithms::.

`double expm1 (double X)'
     `math.h' (ISO):  *Note Exponents and Logarithms::.

`float expm1f (float X)'
     `math.h' (ISO):  *Note Exponents and Logarithms::.

`long double expm1l (long double X)'
     `math.h' (ISO):  *Note Exponents and Logarithms::.

`int EXPR_NEST_MAX'
     `limits.h' (POSIX.2):  *Note Utility Limits::.

`double fabs (double NUMBER)'
     `math.h' (ISO):  *Note Absolute Value::.

`float fabsf (float NUMBER)'
     `math.h' (ISO):  *Note Absolute Value::.

`long double fabsl (long double NUMBER)'
     `math.h' (ISO):  *Note Absolute Value::.

`size_t __fbufsize (FILE *STREAM)'
     `stdio_ext.h' (GNU):  *Note Controlling Buffering::.

`int fchdir (int FILEDES)'
     `unistd.h' (XPG):  *Note Working Directory::.

`int fchmod (int FILEDES, int MODE)'
     `sys/stat.h' (BSD):  *Note Setting Permissions::.

`int fchown (int FILEDES, int OWNER, int GROUP)'
     `unistd.h' (BSD):  *Note File Owner::.

`int fclean (FILE *STREAM)'
     `stdio.h' (GNU):  *Note Cleaning Streams::.

`int fclose (FILE *STREAM)'
     `stdio.h' (ISO):  *Note Closing Streams::.

`int fcloseall (void)'
     `stdio.h' (GNU):  *Note Closing Streams::.

`int fcntl (int FILEDES, int COMMAND, ...)'
     `fcntl.h' (POSIX.1):  *Note Control Operations::.

`char * fcvt (double VALUE, int NDIGIT, int *DECPT, int *NEG)'
     `stdlib.h' (SVID, Unix98):  *Note System V Number Conversion::.

`char * fcvt_r (double VALUE, int NDIGIT, int *DECPT, int *NEG, char *BUF, size_t LEN)'
     `stdlib.h' (SVID, Unix98):  *Note System V Number Conversion::.

`int fdatasync (int FILDES)'
     `unistd.h' (POSIX):  *Note Synchronizing I/O::.

`int FD_CLOEXEC'
     `fcntl.h' (POSIX.1):  *Note Descriptor Flags::.

`void FD_CLR (int FILEDES, fd_set *SET)'
     `sys/types.h' (BSD):  *Note Waiting for I/O::.

`double fdim (double X, double Y)'
     `math.h' (ISO):  *Note Misc FP Arithmetic::.

`float fdimf (float X, float Y)'
     `math.h' (ISO):  *Note Misc FP Arithmetic::.

`long double fdiml (long double X, long double Y)'
     `math.h' (ISO):  *Note Misc FP Arithmetic::.

`int FD_ISSET (int FILEDES, fd_set *SET)'
     `sys/types.h' (BSD):  *Note Waiting for I/O::.

`FILE * fdopen (int FILEDES, const char *OPENTYPE)'
     `stdio.h' (POSIX.1):  *Note Descriptors and Streams::.

`void FD_SET (int FILEDES, fd_set *SET)'
     `sys/types.h' (BSD):  *Note Waiting for I/O::.

`fd_set'
     `sys/types.h' (BSD):  *Note Waiting for I/O::.

`int FD_SETSIZE'
     `sys/types.h' (BSD):  *Note Waiting for I/O::.

`int F_DUPFD'
     `fcntl.h' (POSIX.1):  *Note Duplicating Descriptors::.

`void FD_ZERO (fd_set *SET)'
     `sys/types.h' (BSD):  *Note Waiting for I/O::.

`int feclearexcept (int EXCEPTS)'
     `fenv.h' (ISO):  *Note Status bit operations::.

`int fedisableexcept (int EXCEPTS)'
     `fenv.h' (GNU):  *Note Control Functions::.

`FE_DIVBYZERO'
     `fenv.h' (ISO):  *Note Status bit operations::.

`FE_DOWNWARD'
     `fenv.h' (ISO):  *Note Rounding::.

`int feenableexcept (int EXCEPTS)'
     `fenv.h' (GNU):  *Note Control Functions::.

`int fegetenv (fenv_t *ENVP)'
     `fenv.h' (ISO):  *Note Control Functions::.

`int fegetexcept (int EXCEPTS)'
     `fenv.h' (GNU):  *Note Control Functions::.

`int fegetexceptflag (fexcept_t *FLAGP, int EXCEPTS)'
     `fenv.h' (ISO):  *Note Status bit operations::.

`int fegetround (void)'
     `fenv.h' (ISO):  *Note Rounding::.

`int feholdexcept (fenv_t *ENVP)'
     `fenv.h' (ISO):  *Note Control Functions::.

`FE_INEXACT'
     `fenv.h' (ISO):  *Note Status bit operations::.

`FE_INVALID'
     `fenv.h' (ISO):  *Note Status bit operations::.

`int feof (FILE *STREAM)'
     `stdio.h' (ISO):  *Note EOF and Errors::.

`int feof_unlocked (FILE *STREAM)'
     `stdio.h' (GNU):  *Note EOF and Errors::.

`FE_OVERFLOW'
     `fenv.h' (ISO):  *Note Status bit operations::.

`int feraiseexcept (int EXCEPTS)'
     `fenv.h' (ISO):  *Note Status bit operations::.

`int ferror (FILE *STREAM)'
     `stdio.h' (ISO):  *Note EOF and Errors::.

`int ferror_unlocked (FILE *STREAM)'
     `stdio.h' (GNU):  *Note EOF and Errors::.

`int fesetenv (const fenv_t *ENVP)'
     `fenv.h' (ISO):  *Note Control Functions::.

`int fesetexceptflag (const fexcept_t *FLAGP, int'
     `fenv.h' (ISO):  *Note Status bit operations::.

`int fesetround (int ROUND)'
     `fenv.h' (ISO):  *Note Rounding::.

`int fetestexcept (int EXCEPTS)'
     `fenv.h' (ISO):  *Note Status bit operations::.

`FE_TONEAREST'
     `fenv.h' (ISO):  *Note Rounding::.

`FE_TOWARDZERO'
     `fenv.h' (ISO):  *Note Rounding::.

`FE_UNDERFLOW'
     `fenv.h' (ISO):  *Note Status bit operations::.

`int feupdateenv (const fenv_t *ENVP)'
     `fenv.h' (ISO):  *Note Control Functions::.

`FE_UPWARD'
     `fenv.h' (ISO):  *Note Rounding::.

`int fflush (FILE *STREAM)'
     `stdio.h' (ISO):  *Note Flushing Buffers::.

`int fflush_unlocked (FILE *STREAM)'
     `stdio.h' (POSIX):  *Note Flushing Buffers::.

`int fgetc (FILE *STREAM)'
     `stdio.h' (ISO):  *Note Character Input::.

`int fgetc_unlocked (FILE *STREAM)'
     `stdio.h' (POSIX):  *Note Character Input::.

`int F_GETFD'
     `fcntl.h' (POSIX.1):  *Note Descriptor Flags::.

`int F_GETFL'
     `fcntl.h' (POSIX.1):  *Note Getting File Status Flags::.

`struct group * fgetgrent (FILE *STREAM)'
     `grp.h' (SVID):  *Note Scanning All Groups::.

`int fgetgrent_r (FILE *STREAM, struct group *RESULT_BUF, char *BUFFER, size_t BUFLEN, struct group **RESULT)'
     `grp.h' (GNU):  *Note Scanning All Groups::.

`int F_GETLK'
     `fcntl.h' (POSIX.1):  *Note File Locks::.

`int F_GETOWN'
     `fcntl.h' (BSD):  *Note Interrupt Input::.

`int fgetpos (FILE *STREAM, fpos_t *POSITION)'
     `stdio.h' (ISO):  *Note Portable Positioning::.

`int fgetpos64 (FILE *STREAM, fpos64_t *POSITION)'
     `stdio.h' (Unix98):  *Note Portable Positioning::.

`struct passwd * fgetpwent (FILE *STREAM)'
     `pwd.h' (SVID):  *Note Scanning All Users::.

`int fgetpwent_r (FILE *STREAM, struct passwd *RESULT_BUF, char *BUFFER, size_t BUFLEN, struct passwd **RESULT)'
     `pwd.h' (GNU):  *Note Scanning All Users::.

`char * fgets (char *S, int COUNT, FILE *STREAM)'
     `stdio.h' (ISO):  *Note Line Input::.

`char * fgets_unlocked (char *S, int COUNT, FILE *STREAM)'
     `stdio.h' (GNU):  *Note Line Input::.

`wint_t fgetwc (FILE *STREAM)'
     `wchar.h' (ISO):  *Note Character Input::.

`wint_t fgetwc_unlocked (FILE *STREAM)'
     `wchar.h' (GNU):  *Note Character Input::.

`wchar_t * fgetws (wchar_t *WS, int COUNT, FILE *STREAM)'
     `wchar.h' (ISO):  *Note Line Input::.

`wchar_t * fgetws_unlocked (wchar_t *WS, int COUNT, FILE *STREAM)'
     `wchar.h' (GNU):  *Note Line Input::.

`FILE'
     `stdio.h' (ISO):  *Note Streams::.

`int FILENAME_MAX'
     `stdio.h' (ISO):  *Note Limits for Files::.

`int fileno (FILE *STREAM)'
     `stdio.h' (POSIX.1):  *Note Descriptors and Streams::.

`int fileno_unlocked (FILE *STREAM)'
     `stdio.h' (GNU):  *Note Descriptors and Streams::.

`int finite (double X)'
     `math.h' (BSD):  *Note Floating Point Classes::.

`int finitef (float X)'
     `math.h' (BSD):  *Note Floating Point Classes::.

`int finitel (long double X)'
     `math.h' (BSD):  *Note Floating Point Classes::.

`int __flbf (FILE *STREAM)'
     `stdio_ext.h' (GNU):  *Note Controlling Buffering::.

`void flockfile (FILE *STREAM)'
     `stdio.h' (POSIX):  *Note Streams and Threads::.

`double floor (double X)'
     `math.h' (ISO):  *Note Rounding Functions::.

`float floorf (float X)'
     `math.h' (ISO):  *Note Rounding Functions::.

`long double floorl (long double X)'
     `math.h' (ISO):  *Note Rounding Functions::.

`FLT_DIG'
     `float.h' (ISO):  *Note Floating Point Parameters::.

`FLT_EPSILON'
     `float.h' (ISO):  *Note Floating Point Parameters::.

`FLT_MANT_DIG'
     `float.h' (ISO):  *Note Floating Point Parameters::.

`FLT_MAX'
     `float.h' (ISO):  *Note Floating Point Parameters::.

`FLT_MAX_10_EXP'
     `float.h' (ISO):  *Note Floating Point Parameters::.

`FLT_MAX_EXP'
     `float.h' (ISO):  *Note Floating Point Parameters::.

`FLT_MIN'
     `float.h' (ISO):  *Note Floating Point Parameters::.

`FLT_MIN_10_EXP'
     `float.h' (ISO):  *Note Floating Point Parameters::.

`FLT_MIN_EXP'
     `float.h' (ISO):  *Note Floating Point Parameters::.

`FLT_RADIX'
     `float.h' (ISO):  *Note Floating Point Parameters::.

`FLT_ROUNDS'
     `float.h' (ISO):  *Note Floating Point Parameters::.

`void _flushlbf (void)'
     `stdio_ext.h' (GNU):  *Note Flushing Buffers::.

`tcflag_t FLUSHO'
     `termios.h' (BSD):  *Note Local Modes::.

`double fma (double X, double Y, double Z)'
     `math.h' (ISO):  *Note Misc FP Arithmetic::.

`float fmaf (float X, float Y, float Z)'
     `math.h' (ISO):  *Note Misc FP Arithmetic::.

`long double fmal (long double X, long double Y, long double Z)'
     `math.h' (ISO):  *Note Misc FP Arithmetic::.

`double fmax (double X, double Y)'
     `math.h' (ISO):  *Note Misc FP Arithmetic::.

`float fmaxf (float X, float Y)'
     `math.h' (ISO):  *Note Misc FP Arithmetic::.

`long double fmaxl (long double X, long double Y)'
     `math.h' (ISO):  *Note Misc FP Arithmetic::.

`FILE * fmemopen (void *BUF, size_t SIZE, const char *OPENTYPE)'
     `stdio.h' (GNU):  *Note String Streams::.

`double fmin (double X, double Y)'
     `math.h' (ISO):  *Note Misc FP Arithmetic::.

`float fminf (float X, float Y)'
     `math.h' (ISO):  *Note Misc FP Arithmetic::.

`long double fminl (long double X, long double Y)'
     `math.h' (ISO):  *Note Misc FP Arithmetic::.

`double fmod (double NUMERATOR, double DENOMINATOR)'
     `math.h' (ISO):  *Note Remainder Functions::.

`float fmodf (float NUMERATOR, float DENOMINATOR)'
     `math.h' (ISO):  *Note Remainder Functions::.

`long double fmodl (long double NUMERATOR, long double DENOMINATOR)'
     `math.h' (ISO):  *Note Remainder Functions::.

`int fmtmsg (long int CLASSIFICATION, const char *LABEL, int SEVERITY, const char *TEXT, const char *ACTION, const char *TAG)'
     `fmtmsg.h' (XPG):  *Note Printing Formatted Messages::.

`int fnmatch (const char *PATTERN, const char *STRING, int FLAGS)'
     `fnmatch.h' (POSIX.2):  *Note Wildcard Matching::.

`FNM_CASEFOLD'
     `fnmatch.h' (GNU):  *Note Wildcard Matching::.

`FNM_EXTMATCH'
     `fnmatch.h' (GNU):  *Note Wildcard Matching::.

`FNM_FILE_NAME'
     `fnmatch.h' (GNU):  *Note Wildcard Matching::.

`FNM_LEADING_DIR'
     `fnmatch.h' (GNU):  *Note Wildcard Matching::.

`FNM_NOESCAPE'
     `fnmatch.h' (POSIX.2):  *Note Wildcard Matching::.

`FNM_PATHNAME'
     `fnmatch.h' (POSIX.2):  *Note Wildcard Matching::.

`FNM_PERIOD'
     `fnmatch.h' (POSIX.2):  *Note Wildcard Matching::.

`int F_OK'
     `unistd.h' (POSIX.1):  *Note Testing File Access::.

`FILE * fopen (const char *FILENAME, const char *OPENTYPE)'
     `stdio.h' (ISO):  *Note Opening Streams::.

`FILE * fopen64 (const char *FILENAME, const char *OPENTYPE)'
     `stdio.h' (Unix98):  *Note Opening Streams::.

`FILE * fopencookie (void *COOKIE, const char *OPENTYPE, cookie_io_functions_t IO-FUNCTIONS)'
     `stdio.h' (GNU):  *Note Streams and Cookies::.

`int FOPEN_MAX'
     `stdio.h' (ISO):  *Note Opening Streams::.

`pid_t fork (void)'
     `unistd.h' (POSIX.1):  *Note Creating a Process::.

`int forkpty (int *AMASTER, char *NAME, struct termios *TERMP, struct winsize *WINP)'
     `pty.h' (BSD):  *Note Pseudo-Terminal Pairs::.

`long int fpathconf (int FILEDES, int PARAMETER)'
     `unistd.h' (POSIX.1):  *Note Pathconf::.

`int fpclassify (_float-type_ X)'
     `math.h' (ISO):  *Note Floating Point Classes::.

`FPE_DECOVF_TRAP'
     `signal.h' (BSD):  *Note Program Error Signals::.

`FPE_FLTDIV_FAULT'
     `signal.h' (BSD):  *Note Program Error Signals::.

`FPE_FLTDIV_TRAP'
     `signal.h' (BSD):  *Note Program Error Signals::.

`FPE_FLTOVF_FAULT'
     `signal.h' (BSD):  *Note Program Error Signals::.

`FPE_FLTOVF_TRAP'
     `signal.h' (BSD):  *Note Program Error Signals::.

`FPE_FLTUND_FAULT'
     `signal.h' (BSD):  *Note Program Error Signals::.

`FPE_FLTUND_TRAP'
     `signal.h' (BSD):  *Note Program Error Signals::.

`FPE_INTDIV_TRAP'
     `signal.h' (BSD):  *Note Program Error Signals::.

`FPE_INTOVF_TRAP'
     `signal.h' (BSD):  *Note Program Error Signals::.

`size_t __fpending (FILE *STREAM) The `__fpending''
     `stdio_ext.h' (GNU):  *Note Controlling Buffering::.

`FPE_SUBRNG_TRAP'
     `signal.h' (BSD):  *Note Program Error Signals::.

`int FP_ILOGB0'
     `math.h' (ISO):  *Note Exponents and Logarithms::.

`int FP_ILOGBNAN'
     `math.h' (ISO):  *Note Exponents and Logarithms::.

`fpos64_t'
     `stdio.h' (Unix98):  *Note Portable Positioning::.

`fpos_t'
     `stdio.h' (ISO):  *Note Portable Positioning::.

`int fprintf (FILE *STREAM, const char *TEMPLATE, ...)'
     `stdio.h' (ISO):  *Note Formatted Output Functions::.

`void __fpurge (FILE *STREAM)'
     `stdio_ext.h' (GNU):  *Note Flushing Buffers::.

`int fputc (int C, FILE *STREAM)'
     `stdio.h' (ISO):  *Note Simple Output::.

`int fputc_unlocked (int C, FILE *STREAM)'
     `stdio.h' (POSIX):  *Note Simple Output::.

`int fputs (const char *S, FILE *STREAM)'
     `stdio.h' (ISO):  *Note Simple Output::.

`int fputs_unlocked (const char *S, FILE *STREAM)'
     `stdio.h' (GNU):  *Note Simple Output::.

`wint_t fputwc (wchar_t WC, FILE *STREAM)'
     `wchar.h' (ISO):  *Note Simple Output::.

`wint_t fputwc_unlocked (wint_t WC, FILE *STREAM)'
     `wchar.h' (POSIX):  *Note Simple Output::.

`int fputws (const wchar_t *WS, FILE *STREAM)'
     `wchar.h' (ISO):  *Note Simple Output::.

`int fputws_unlocked (const wchar_t *WS, FILE *STREAM)'
     `wchar.h' (GNU):  *Note Simple Output::.

`F_RDLCK'
     `fcntl.h' (POSIX.1):  *Note File Locks::.

`size_t fread (void *DATA, size_t SIZE, size_t COUNT, FILE *STREAM)'
     `stdio.h' (ISO):  *Note Block Input/Output::.

`int __freadable (FILE *STREAM)'
     `stdio_ext.h' (GNU):  *Note Opening Streams::.

`int __freading (FILE *STREAM)'
     `stdio_ext.h' (GNU):  *Note Opening Streams::.

`size_t fread_unlocked (void *DATA, size_t SIZE, size_t COUNT, FILE *STREAM)'
     `stdio.h' (GNU):  *Note Block Input/Output::.

`void free (void *PTR)'
     `malloc.h', `stdlib.h' (ISO):  *Note Freeing after Malloc::.

`__free_hook'
     `malloc.h' (GNU):  *Note Hooks for Malloc::.

`FILE * freopen (const char *FILENAME, const char *OPENTYPE, FILE *STREAM)'
     `stdio.h' (ISO):  *Note Opening Streams::.

`FILE * freopen64 (const char *FILENAME, const char *OPENTYPE, FILE *STREAM)'
     `stdio.h' (Unix98):  *Note Opening Streams::.

`double frexp (double VALUE, int *EXPONENT)'
     `math.h' (ISO):  *Note Normalization Functions::.

`float frexpf (float VALUE, int *EXPONENT)'
     `math.h' (ISO):  *Note Normalization Functions::.

`long double frexpl (long double VALUE, int *EXPONENT)'
     `math.h' (ISO):  *Note Normalization Functions::.

`int fscanf (FILE *STREAM, const char *TEMPLATE, ...)'
     `stdio.h' (ISO):  *Note Formatted Input Functions::.

`int fseek (FILE *STREAM, long int OFFSET, int WHENCE)'
     `stdio.h' (ISO):  *Note File Positioning::.

`int fseeko (FILE *STREAM, off_t OFFSET, int WHENCE)'
     `stdio.h' (Unix98):  *Note File Positioning::.

`int fseeko64 (FILE *STREAM, off64_t OFFSET, int WHENCE)'
     `stdio.h' (Unix98):  *Note File Positioning::.

`int F_SETFD'
     `fcntl.h' (POSIX.1):  *Note Descriptor Flags::.

`int F_SETFL'
     `fcntl.h' (POSIX.1):  *Note Getting File Status Flags::.

`int F_SETLK'
     `fcntl.h' (POSIX.1):  *Note File Locks::.

`int F_SETLKW'
     `fcntl.h' (POSIX.1):  *Note File Locks::.

`int __fsetlocking (FILE *STREAM, int TYPE)'
     `stdio_ext.h' (GNU):  *Note Streams and Threads::.

`int F_SETOWN'
     `fcntl.h' (BSD):  *Note Interrupt Input::.

`int fsetpos (FILE *STREAM, const fpos_t *POSITION)'
     `stdio.h' (ISO):  *Note Portable Positioning::.

`int fsetpos64 (FILE *STREAM, const fpos64_t *POSITION)'
     `stdio.h' (Unix98):  *Note Portable Positioning::.

`int fstat (int FILEDES, struct stat *BUF)'
     `sys/stat.h' (POSIX.1):  *Note Reading Attributes::.

`int fstat64 (int FILEDES, struct stat64 *BUF)'
     `sys/stat.h' (Unix98):  *Note Reading Attributes::.

`int fsync (int FILDES)'
     `unistd.h' (POSIX):  *Note Synchronizing I/O::.

`long int ftell (FILE *STREAM)'
     `stdio.h' (ISO):  *Note File Positioning::.

`off_t ftello (FILE *STREAM)'
     `stdio.h' (Unix98):  *Note File Positioning::.

`off64_t ftello64 (FILE *STREAM)'
     `stdio.h' (Unix98):  *Note File Positioning::.

`int ftruncate (int FD, off_t LENGTH)'
     `unistd.h' (POSIX):  *Note File Size::.

`int ftruncate64 (int ID, off64_t LENGTH)'
     `unistd.h' (Unix98):  *Note File Size::.

`int ftrylockfile (FILE *STREAM)'
     `stdio.h' (POSIX):  *Note Streams and Threads::.

`int ftw (const char *FILENAME, __ftw_func_t FUNC, int DESCRIPTORS)'
     `ftw.h' (SVID):  *Note Working with Directory Trees::.

`int ftw64 (const char *FILENAME, __ftw64_func_t FUNC, int DESCRIPTORS)'
     `ftw.h' (Unix98):  *Note Working with Directory Trees::.

`__ftw64_func_t'
     `ftw.h' (GNU):  *Note Working with Directory Trees::.

`__ftw_func_t'
     `ftw.h' (GNU):  *Note Working with Directory Trees::.

`F_UNLCK'
     `fcntl.h' (POSIX.1):  *Note File Locks::.

`void funlockfile (FILE *STREAM)'
     `stdio.h' (POSIX):  *Note Streams and Threads::.

`int fwide (FILE *STREAM, int MODE)'
     `wchar.h' (ISO):  *Note Streams and I18N::.

`int fwprintf (FILE *STREAM, const wchar_t *TEMPLATE, ...)'
     `wchar.h' (ISO):  *Note Formatted Output Functions::.

`int __fwritable (FILE *STREAM)'
     `stdio_ext.h' (GNU):  *Note Opening Streams::.

`size_t fwrite (const void *DATA, size_t SIZE, size_t COUNT, FILE *STREAM)'
     `stdio.h' (ISO):  *Note Block Input/Output::.

`size_t fwrite_unlocked (const void *DATA, size_t SIZE, size_t COUNT, FILE *STREAM)'
     `stdio.h' (GNU):  *Note Block Input/Output::.

`int __fwriting (FILE *STREAM)'
     `stdio_ext.h' (GNU):  *Note Opening Streams::.

`F_WRLCK'
     `fcntl.h' (POSIX.1):  *Note File Locks::.

`int fwscanf (FILE *STREAM, const wchar_t *TEMPLATE, ...)'
     `wchar.h' (ISO):  *Note Formatted Input Functions::.

`double gamma (double X)'
     `math.h' (SVID):  *Note Special Functions::.

`float gammaf (float X)'
     `math.h' (SVID):  *Note Special Functions::.

`long double gammal (long double X)'
     `math.h' (SVID):  *Note Special Functions::.

`void (*__gconv_end_fct) (struct gconv_step *)'
     `gconv.h' (GNU):  *Note glibc iconv Implementation::.

`int (*__gconv_fct) (struct __gconv_step *, struct __gconv_step_data *, const char **, const char *, size_t *, int)'
     `gconv.h' (GNU):  *Note glibc iconv Implementation::.

`int (*__gconv_init_fct) (struct __gconv_step *)'
     `gconv.h' (GNU):  *Note glibc iconv Implementation::.

`char * gcvt (double VALUE, int NDIGIT, char *BUF)'
     `stdlib.h' (SVID, Unix98):  *Note System V Number Conversion::.

`long int get_avphys_pages (void)'
     `sys/sysinfo.h' (GNU):  *Note Query Memory Parameters::.

`int getc (FILE *STREAM)'
     `stdio.h' (ISO):  *Note Character Input::.

`int getchar (void)'
     `stdio.h' (ISO):  *Note Character Input::.

`int getchar_unlocked (void)'
     `stdio.h' (POSIX):  *Note Character Input::.

`int getcontext (ucontext_t *UCP)'
     `ucontext.h' (SVID):  *Note System V contexts::.

`int getc_unlocked (FILE *STREAM)'
     `stdio.h' (POSIX):  *Note Character Input::.

`char * get_current_dir_name (void)'
     `unistd.h' (GNU):  *Note Working Directory::.

`char * getcwd (char *BUFFER, size_t SIZE)'
     `unistd.h' (POSIX.1):  *Note Working Directory::.

`struct tm * getdate (const char *STRING)'
     `time.h' (Unix98):  *Note General Time String Parsing::.

`getdate_err'
     `time.h' (Unix98):  *Note General Time String Parsing::.

`int getdate_r (const char *STRING, struct tm *TP)'
     `time.h' (GNU):  *Note General Time String Parsing::.

`ssize_t getdelim (char **LINEPTR, size_t *N, int DELIMITER, FILE *STREAM)'
     `stdio.h' (GNU):  *Note Line Input::.

`int getdomainnname (char *NAME, size_t LENGTH)'
     `unistd.h' (???):  *Note Host Identification::.

`gid_t getegid (void)'
     `unistd.h' (POSIX.1):  *Note Reading Persona::.

`char * getenv (const char *NAME)'
     `stdlib.h' (ISO):  *Note Environment Access::.

`uid_t geteuid (void)'
     `unistd.h' (POSIX.1):  *Note Reading Persona::.

`struct fstab * getfsent (void)'
     `fstab.h' (BSD):  *Note fstab::.

`struct fstab * getfsfile (const char *NAME)'
     `fstab.h' (BSD):  *Note fstab::.

`struct fstab * getfsspec (const char *NAME)'
     `fstab.h' (BSD):  *Note fstab::.

`gid_t getgid (void)'
     `unistd.h' (POSIX.1):  *Note Reading Persona::.

`struct group * getgrent (void)'
     `grp.h' (SVID, BSD):  *Note Scanning All Groups::.

`int getgrent_r (struct group *RESULT_BUF, char *BUFFER, size_t BUFLEN, struct group **RESULT)'
     `grp.h' (GNU):  *Note Scanning All Groups::.

`struct group * getgrgid (gid_t GID)'
     `grp.h' (POSIX.1):  *Note Lookup Group::.

`int getgrgid_r (gid_t GID, struct group *RESULT_BUF, char *BUFFER, size_t BUFLEN, struct group **RESULT)'
     `grp.h' (POSIX.1c):  *Note Lookup Group::.

`struct group * getgrnam (const char *NAME)'
     `grp.h' (SVID, BSD):  *Note Lookup Group::.

`int getgrnam_r (const char *NAME, struct group *RESULT_BUF, char *BUFFER, size_t BUFLEN, struct group **RESULT)'
     `grp.h' (POSIX.1c):  *Note Lookup Group::.

`int getgrouplist (const char *USER, gid_t GROUP, gid_t *GROUPS, int *NGROUPS)'
     `grp.h' (BSD):  *Note Setting Groups::.

`int getgroups (int COUNT, gid_t *GROUPS)'
     `unistd.h' (POSIX.1):  *Note Reading Persona::.

`struct hostent * gethostbyaddr (const char *ADDR, size_t LENGTH, int FORMAT)'
     `netdb.h' (BSD):  *Note Host Names::.

`int gethostbyaddr_r (const char *ADDR, size_t LENGTH, int FORMAT, struct hostent *restrict RESULT_BUF, char *restrict BUF, size_t BUFLEN, struct hostent **restrict RESULT, int *restrict H_ERRNOP)'
     `netdb.h' (GNU):  *Note Host Names::.

`struct hostent * gethostbyname (const char *NAME)'
     `netdb.h' (BSD):  *Note Host Names::.

`struct hostent * gethostbyname2 (const char *NAME, int AF)'
     `netdb.h' (IPv6 Basic API):  *Note Host Names::.

`int gethostbyname2_r (const char *NAME, int AF, struct hostent *restrict RESULT_BUF, char *restrict BUF, size_t BUFLEN, struct hostent **restrict RESULT, int *restrict H_ERRNOP)'
     `netdb.h' (GNU):  *Note Host Names::.

`int gethostbyname_r (const char *restrict NAME, struct hostent *restrict RESULT_BUF, char *restrict BUF, size_t BUFLEN, struct hostent **restrict RESULT, int *restrict H_ERRNOP)'
     `netdb.h' (GNU):  *Note Host Names::.

`struct hostent * gethostent (void)'
     `netdb.h' (BSD):  *Note Host Names::.

`long int gethostid (void)'
     `unistd.h' (BSD):  *Note Host Identification::.

`int gethostname (char *NAME, size_t SIZE)'
     `unistd.h' (BSD):  *Note Host Identification::.

`int getitimer (int WHICH, struct itimerval *OLD)'
     `sys/time.h' (BSD):  *Note Setting an Alarm::.

`ssize_t getline (char **LINEPTR, size_t *N, FILE *STREAM)'
     `stdio.h' (GNU):  *Note Line Input::.

`int getloadavg (double LOADAVG[], int NELEM)'
     `stdlib.h' (BSD):  *Note Processor Resources::.

`char * getlogin (void)'
     `unistd.h' (POSIX.1):  *Note Who Logged In::.

`struct mntent * getmntent (FILE *STREAM)'
     `mntent.h' (BSD):  *Note mtab::.

`struct mntent * getmntent_r (FILE *STREAM, struct mentent *RESULT, char *BUFFER, int BUFSIZE)'
     `mntent.h' (BSD):  *Note mtab::.

`struct netent * getnetbyaddr (unsigned long int NET, int TYPE)'
     `netdb.h' (BSD):  *Note Networks Database::.

`struct netent * getnetbyname (const char *NAME)'
     `netdb.h' (BSD):  *Note Networks Database::.

`struct netent * getnetent (void)'
     `netdb.h' (BSD):  *Note Networks Database::.

`int getnetgrent (char **HOSTP, char **USERP, char **DOMAINP)'
     `netdb.h' (BSD):  *Note Lookup Netgroup::.

`int getnetgrent_r (char **HOSTP, char **USERP, char **DOMAINP, char *BUFFER, int BUFLEN)'
     `netdb.h' (GNU):  *Note Lookup Netgroup::.

`int get_nprocs (void)'
     `sys/sysinfo.h' (GNU):  *Note Processor Resources::.

`int get_nprocs_conf (void)'
     `sys/sysinfo.h' (GNU):  *Note Processor Resources::.

`int getopt (int ARGC, char **ARGV, const char *OPTIONS)'
     `unistd.h' (POSIX.2):  *Note Using Getopt::.

`int getopt_long (int ARGC, char *const *ARGV, const char *SHORTOPTS, const struct option *LONGOPTS, int *INDEXPTR)'
     `getopt.h' (GNU):  *Note Getopt Long Options::.

`int getopt_long_only (int ARGC, char *const *ARGV, const char *SHORTOPTS, const struct option *LONGOPTS, int *INDEXPTR)'
     `getopt.h' (GNU):  *Note Getopt Long Options::.

`int getpagesize (void)'
     `unistd.h' (BSD):  *Note Query Memory Parameters::.

`char * getpass (const char *PROMPT)'
     `unistd.h' (BSD):  *Note getpass::.

`int getpeername (int SOCKET, struct sockaddr *ADDR, socklen_t *LENGTH-PTR)'
     `sys/socket.h' (BSD):  *Note Who is Connected::.

`int getpgid (pid_t PID)'
     `unistd.h' (SVID):  *Note Process Group Functions::.

`pid_t getpgrp (pid_t PID)'
     `unistd.h' (BSD):  *Note Process Group Functions::.

`pid_t getpgrp (void)'
     `unistd.h' (POSIX.1):  *Note Process Group Functions::.

`long int get_phys_pages (void)'
     `sys/sysinfo.h' (GNU):  *Note Query Memory Parameters::.

`pid_t getpid (void)'
     `unistd.h' (POSIX.1):  *Note Process Identification::.

`pid_t getppid (void)'
     `unistd.h' (POSIX.1):  *Note Process Identification::.

`int getpriority (int CLASS, int ID)'
     `sys/resource.h' (BSD,POSIX):  *Note Traditional Scheduling
     Functions::.

`struct protoent * getprotobyname (const char *NAME)'
     `netdb.h' (BSD):  *Note Protocols Database::.

`struct protoent * getprotobynumber (int PROTOCOL)'
     `netdb.h' (BSD):  *Note Protocols Database::.

`struct protoent * getprotoent (void)'
     `netdb.h' (BSD):  *Note Protocols Database::.

`int getpt (void)'
     `stdlib.h' (GNU):  *Note Allocation::.

`struct passwd * getpwent (void)'
     `pwd.h' (POSIX.1):  *Note Scanning All Users::.

`int getpwent_r (struct passwd *RESULT_BUF, char *BUFFER, int BUFLEN, struct passwd **RESULT)'
     `pwd.h' (GNU):  *Note Scanning All Users::.

`struct passwd * getpwnam (const char *NAME)'
     `pwd.h' (POSIX.1):  *Note Lookup User::.

`int getpwnam_r (const char *NAME, struct passwd *RESULT_BUF, char *BUFFER, size_t BUFLEN, struct passwd **RESULT)'
     `pwd.h' (POSIX.1c):  *Note Lookup User::.

`struct passwd * getpwuid (uid_t UID)'
     `pwd.h' (POSIX.1):  *Note Lookup User::.

`int getpwuid_r (uid_t UID, struct passwd *RESULT_BUF, char *BUFFER, size_t BUFLEN, struct passwd **RESULT)'
     `pwd.h' (POSIX.1c):  *Note Lookup User::.

`int getrlimit (int RESOURCE, struct rlimit *RLP)'
     `sys/resource.h' (BSD):  *Note Limits on Resources::.

`int getrlimit64 (int RESOURCE, struct rlimit64 *RLP)'
     `sys/resource.h' (Unix98):  *Note Limits on Resources::.

`int getrusage (int PROCESSES, struct rusage *RUSAGE)'
     `sys/resource.h' (BSD):  *Note Resource Usage::.

`char * gets (char *S)'
     `stdio.h' (ISO):  *Note Line Input::.

`struct servent * getservbyname (const char *NAME, const char *PROTO)'
     `netdb.h' (BSD):  *Note Services Database::.

`struct servent * getservbyport (int PORT, const char *PROTO)'
     `netdb.h' (BSD):  *Note Services Database::.

`struct servent * getservent (void)'
     `netdb.h' (BSD):  *Note Services Database::.

`pid_t getsid (pid_t PID)'
     `unistd.h' (SVID):  *Note Process Group Functions::.

`int getsockname (int SOCKET, struct sockaddr *ADDR, socklen_t *LENGTH-PTR)'
     `sys/socket.h' (BSD):  *Note Reading Address::.

`int getsockopt (int SOCKET, int LEVEL, int OPTNAME, void *OPTVAL, socklen_t *OPTLEN-PTR)'
     `sys/socket.h' (BSD):  *Note Socket Option Functions::.

`int getsubopt (char **OPTIONP, const char* const *TOKENS, char **VALUEP)'
     `stdlib.h' (stdlib.h):  *Note Suboptions Example: Suboptions.

`char * gettext (const char *MSGID)'
     `libintl.h' (GNU):  *Note Translation with gettext::.

`int gettimeofday (struct timeval *TP, struct timezone *TZP)'
     `sys/time.h' (BSD):  *Note High-Resolution Calendar::.

`uid_t getuid (void)'
     `unistd.h' (POSIX.1):  *Note Reading Persona::.

`mode_t getumask (void)'
     `sys/stat.h' (GNU):  *Note Setting Permissions::.

`struct utmp * getutent (void)'
     `utmp.h' (SVID):  *Note Manipulating the Database::.

`int getutent_r (struct utmp *BUFFER, struct utmp **RESULT)'
     `utmp.h' (GNU):  *Note Manipulating the Database::.

`struct utmp * getutid (const struct utmp *ID)'
     `utmp.h' (SVID):  *Note Manipulating the Database::.

`int getutid_r (const struct utmp *ID, struct utmp *BUFFER, struct utmp **RESULT)'
     `utmp.h' (GNU):  *Note Manipulating the Database::.

`struct utmp * getutline (const struct utmp *LINE)'
     `utmp.h' (SVID):  *Note Manipulating the Database::.

`int getutline_r (const struct utmp *LINE, struct utmp *BUFFER, struct utmp **RESULT)'
     `utmp.h' (GNU):  *Note Manipulating the Database::.

`int getutmp (const struct utmpx *utmpx, struct utmp *utmp)'
     `utmp.h' (GNU):  *Note XPG Functions::.

`int getutmpx (const struct utmp *utmp, struct utmpx *utmpx)'
     `utmp.h' (GNU):  *Note XPG Functions::.

`struct utmpx * getutxent (void)'
     `utmpx.h' (XPG4.2):  *Note XPG Functions::.

`struct utmpx * getutxid (const struct utmpx *ID)'
     `utmpx.h' (XPG4.2):  *Note XPG Functions::.

`struct utmpx * getutxline (const struct utmpx *LINE)'
     `utmpx.h' (XPG4.2):  *Note XPG Functions::.

`int getw (FILE *STREAM)'
     `stdio.h' (SVID):  *Note Character Input::.

`wint_t getwc (FILE *STREAM)'
     `wchar.h' (ISO):  *Note Character Input::.

`wint_t getwchar (void)'
     `wchar.h' (ISO):  *Note Character Input::.

`wint_t getwchar_unlocked (void)'
     `wchar.h' (GNU):  *Note Character Input::.

`wint_t getwc_unlocked (FILE *STREAM)'
     `wchar.h' (GNU):  *Note Character Input::.

`char * getwd (char *BUFFER)'
     `unistd.h' (BSD):  *Note Working Directory::.

`gid_t'
     `sys/types.h' (POSIX.1):  *Note Reading Persona::.

`int glob (const char *PATTERN, int FLAGS, int (*ERRFUNC) (const char *FILENAME, int ERROR-CODE), glob_t *VECTOR-PTR)'
     `glob.h' (POSIX.2):  *Note Calling Glob::.

`int glob64 (const char *PATTERN, int FLAGS, int (*ERRFUNC) (const char *FILENAME, int ERROR-CODE), glob64_t *VECTOR-PTR)'
     `glob.h' (GNU):  *Note Calling Glob::.

`glob64_t'
     `glob.h' (GNU):  *Note Calling Glob::.

`GLOB_ABORTED'
     `glob.h' (POSIX.2):  *Note Calling Glob::.

`GLOB_ALTDIRFUNC'
     `glob.h' (GNU):  *Note More Flags for Globbing::.

`GLOB_APPEND'
     `glob.h' (POSIX.2):  *Note Flags for Globbing::.

`GLOB_BRACE'
     `glob.h' (GNU):  *Note More Flags for Globbing::.

`GLOB_DOOFFS'
     `glob.h' (POSIX.2):  *Note Flags for Globbing::.

`GLOB_ERR'
     `glob.h' (POSIX.2):  *Note Flags for Globbing::.

`void globfree (glob_t *PGLOB)'
     `glob.h' (POSIX.2):  *Note More Flags for Globbing::.

`void globfree64 (glob64_t *PGLOB)'
     `glob.h' (GNU):  *Note More Flags for Globbing::.

`GLOB_MAGCHAR'
     `glob.h' (GNU):  *Note More Flags for Globbing::.

`GLOB_MARK'
     `glob.h' (POSIX.2):  *Note Flags for Globbing::.

`GLOB_NOCHECK'
     `glob.h' (POSIX.2):  *Note Flags for Globbing::.

`GLOB_NOESCAPE'
     `glob.h' (POSIX.2):  *Note Flags for Globbing::.

`GLOB_NOMAGIC'
     `glob.h' (GNU):  *Note More Flags for Globbing::.

`GLOB_NOMATCH'
     `glob.h' (POSIX.2):  *Note Calling Glob::.

`GLOB_NOSORT'
     `glob.h' (POSIX.2):  *Note Flags for Globbing::.

`GLOB_NOSPACE'
     `glob.h' (POSIX.2):  *Note Calling Glob::.

`GLOB_ONLYDIR'
     `glob.h' (GNU):  *Note More Flags for Globbing::.

`GLOB_PERIOD'
     `glob.h' (GNU):  *Note More Flags for Globbing::.

`glob_t'
     `glob.h' (POSIX.2):  *Note Calling Glob::.

`GLOB_TILDE'
     `glob.h' (GNU):  *Note More Flags for Globbing::.

`GLOB_TILDE_CHECK'
     `glob.h' (GNU):  *Note More Flags for Globbing::.

`struct tm * gmtime (const time_t *TIME)'
     `time.h' (ISO):  *Note Broken-down Time::.

`struct tm * gmtime_r (const time_t *TIME, struct tm *RESULTP)'
     `time.h' (POSIX.1c):  *Note Broken-down Time::.

`_GNU_SOURCE'
     (GNU):  *Note Feature Test Macros::.

`int grantpt (int FILEDES)'
     `stdlib.h' (SVID, XPG4.2):  *Note Allocation::.

`int gsignal (int SIGNUM)'
     `signal.h' (SVID):  *Note Signaling Yourself::.

`int gtty (int FILEDES, struct sgttyb *ATTRIBUTES)'
     `sgtty.h' (BSD):  *Note BSD Terminal Modes::.

`char * hasmntopt (const struct mntent *MNT, const char *OPT)'
     `mntent.h' (BSD):  *Note mtab::.

`int hcreate (size_t NEL)'
     `search.h' (SVID):  *Note Hash Search Function::.

`int hcreate_r (size_t NEL, struct hsearch_data *HTAB)'
     `search.h' (GNU):  *Note Hash Search Function::.

`void hdestroy (void)'
     `search.h' (SVID):  *Note Hash Search Function::.

`void hdestroy_r (struct hsearch_data *HTAB)'
     `search.h' (GNU):  *Note Hash Search Function::.

`HOST_NOT_FOUND'
     `netdb.h' (BSD):  *Note Host Names::.

`ENTRY * hsearch (ENTRY ITEM, ACTION ACTION)'
     `search.h' (SVID):  *Note Hash Search Function::.

`int hsearch_r (ENTRY ITEM, ACTION ACTION, ENTRY **RETVAL, struct hsearch_data *HTAB)'
     `search.h' (GNU):  *Note Hash Search Function::.

`uint32_t htonl (uint32_t HOSTLONG)'
     `netinet/in.h' (BSD):  *Note Byte Order::.

`uint16_t htons (uint16_t HOSTSHORT)'
     `netinet/in.h' (BSD):  *Note Byte Order::.

`double HUGE_VAL'
     `math.h' (ISO):  *Note Math Error Reporting::.

`float HUGE_VALF'
     `math.h' (ISO):  *Note Math Error Reporting::.

`long double HUGE_VALL'
     `math.h' (ISO):  *Note Math Error Reporting::.

`tcflag_t HUPCL'
     `termios.h' (POSIX.1):  *Note Control Modes::.

`double hypot (double X, double Y)'
     `math.h' (ISO):  *Note Exponents and Logarithms::.

`float hypotf (float X, float Y)'
     `math.h' (ISO):  *Note Exponents and Logarithms::.

`long double hypotl (long double X, long double Y)'
     `math.h' (ISO):  *Note Exponents and Logarithms::.

`tcflag_t ICANON'
     `termios.h' (POSIX.1):  *Note Local Modes::.

`size_t iconv (iconv_t CD, char **INBUF, size_t *INBYTESLEFT, char **OUTBUF, size_t *OUTBYTESLEFT)'
     `iconv.h' (XPG2):  *Note Generic Conversion Interface::.

`int iconv_close (iconv_t CD)'
     `iconv.h' (XPG2):  *Note Generic Conversion Interface::.

`iconv_t iconv_open (const char *TOCODE, const char *FROMCODE)'
     `iconv.h' (XPG2):  *Note Generic Conversion Interface::.

`iconv_t'
     `iconv.h' (XPG2):  *Note Generic Conversion Interface::.

`tcflag_t ICRNL'
     `termios.h' (POSIX.1):  *Note Input Modes::.

`tcflag_t IEXTEN'
     `termios.h' (POSIX.1):  *Note Local Modes::.

`void if_freenameindex (struct if_nameindex *ptr)'
     `net/if.h' (IPv6 basic API):  *Note Interface Naming::.

`char * if_indextoname (unsigned int ifindex, char *ifname)'
     `net/if.h' (IPv6 basic API):  *Note Interface Naming::.

`struct if_nameindex * if_nameindex (void)'
     `net/if.h' (IPv6 basic API):  *Note Interface Naming::.

`unsigned int if_nametoindex (const char *ifname)'
     `net/if.h' (IPv6 basic API):  *Note Interface Naming::.

`size_t IFNAMSIZ'
     `net/if.h' (net/if.h):  *Note Interface Naming::.

`int IFTODT (mode_t MODE)'
     `dirent.h' (BSD):  *Note Directory Entries::.

`tcflag_t IGNBRK'
     `termios.h' (POSIX.1):  *Note Input Modes::.

`tcflag_t IGNCR'
     `termios.h' (POSIX.1):  *Note Input Modes::.

`tcflag_t IGNPAR'
     `termios.h' (POSIX.1):  *Note Input Modes::.

`int ilogb (double X)'
     `math.h' (ISO):  *Note Exponents and Logarithms::.

`int ilogbf (float X)'
     `math.h' (ISO):  *Note Exponents and Logarithms::.

`int ilogbl (long double X)'
     `math.h' (ISO):  *Note Exponents and Logarithms::.

`intmax_t imaxabs (intmax_t NUMBER)'
     `inttypes.h' (ISO):  *Note Absolute Value::.

`tcflag_t IMAXBEL'
     `termios.h' (BSD):  *Note Input Modes::.

`imaxdiv_t imaxdiv (intmax_t NUMERATOR, intmax_t DENOMINATOR)'
     `inttypes.h' (ISO):  *Note Integer Division::.

`imaxdiv_t'
     `inttypes.h' (ISO):  *Note Integer Division::.

`struct in6_addr in6addr_any'
     `netinet/in.h' (IPv6 basic API):  *Note Host Address Data Type::.

`struct in6_addr in6addr_loopback'
     `netinet/in.h' (IPv6 basic API):  *Note Host Address Data Type::.

`uint32_t INADDR_ANY'
     `netinet/in.h' (BSD):  *Note Host Address Data Type::.

`uint32_t INADDR_BROADCAST'
     `netinet/in.h' (BSD):  *Note Host Address Data Type::.

`uint32_t INADDR_LOOPBACK'
     `netinet/in.h' (BSD):  *Note Host Address Data Type::.

`uint32_t INADDR_NONE'
     `netinet/in.h' (BSD):  *Note Host Address Data Type::.

`char * index (const char *STRING, int C)'
     `string.h' (BSD):  *Note Search Functions::.

`uint32_t inet_addr (const char *NAME)'
     `arpa/inet.h' (BSD):  *Note Host Address Functions::.

`int inet_aton (const char *NAME, struct in_addr *ADDR)'
     `arpa/inet.h' (BSD):  *Note Host Address Functions::.

`uint32_t inet_lnaof (struct in_addr ADDR)'
     `arpa/inet.h' (BSD):  *Note Host Address Functions::.

`struct in_addr inet_makeaddr (uint32_t NET, uint32_t LOCAL)'
     `arpa/inet.h' (BSD):  *Note Host Address Functions::.

`uint32_t inet_netof (struct in_addr ADDR)'
     `arpa/inet.h' (BSD):  *Note Host Address Functions::.

`uint32_t inet_network (const char *NAME)'
     `arpa/inet.h' (BSD):  *Note Host Address Functions::.

`char * inet_ntoa (struct in_addr ADDR)'
     `arpa/inet.h' (BSD):  *Note Host Address Functions::.

`const char * inet_ntop (int AF, const void *CP, char *BUF, size_t LEN)'
     `arpa/inet.h' (IPv6 basic API):  *Note Host Address Functions::.

`int inet_pton (int AF, const char *CP, void *BUF)'
     `arpa/inet.h' (IPv6 basic API):  *Note Host Address Functions::.

`float INFINITY'
     `math.h' (ISO):  *Note Infinity and NaN::.

`int initgroups (const char *USER, gid_t GROUP)'
     `grp.h' (BSD):  *Note Setting Groups::.

`INIT_PROCESS'
     `utmp.h' (SVID):  *Note Manipulating the Database::.

`INIT_PROCESS'
     `utmpx.h' (XPG4.2):  *Note XPG Functions::.

`void * initstate (unsigned int SEED, void *STATE, size_t SIZE)'
     `stdlib.h' (BSD):  *Note BSD Random::.

`int initstate_r (unsigned int SEED, char *restrict STATEBUF, size_t STATELEN, struct random_data *restrict BUF)'
     `stdlib.h' (GNU):  *Note BSD Random::.

`tcflag_t INLCR'
     `termios.h' (POSIX.1):  *Note Input Modes::.

`int innetgr (const char *NETGROUP, const char *HOST, const char *USER, const char *DOMAIN)'
     `netdb.h' (BSD):  *Note Netgroup Membership::.

`ino64_t'
     `sys/types.h' (Unix98):  *Note Attribute Meanings::.

`ino_t'
     `sys/types.h' (POSIX.1):  *Note Attribute Meanings::.

`tcflag_t INPCK'
     `termios.h' (POSIX.1):  *Note Input Modes::.

`INT_MAX'
     `limits.h' (ISO):  *Note Range of Type::.

`INT_MIN'
     `limits.h' (ISO):  *Note Range of Type::.

`int ioctl (int FILEDES, int COMMAND, ...)'
     `sys/ioctl.h' (BSD):  *Note IOCTLs::.

`int _IOFBF'
     `stdio.h' (ISO):  *Note Controlling Buffering::.

`int _IOLBF'
     `stdio.h' (ISO):  *Note Controlling Buffering::.

`int _IONBF'
     `stdio.h' (ISO):  *Note Controlling Buffering::.

`int IPPORT_RESERVED'
     `netinet/in.h' (BSD):  *Note Ports::.

`int IPPORT_USERRESERVED'
     `netinet/in.h' (BSD):  *Note Ports::.

`int isalnum (int C)'
     `ctype.h' (ISO):  *Note Classification of Characters::.

`int isalpha (int C)'
     `ctype.h' (ISO):  *Note Classification of Characters::.

`int isascii (int C)'
     `ctype.h' (SVID, BSD):  *Note Classification of Characters::.

`int isatty (int FILEDES)'
     `unistd.h' (POSIX.1):  *Note Is It a Terminal::.

`int isblank (int C)'
     `ctype.h' (GNU):  *Note Classification of Characters::.

`int iscntrl (int C)'
     `ctype.h' (ISO):  *Note Classification of Characters::.

`int isdigit (int C)'
     `ctype.h' (ISO):  *Note Classification of Characters::.

`int isfinite (_float-type_ X)'
     `math.h' (ISO):  *Note Floating Point Classes::.

`int isgraph (int C)'
     `ctype.h' (ISO):  *Note Classification of Characters::.

`int isgreater (_real-floating_ X, _real-floating_ Y)'
     `math.h' (ISO):  *Note FP Comparison Functions::.

`int isgreaterequal (_real-floating_ X, _real-floating_ Y)'
     `math.h' (ISO):  *Note FP Comparison Functions::.

`tcflag_t ISIG'
     `termios.h' (POSIX.1):  *Note Local Modes::.

`int isinf (double X)'
     `math.h' (BSD):  *Note Floating Point Classes::.

`int isinff (float X)'
     `math.h' (BSD):  *Note Floating Point Classes::.

`int isinfl (long double X)'
     `math.h' (BSD):  *Note Floating Point Classes::.

`int isless (_real-floating_ X, _real-floating_ Y)'
     `math.h' (ISO):  *Note FP Comparison Functions::.

`int islessequal (_real-floating_ X, _real-floating_ Y)'
     `math.h' (ISO):  *Note FP Comparison Functions::.

`int islessgreater (_real-floating_ X, _real-floating_ Y)'
     `math.h' (ISO):  *Note FP Comparison Functions::.

`int islower (int C)'
     `ctype.h' (ISO):  *Note Classification of Characters::.

`int isnan (_float-type_ X)'
     `math.h' (ISO):  *Note Floating Point Classes::.

`int isnan (double X)'
     `math.h' (BSD):  *Note Floating Point Classes::.

`int isnanf (float X)'
     `math.h' (BSD):  *Note Floating Point Classes::.

`int isnanl (long double X)'
     `math.h' (BSD):  *Note Floating Point Classes::.

`int isnormal (_float-type_ X)'
     `math.h' (ISO):  *Note Floating Point Classes::.

`_ISOC99_SOURCE'
     (GNU):  *Note Feature Test Macros::.

`int isprint (int C)'
     `ctype.h' (ISO):  *Note Classification of Characters::.

`int ispunct (int C)'
     `ctype.h' (ISO):  *Note Classification of Characters::.

`int isspace (int C)'
     `ctype.h' (ISO):  *Note Classification of Characters::.

`tcflag_t ISTRIP'
     `termios.h' (POSIX.1):  *Note Input Modes::.

`int isunordered (_real-floating_ X, _real-floating_ Y)'
     `math.h' (ISO):  *Note FP Comparison Functions::.

`int isupper (int C)'
     `ctype.h' (ISO):  *Note Classification of Characters::.

`int iswalnum (wint_t WC)'
     `wctype.h' (ISO):  *Note Classification of Wide Characters::.

`int iswalpha (wint_t WC)'
     `wctype.h' (ISO):  *Note Classification of Wide Characters::.

`int iswblank (wint_t WC)'
     `wctype.h' (GNU):  *Note Classification of Wide Characters::.

`int iswcntrl (wint_t WC)'
     `wctype.h' (ISO):  *Note Classification of Wide Characters::.

`int iswctype (wint_t WC, wctype_t DESC)'
     `wctype.h' (ISO):  *Note Classification of Wide Characters::.

`int iswdigit (wint_t WC)'
     `wctype.h' (ISO):  *Note Classification of Wide Characters::.

`int iswgraph (wint_t WC)'
     `wctype.h' (ISO):  *Note Classification of Wide Characters::.

`int iswlower (wint_t WC)'
     `ctype.h' (ISO):  *Note Classification of Wide Characters::.

`int iswprint (wint_t WC)'
     `wctype.h' (ISO):  *Note Classification of Wide Characters::.

`int iswpunct (wint_t WC)'
     `wctype.h' (ISO):  *Note Classification of Wide Characters::.

`int iswspace (wint_t WC)'
     `wctype.h' (ISO):  *Note Classification of Wide Characters::.

`int iswupper (wint_t WC)'
     `wctype.h' (ISO):  *Note Classification of Wide Characters::.

`int iswxdigit (wint_t WC)'
     `wctype.h' (ISO):  *Note Classification of Wide Characters::.

`int isxdigit (int C)'
     `ctype.h' (ISO):  *Note Classification of Characters::.

`ITIMER_PROF'
     `sys/time.h' (BSD):  *Note Setting an Alarm::.

`ITIMER_REAL'
     `sys/time.h' (BSD):  *Note Setting an Alarm::.

`ITIMER_VIRTUAL'
     `sys/time.h' (BSD):  *Note Setting an Alarm::.

`tcflag_t IXANY'
     `termios.h' (BSD):  *Note Input Modes::.

`tcflag_t IXOFF'
     `termios.h' (POSIX.1):  *Note Input Modes::.

`tcflag_t IXON'
     `termios.h' (POSIX.1):  *Note Input Modes::.

`double j0 (double X)'
     `math.h' (SVID):  *Note Special Functions::.

`float j0f (float X)'
     `math.h' (SVID):  *Note Special Functions::.

`long double j0l (long double X)'
     `math.h' (SVID):  *Note Special Functions::.

`double j1 (double X)'
     `math.h' (SVID):  *Note Special Functions::.

`float j1f (float X)'
     `math.h' (SVID):  *Note Special Functions::.

`long double j1l (long double X)'
     `math.h' (SVID):  *Note Special Functions::.

`jmp_buf'
     `setjmp.h' (ISO):  *Note Non-Local Details::.

`double jn (int n, double X)'
     `math.h' (SVID):  *Note Special Functions::.

`float jnf (int n, float X)'
     `math.h' (SVID):  *Note Special Functions::.

`long double jnl (int n, long double X)'
     `math.h' (SVID):  *Note Special Functions::.

`long int jrand48 (unsigned short int XSUBI[3])'
     `stdlib.h' (SVID):  *Note SVID Random::.

`int jrand48_r (unsigned short int XSUBI[3], struct drand48_data *BUFFER, long int *RESULT)'
     `stdlib.h' (GNU):  *Note SVID Random::.

`int kill (pid_t PID, int SIGNUM)'
     `signal.h' (POSIX.1):  *Note Signaling Another Process::.

`int killpg (int PGID, int SIGNUM)'
     `signal.h' (BSD):  *Note Signaling Another Process::.

`char * l64a (long int N)'
     `stdlib.h' (XPG):  *Note Encode Binary Data::.

`long int labs (long int NUMBER)'
     `stdlib.h' (ISO):  *Note Absolute Value::.

`LANG'
     `locale.h' (ISO):  *Note Locale Categories::.

`LC_ALL'
     `locale.h' (ISO):  *Note Locale Categories::.

`LC_COLLATE'
     `locale.h' (ISO):  *Note Locale Categories::.

`LC_CTYPE'
     `locale.h' (ISO):  *Note Locale Categories::.

`LC_MESSAGES'
     `locale.h' (XOPEN):  *Note Locale Categories::.

`LC_MONETARY'
     `locale.h' (ISO):  *Note Locale Categories::.

`LC_NUMERIC'
     `locale.h' (ISO):  *Note Locale Categories::.

`void lcong48 (unsigned short int PARAM[7])'
     `stdlib.h' (SVID):  *Note SVID Random::.

`int lcong48_r (unsigned short int PARAM[7], struct drand48_data *BUFFER)'
     `stdlib.h' (GNU):  *Note SVID Random::.

`int L_ctermid'
     `stdio.h' (POSIX.1):  *Note Identifying the Terminal::.

`LC_TIME'
     `locale.h' (ISO):  *Note Locale Categories::.

`int L_cuserid'
     `stdio.h' (POSIX.1):  *Note Who Logged In::.

`double ldexp (double VALUE, int EXPONENT)'
     `math.h' (ISO):  *Note Normalization Functions::.

`float ldexpf (float VALUE, int EXPONENT)'
     `math.h' (ISO):  *Note Normalization Functions::.

`long double ldexpl (long double VALUE, int EXPONENT)'
     `math.h' (ISO):  *Note Normalization Functions::.

`ldiv_t ldiv (long int NUMERATOR, long int DENOMINATOR)'
     `stdlib.h' (ISO):  *Note Integer Division::.

`ldiv_t'
     `stdlib.h' (ISO):  *Note Integer Division::.

`void * lfind (const void *KEY, void *BASE, size_t *NMEMB, size_t SIZE, comparison_fn_t COMPAR)'
     `search.h' (SVID):  *Note Array Search Function::.

`double lgamma (double X)'
     `math.h' (SVID):  *Note Special Functions::.

`float lgammaf (float X)'
     `math.h' (SVID):  *Note Special Functions::.

`float lgammaf_r (float X, int *SIGNP)'
     `math.h' (XPG):  *Note Special Functions::.

`long double lgammal (long double X)'
     `math.h' (SVID):  *Note Special Functions::.

`long double lgammal_r (long double X, int *SIGNP)'
     `math.h' (XPG):  *Note Special Functions::.

`double lgamma_r (double X, int *SIGNP)'
     `math.h' (XPG):  *Note Special Functions::.

`L_INCR'
     `sys/file.h' (BSD):  *Note File Positioning::.

`int LINE_MAX'
     `limits.h' (POSIX.2):  *Note Utility Limits::.

`int link (const char *OLDNAME, const char *NEWNAME)'
     `unistd.h' (POSIX.1):  *Note Hard Links::.

`int LINK_MAX'
     `limits.h' (POSIX.1):  *Note Limits for Files::.

`int lio_listio (int MODE, struct aiocb *const LIST[], int NENT, struct sigevent *SIG)'
     `aio.h' (POSIX.1b):  *Note Asynchronous Reads/Writes::.

`int lio_listio64 (int MODE, struct aiocb *const LIST, int NENT, struct sigevent *SIG)'
     `aio.h' (Unix98):  *Note Asynchronous Reads/Writes::.

`int listen (int SOCKET, unsigned int N)'
     `sys/socket.h' (BSD):  *Note Listening::.

`long long int llabs (long long int NUMBER)'
     `stdlib.h' (ISO):  *Note Absolute Value::.

`lldiv_t lldiv (long long int NUMERATOR, long long int DENOMINATOR)'
     `stdlib.h' (ISO):  *Note Integer Division::.

`lldiv_t'
     `stdlib.h' (ISO):  *Note Integer Division::.

`long long int llrint (double X)'
     `math.h' (ISO):  *Note Rounding Functions::.

`long long int llrintf (float X)'
     `math.h' (ISO):  *Note Rounding Functions::.

`long long int llrintl (long double X)'
     `math.h' (ISO):  *Note Rounding Functions::.

`long long int llround (double X)'
     `math.h' (ISO):  *Note Rounding Functions::.

`long long int llroundf (float X)'
     `math.h' (ISO):  *Note Rounding Functions::.

`long long int llroundl (long double X)'
     `math.h' (ISO):  *Note Rounding Functions::.

`struct lconv * localeconv (void)'
     `locale.h' (ISO):  *Note The Lame Way to Locale Data::.

`struct tm * localtime (const time_t *TIME)'
     `time.h' (ISO):  *Note Broken-down Time::.

`struct tm * localtime_r (const time_t *TIME, struct tm *RESULTP)'
     `time.h' (POSIX.1c):  *Note Broken-down Time::.

`double log (double X)'
     `math.h' (ISO):  *Note Exponents and Logarithms::.

`double log10 (double X)'
     `math.h' (ISO):  *Note Exponents and Logarithms::.

`float log10f (float X)'
     `math.h' (ISO):  *Note Exponents and Logarithms::.

`long double log10l (long double X)'
     `math.h' (ISO):  *Note Exponents and Logarithms::.

`double log1p (double X)'
     `math.h' (ISO):  *Note Exponents and Logarithms::.

`float log1pf (float X)'
     `math.h' (ISO):  *Note Exponents and Logarithms::.

`long double log1pl (long double X)'
     `math.h' (ISO):  *Note Exponents and Logarithms::.

`double log2 (double X)'
     `math.h' (ISO):  *Note Exponents and Logarithms::.

`float log2f (float X)'
     `math.h' (ISO):  *Note Exponents and Logarithms::.

`long double log2l (long double X)'
     `math.h' (ISO):  *Note Exponents and Logarithms::.

`double logb (double X)'
     `math.h' (ISO):  *Note Exponents and Logarithms::.

`float logbf (float X)'
     `math.h' (ISO):  *Note Exponents and Logarithms::.

`long double logbl (long double X)'
     `math.h' (ISO):  *Note Exponents and Logarithms::.

`float logf (float X)'
     `math.h' (ISO):  *Note Exponents and Logarithms::.

`void login (const struct utmp *ENTRY)'
     `utmp.h' (BSD):  *Note Logging In and Out::.

`LOGIN_PROCESS'
     `utmp.h' (SVID):  *Note Manipulating the Database::.

`LOGIN_PROCESS'
     `utmpx.h' (XPG4.2):  *Note XPG Functions::.

`int login_tty (int FILEDES)'
     `utmp.h' (BSD):  *Note Logging In and Out::.

`long double logl (long double X)'
     `math.h' (ISO):  *Note Exponents and Logarithms::.

`int logout (const char *UT_LINE)'
     `utmp.h' (BSD):  *Note Logging In and Out::.

`void logwtmp (const char *UT_LINE, const char *UT_NAME, const char *UT_HOST)'
     `utmp.h' (BSD):  *Note Logging In and Out::.

`void longjmp (jmp_buf STATE, int VALUE)'
     `setjmp.h' (ISO):  *Note Non-Local Details::.

`LONG_LONG_MAX'
     `limits.h' (GNU):  *Note Range of Type::.

`LONG_LONG_MIN'
     `limits.h' (GNU):  *Note Range of Type::.

`LONG_MAX'
     `limits.h' (ISO):  *Note Range of Type::.

`LONG_MIN'
     `limits.h' (ISO):  *Note Range of Type::.

`long int lrand48 (void)'
     `stdlib.h' (SVID):  *Note SVID Random::.

`int lrand48_r (struct drand48_data *BUFFER, double *RESULT)'
     `stdlib.h' (GNU):  *Note SVID Random::.

`long int lrint (double X)'
     `math.h' (ISO):  *Note Rounding Functions::.

`long int lrintf (float X)'
     `math.h' (ISO):  *Note Rounding Functions::.

`long int lrintl (long double X)'
     `math.h' (ISO):  *Note Rounding Functions::.

`long int lround (double X)'
     `math.h' (ISO):  *Note Rounding Functions::.

`long int lroundf (float X)'
     `math.h' (ISO):  *Note Rounding Functions::.

`long int lroundl (long double X)'
     `math.h' (ISO):  *Note Rounding Functions::.

`void * lsearch (const void *KEY, void *BASE, size_t *NMEMB, size_t SIZE, comparison_fn_t COMPAR)'
     `search.h' (SVID):  *Note Array Search Function::.

`off_t lseek (int FILEDES, off_t OFFSET, int WHENCE)'
     `unistd.h' (POSIX.1):  *Note File Position Primitive::.

`off64_t lseek64 (int FILEDES, off64_t OFFSET, int WHENCE)'
     `unistd.h' (Unix98):  *Note File Position Primitive::.

`L_SET'
     `sys/file.h' (BSD):  *Note File Positioning::.

`int lstat (const char *FILENAME, struct stat *BUF)'
     `sys/stat.h' (BSD):  *Note Reading Attributes::.

`int lstat64 (const char *FILENAME, struct stat64 *BUF)'
     `sys/stat.h' (Unix98):  *Note Reading Attributes::.

`int L_tmpnam'
     `stdio.h' (ISO):  *Note Temporary Files::.

`L_XTND'
     `sys/file.h' (BSD):  *Note File Positioning::.

`int madvise (void *ADDR, size_t LENGTH, int ADVICE)'
     `sys/mman.h' (POSIX):  *Note Memory-mapped I/O::.

`void makecontext (ucontext_t *UCP, void (*FUNC) (void), int ARGC, ...)'
     `ucontext.h' (SVID):  *Note System V contexts::.

`struct mallinfo mallinfo (void)'
     `malloc.h' (SVID):  *Note Statistics of Malloc::.

`void * malloc (size_t SIZE)'
     `malloc.h', `stdlib.h' (ISO):  *Note Basic Allocation::.

`__malloc_hook'
     `malloc.h' (GNU):  *Note Hooks for Malloc::.

`__malloc_initialize_hook'
     `malloc.h' (GNU):  *Note Hooks for Malloc::.

`int MAX_CANON'
     `limits.h' (POSIX.1):  *Note Limits for Files::.

`int MAX_INPUT'
     `limits.h' (POSIX.1):  *Note Limits for Files::.

`int MAXNAMLEN'
     `dirent.h' (BSD):  *Note Limits for Files::.

`int MAXSYMLINKS'
     `sys/param.h' (BSD):  *Note Symbolic Links::.

`int MB_CUR_MAX'
     `stdlib.h' (ISO):  *Note Selecting the Conversion::.

`int mblen (const char *STRING, size_t SIZE)'
     `stdlib.h' (ISO):  *Note Non-reentrant Character Conversion::.

`int MB_LEN_MAX'
     `limits.h' (ISO):  *Note Selecting the Conversion::.

`size_t mbrlen (const char *restrict S, size_t N, mbstate_t *PS)'
     `wchar.h' (ISO):  *Note Converting a Character::.

`size_t mbrtowc (wchar_t *restrict PWC, const char *restrict S, size_t N, mbstate_t *restrict PS)'
     `wchar.h' (ISO):  *Note Converting a Character::.

`int mbsinit (const mbstate_t *PS)'
     `wchar.h' (ISO):  *Note Keeping the state::.

`size_t mbsnrtowcs (wchar_t *restrict DST, const char **restrict SRC, size_t NMC, size_t LEN, mbstate_t *restrict PS)'
     `wchar.h' (GNU):  *Note Converting Strings::.

`size_t mbsrtowcs (wchar_t *restrict DST, const char **restrict SRC, size_t LEN, mbstate_t *restrict PS)'
     `wchar.h' (ISO):  *Note Converting Strings::.

`mbstate_t'
     `wchar.h' (ISO):  *Note Keeping the state::.

`size_t mbstowcs (wchar_t *WSTRING, const char *STRING, size_t SIZE)'
     `stdlib.h' (ISO):  *Note Non-reentrant String Conversion::.

`int mbtowc (wchar_t *restrict RESULT, const char *restrict STRING, size_t SIZE)'
     `stdlib.h' (ISO):  *Note Non-reentrant Character Conversion::.

`int mcheck (void (*ABORTFN) (enum mcheck_status STATUS))'
     `mcheck.h' (GNU):  *Note Heap Consistency Checking::.

`tcflag_t MDMBUF'
     `termios.h' (BSD):  *Note Control Modes::.

`void * memalign (size_t BOUNDARY, size_t SIZE)'
     `malloc.h', `stdlib.h' (BSD):  *Note Aligned Memory Blocks::.

`__memalign_hook'
     `malloc.h' (GNU):  *Note Hooks for Malloc::.

`void * memccpy (void *restrict TO, const void *restrict FROM, int C, size_t SIZE)'
     `string.h' (SVID):  *Note Copying and Concatenation::.

`void * memchr (const void *BLOCK, int C, size_t SIZE)'
     `string.h' (ISO):  *Note Search Functions::.

`int memcmp (const void *A1, const void *A2, size_t SIZE)'
     `string.h' (ISO):  *Note String/Array Comparison::.

`void * memcpy (void *restrict TO, const void *restrict FROM, size_t SIZE)'
     `string.h' (ISO):  *Note Copying and Concatenation::.

`void * memfrob (void *MEM, size_t LENGTH)'
     `string.h' (GNU):  *Note Trivial Encryption::.

`void * memmem (const void *HAYSTACK, size_t HAYSTACK-LEN,
     const void *NEEDLE, size_t NEEDLE-LEN)'
     `string.h' (GNU):  *Note Search Functions::.

`void * memmove (void *TO, const void *FROM, size_t SIZE)'
     `string.h' (ISO):  *Note Copying and Concatenation::.

`void * mempcpy (void *restrict TO, const void *restrict FROM, size_t SIZE)'
     `string.h' (GNU):  *Note Copying and Concatenation::.

`void * memrchr (const void *BLOCK, int C, size_t SIZE)'
     `string.h' (GNU):  *Note Search Functions::.

`void * memset (void *BLOCK, int C, size_t SIZE)'
     `string.h' (ISO):  *Note Copying and Concatenation::.

`int mkdir (const char *FILENAME, mode_t MODE)'
     `sys/stat.h' (POSIX.1):  *Note Creating Directories::.

`char * mkdtemp (char *TEMPLATE)'
     `stdlib.h' (BSD):  *Note Temporary Files::.

`int mkfifo (const char *FILENAME, mode_t MODE)'
     `sys/stat.h' (POSIX.1):  *Note FIFO Special Files::.

`int mknod (const char *FILENAME, int MODE, int DEV)'
     `sys/stat.h' (BSD):  *Note Making Special Files::.

`int mkstemp (char *TEMPLATE)'
     `stdlib.h' (BSD):  *Note Temporary Files::.

`char * mktemp (char *TEMPLATE)'
     `stdlib.h' (Unix):  *Note Temporary Files::.

`time_t mktime (struct tm *BROKENTIME)'
     `time.h' (ISO):  *Note Broken-down Time::.

`int mlock (const void *ADDR, size_t LEN)'
     `sys/mman.h' (POSIX.1b):  *Note Page Lock Functions::.

`int mlockall (int FLAGS)'
     `sys/mman.h' (POSIX.1b):  *Note Page Lock Functions::.

`void * mmap (void *ADDRESS, size_t LENGTH,int PROTECT, int FLAGS, int FILEDES, off_t OFFSET)'
     `sys/mman.h' (POSIX):  *Note Memory-mapped I/O::.

`void * mmap64 (void *ADDRESS, size_t LENGTH,int PROTECT, int FLAGS, int FILEDES, off64_t OFFSET)'
     `sys/mman.h' (LFS):  *Note Memory-mapped I/O::.

`mode_t'
     `sys/types.h' (POSIX.1):  *Note Attribute Meanings::.

`double modf (double VALUE, double *INTEGER-PART)'
     `math.h' (ISO):  *Note Rounding Functions::.

`float modff (float VALUE, float *INTEGER-PART)'
     `math.h' (ISO):  *Note Rounding Functions::.

`long double modfl (long double VALUE, long double *INTEGER-PART)'
     `math.h' (ISO):  *Note Rounding Functions::.

`int mount (const char *SPECIAL_FILE, const char *DIR, const char *FSTYPE, unsigned long int OPTIONS, const void *DATA)'
     `sys/mount.h' (SVID, BSD):  *Note Mount-Unmount-Remount::.

`long int mrand48 (void)'
     `stdlib.h' (SVID):  *Note SVID Random::.

`int mrand48_r (struct drand48_data *BUFFER, double *RESULT)'
     `stdlib.h' (GNU):  *Note SVID Random::.

`void * mremap (void *ADDRESS, size_t LENGTH, size_t NEW_LENGTH, int FLAG)'
     `sys/mman.h' (GNU):  *Note Memory-mapped I/O::.

`int MSG_DONTROUTE'
     `sys/socket.h' (BSD):  *Note Socket Data Options::.

`int MSG_OOB'
     `sys/socket.h' (BSD):  *Note Socket Data Options::.

`int MSG_PEEK'
     `sys/socket.h' (BSD):  *Note Socket Data Options::.

`int msync (void *ADDRESS, size_t LENGTH, int FLAGS)'
     `sys/mman.h' (POSIX):  *Note Memory-mapped I/O::.

`void mtrace (void)'
     `mcheck.h' (GNU):  *Note Tracing malloc::.

`int munlock (const void *ADDR, size_t LEN)'
     `sys/mman.h' (POSIX.1b):  *Note Page Lock Functions::.

`int munlockall (void)'
     `sys/mman.h' (POSIX.1b):  *Note Page Lock Functions::.

`int munmap (void *ADDR, size_t LENGTH)'
     `sys/mman.h' (POSIX):  *Note Memory-mapped I/O::.

`void muntrace (void)'
     `mcheck.h' (GNU):  *Note Tracing malloc::.

`int NAME_MAX'
     `limits.h' (POSIX.1):  *Note Limits for Files::.

`float NAN'
     `math.h' (GNU):  *Note Infinity and NaN::.

`double nan (const char *TAGP)'
     `math.h' (ISO):  *Note FP Bit Twiddling::.

`float nanf (const char *TAGP)'
     `math.h' (ISO):  *Note FP Bit Twiddling::.

`long double nanl (const char *TAGP)'
     `math.h' (ISO):  *Note FP Bit Twiddling::.

`int nanosleep (const struct timespec *REQUESTED_TIME, struct timespec *REMAINING)'
     `time.h' (POSIX.1):  *Note Sleeping::.

`int NCCS'
     `termios.h' (POSIX.1):  *Note Mode Data Types::.

`double nearbyint (double X)'
     `math.h' (ISO):  *Note Rounding Functions::.

`float nearbyintf (float X)'
     `math.h' (ISO):  *Note Rounding Functions::.

`long double nearbyintl (long double X)'
     `math.h' (ISO):  *Note Rounding Functions::.

`NEW_TIME'
     `utmp.h' (SVID):  *Note Manipulating the Database::.

`NEW_TIME'
     `utmpx.h' (XPG4.2):  *Note XPG Functions::.

`double nextafter (double X, double Y)'
     `math.h' (ISO):  *Note FP Bit Twiddling::.

`float nextafterf (float X, float Y)'
     `math.h' (ISO):  *Note FP Bit Twiddling::.

`long double nextafterl (long double X, long double Y)'
     `math.h' (ISO):  *Note FP Bit Twiddling::.

`double nexttoward (double X, long double Y)'
     `math.h' (ISO):  *Note FP Bit Twiddling::.

`float nexttowardf (float X, long double Y)'
     `math.h' (ISO):  *Note FP Bit Twiddling::.

`long double nexttowardl (long double X, long double Y)'
     `math.h' (ISO):  *Note FP Bit Twiddling::.

`int nftw (const char *FILENAME, __nftw_func_t FUNC, int DESCRIPTORS, int FLAG)'
     `ftw.h' (XPG4.2):  *Note Working with Directory Trees::.

`int nftw64 (const char *FILENAME, __nftw64_func_t FUNC, int DESCRIPTORS, int FLAG)'
     `ftw.h' (Unix98):  *Note Working with Directory Trees::.

`__nftw64_func_t'
     `ftw.h' (GNU):  *Note Working with Directory Trees::.

`__nftw_func_t'
     `ftw.h' (GNU):  *Note Working with Directory Trees::.

`char * ngettext (const char *MSGID1, const char *MSGID2, unsigned long int N)'
     `libintl.h' (GNU):  *Note Advanced gettext functions::.

`int NGROUPS_MAX'
     `limits.h' (POSIX.1):  *Note General Limits::.

`int nice (int INCREMENT)'
     `unistd.h' (BSD):  *Note Traditional Scheduling Functions::.

`nlink_t'
     `sys/types.h' (POSIX.1):  *Note Attribute Meanings::.

`char * nl_langinfo (nl_item ITEM)'
     `langinfo.h' (XOPEN):  *Note The Elegant and Fast Way::.

`NO_ADDRESS'
     `netdb.h' (BSD):  *Note Host Names::.

`tcflag_t NOFLSH'
     `termios.h' (POSIX.1):  *Note Local Modes::.

`tcflag_t NOKERNINFO'
     `termios.h' (BSD):  *Note Local Modes::.

`NO_RECOVERY'
     `netdb.h' (BSD):  *Note Host Names::.

`long int nrand48 (unsigned short int XSUBI[3])'
     `stdlib.h' (SVID):  *Note SVID Random::.

`int nrand48_r (unsigned short int XSUBI[3], struct drand48_data *BUFFER, long int *RESULT)'
     `stdlib.h' (GNU):  *Note SVID Random::.

`int NSIG'
     `signal.h' (BSD):  *Note Standard Signals::.

`uint32_t ntohl (uint32_t NETLONG)'
     `netinet/in.h' (BSD):  *Note Byte Order::.

`uint16_t ntohs (uint16_t NETSHORT)'
     `netinet/in.h' (BSD):  *Note Byte Order::.

`int ntp_adjtime (struct timex *TPTR)'
     `sys/timex.h' (GNU):  *Note High Accuracy Clock::.

`int ntp_gettime (struct ntptimeval *TPTR)'
     `sys/timex.h' (GNU):  *Note High Accuracy Clock::.

`void * NULL'
     `stddef.h' (ISO):  *Note Null Pointer Constant::.

`int O_ACCMODE'
     `fcntl.h' (POSIX.1):  *Note Access Modes::.

`int O_APPEND'
     `fcntl.h' (POSIX.1):  *Note Operating Modes::.

`int O_ASYNC'
     `fcntl.h' (BSD):  *Note Operating Modes::.

`void obstack_1grow (struct obstack *OBSTACK-PTR, char C)'
     `obstack.h' (GNU):  *Note Growing Objects::.

`void obstack_1grow_fast (struct obstack *OBSTACK-PTR, char C)'
     `obstack.h' (GNU):  *Note Extra Fast Growing::.

`int obstack_alignment_mask (struct obstack *OBSTACK-PTR)'
     `obstack.h' (GNU):  *Note Obstacks Data Alignment::.

`void * obstack_alloc (struct obstack *OBSTACK-PTR, int SIZE)'
     `obstack.h' (GNU):  *Note Allocation in an Obstack::.

`obstack_alloc_failed_handler'
     `obstack.h' (GNU):  *Note Preparing for Obstacks::.

`void * obstack_base (struct obstack *OBSTACK-PTR)'
     `obstack.h' (GNU):  *Note Status of an Obstack::.

`void obstack_blank (struct obstack *OBSTACK-PTR, int SIZE)'
     `obstack.h' (GNU):  *Note Growing Objects::.

`void obstack_blank_fast (struct obstack *OBSTACK-PTR, int SIZE)'
     `obstack.h' (GNU):  *Note Extra Fast Growing::.

`int obstack_chunk_size (struct obstack *OBSTACK-PTR)'
     `obstack.h' (GNU):  *Note Obstack Chunks::.

`void * obstack_copy (struct obstack *OBSTACK-PTR, void *ADDRESS, int SIZE)'
     `obstack.h' (GNU):  *Note Allocation in an Obstack::.

`void * obstack_copy0 (struct obstack *OBSTACK-PTR, void *ADDRESS, int SIZE)'
     `obstack.h' (GNU):  *Note Allocation in an Obstack::.

`void * obstack_finish (struct obstack *OBSTACK-PTR)'
     `obstack.h' (GNU):  *Note Growing Objects::.

`void obstack_free (struct obstack *OBSTACK-PTR, void *OBJECT)'
     `obstack.h' (GNU):  *Note Freeing Obstack Objects::.

`void obstack_grow (struct obstack *OBSTACK-PTR, void *DATA, int SIZE)'
     `obstack.h' (GNU):  *Note Growing Objects::.

`void obstack_grow0 (struct obstack *OBSTACK-PTR, void *DATA, int SIZE)'
     `obstack.h' (GNU):  *Note Growing Objects::.

`int obstack_init (struct obstack *OBSTACK-PTR)'
     `obstack.h' (GNU):  *Note Preparing for Obstacks::.

`void obstack_int_grow (struct obstack *OBSTACK-PTR, int DATA)'
     `obstack.h' (GNU):  *Note Growing Objects::.

`void obstack_int_grow_fast (struct obstack *OBSTACK-PTR, int DATA)'
     `obstack.h' (GNU):  *Note Extra Fast Growing::.

`void * obstack_next_free (struct obstack *OBSTACK-PTR)'
     `obstack.h' (GNU):  *Note Status of an Obstack::.

`int obstack_object_size (struct obstack *OBSTACK-PTR)'
     `obstack.h' (GNU):  *Note Growing Objects::.

`int obstack_object_size (struct obstack *OBSTACK-PTR)'
     `obstack.h' (GNU):  *Note Status of an Obstack::.

`int obstack_printf (struct obstack *OBSTACK, const char *TEMPLATE, ...)'
     `stdio.h' (GNU):  *Note Dynamic Output::.

`void obstack_ptr_grow (struct obstack *OBSTACK-PTR, void *DATA)'
     `obstack.h' (GNU):  *Note Growing Objects::.

`void obstack_ptr_grow_fast (struct obstack *OBSTACK-PTR, void *DATA)'
     `obstack.h' (GNU):  *Note Extra Fast Growing::.

`int obstack_room (struct obstack *OBSTACK-PTR)'
     `obstack.h' (GNU):  *Note Extra Fast Growing::.

`int obstack_vprintf (struct obstack *OBSTACK, const char *TEMPLATE, va_list AP)'
     `stdio.h' (GNU):  *Note Variable Arguments Output::.

`int O_CREAT'
     `fcntl.h' (POSIX.1):  *Note Open-time Flags::.

`int O_EXCL'
     `fcntl.h' (POSIX.1):  *Note Open-time Flags::.

`int O_EXEC'
     `fcntl.h' (GNU):  *Note Access Modes::.

`int O_EXLOCK'
     `fcntl.h' (BSD):  *Note Open-time Flags::.

`off64_t'
     `sys/types.h' (Unix98):  *Note File Position Primitive::.

`size_t offsetof (TYPE, MEMBER)'
     `stddef.h' (ISO):  *Note Structure Measurement::.

`off_t'
     `sys/types.h' (POSIX.1):  *Note File Position Primitive::.

`int O_FSYNC'
     `fcntl.h' (BSD):  *Note Operating Modes::.

`int O_IGNORE_CTTY'
     `fcntl.h' (GNU):  *Note Open-time Flags::.

`OLD_TIME'
     `utmp.h' (SVID):  *Note Manipulating the Database::.

`OLD_TIME'
     `utmpx.h' (XPG4.2):  *Note XPG Functions::.

`int O_NDELAY'
     `fcntl.h' (BSD):  *Note Operating Modes::.

`int on_exit (void (*FUNCTION)(int STATUS, void *ARG), void *ARG)'
     `stdlib.h' (SunOS):  *Note Cleanups on Exit::.

`tcflag_t ONLCR'
     `termios.h' (BSD):  *Note Output Modes::.

`int O_NOATIME'
     `fcntl.h' (GNU):  *Note Operating Modes::.

`int O_NOCTTY'
     `fcntl.h' (POSIX.1):  *Note Open-time Flags::.

`tcflag_t ONOEOT'
     `termios.h' (BSD):  *Note Output Modes::.

`int O_NOLINK'
     `fcntl.h' (GNU):  *Note Open-time Flags::.

`int O_NONBLOCK'
     `fcntl.h' (POSIX.1):  *Note Open-time Flags::.

`int O_NONBLOCK'
     `fcntl.h' (POSIX.1):  *Note Operating Modes::.

`int O_NOTRANS'
     `fcntl.h' (GNU):  *Note Open-time Flags::.

`int open (const char *FILENAME, int FLAGS[, mode_t MODE])'
     `fcntl.h' (POSIX.1):  *Note Opening and Closing Files::.

`int open64 (const char *FILENAME, int FLAGS[, mode_t MODE])'
     `fcntl.h' (Unix98):  *Note Opening and Closing Files::.

`DIR * opendir (const char *DIRNAME)'
     `dirent.h' (POSIX.1):  *Note Opening a Directory::.

`void openlog (char *IDENT, int OPTION,'
     `syslog.h' (BSD):  *Note openlog::.

`int OPEN_MAX'
     `limits.h' (POSIX.1):  *Note General Limits::.

`FILE * open_memstream (char **PTR, size_t *SIZELOC)'
     `stdio.h' (GNU):  *Note String Streams::.

`FILE * open_obstack_stream (struct obstack *OBSTACK)'
     `stdio.h' (GNU):  *Note Obstack Streams::.

`int openpty (int *AMASTER, int *ASLAVE, char *NAME, struct termios *TERMP, struct winsize *WINP)'
     `pty.h' (BSD):  *Note Pseudo-Terminal Pairs::.

`tcflag_t OPOST'
     `termios.h' (POSIX.1):  *Note Output Modes::.

`char * optarg'
     `unistd.h' (POSIX.2):  *Note Using Getopt::.

`int opterr'
     `unistd.h' (POSIX.2):  *Note Using Getopt::.

`int optind'
     `unistd.h' (POSIX.2):  *Note Using Getopt::.

`OPTION_ALIAS'
     `argp.h' (GNU):  *Note Argp Option Flags::.

`OPTION_ARG_OPTIONAL'
     `argp.h' (GNU):  *Note Argp Option Flags::.

`OPTION_DOC'
     `argp.h' (GNU):  *Note Argp Option Flags::.

`OPTION_HIDDEN'
     `argp.h' (GNU):  *Note Argp Option Flags::.

`OPTION_NO_USAGE'
     `argp.h' (GNU):  *Note Argp Option Flags::.

`int optopt'
     `unistd.h' (POSIX.2):  *Note Using Getopt::.

`int O_RDONLY'
     `fcntl.h' (POSIX.1):  *Note Access Modes::.

`int O_RDWR'
     `fcntl.h' (POSIX.1):  *Note Access Modes::.

`int O_READ'
     `fcntl.h' (GNU):  *Note Access Modes::.

`int O_SHLOCK'
     `fcntl.h' (BSD):  *Note Open-time Flags::.

`int O_SYNC'
     `fcntl.h' (BSD):  *Note Operating Modes::.

`int O_TRUNC'
     `fcntl.h' (POSIX.1):  *Note Open-time Flags::.

`int O_WRITE'
     `fcntl.h' (GNU):  *Note Access Modes::.

`int O_WRONLY'
     `fcntl.h' (POSIX.1):  *Note Access Modes::.

`tcflag_t OXTABS'
     `termios.h' (BSD):  *Note Output Modes::.

`PA_CHAR'
     `printf.h' (GNU):  *Note Parsing a Template String::.

`PA_DOUBLE'
     `printf.h' (GNU):  *Note Parsing a Template String::.

`PA_FLAG_LONG'
     `printf.h' (GNU):  *Note Parsing a Template String::.

`PA_FLAG_LONG_DOUBLE'
     `printf.h' (GNU):  *Note Parsing a Template String::.

`PA_FLAG_LONG_LONG'
     `printf.h' (GNU):  *Note Parsing a Template String::.

`int PA_FLAG_MASK'
     `printf.h' (GNU):  *Note Parsing a Template String::.

`PA_FLAG_PTR'
     `printf.h' (GNU):  *Note Parsing a Template String::.

`PA_FLAG_SHORT'
     `printf.h' (GNU):  *Note Parsing a Template String::.

`PA_FLOAT'
     `printf.h' (GNU):  *Note Parsing a Template String::.

`PA_INT'
     `printf.h' (GNU):  *Note Parsing a Template String::.

`PA_LAST'
     `printf.h' (GNU):  *Note Parsing a Template String::.

`PA_POINTER'
     `printf.h' (GNU):  *Note Parsing a Template String::.

`tcflag_t PARENB'
     `termios.h' (POSIX.1):  *Note Control Modes::.

`tcflag_t PARMRK'
     `termios.h' (POSIX.1):  *Note Input Modes::.

`tcflag_t PARODD'
     `termios.h' (POSIX.1):  *Note Control Modes::.

`size_t parse_printf_format (const char *TEMPLATE, size_t N, int *ARGTYPES)'
     `printf.h' (GNU):  *Note Parsing a Template String::.

`PA_STRING'
     `printf.h' (GNU):  *Note Parsing a Template String::.

`long int pathconf (const char *FILENAME, int PARAMETER)'
     `unistd.h' (POSIX.1):  *Note Pathconf::.

`int PATH_MAX'
     `limits.h' (POSIX.1):  *Note Limits for Files::.

`int pause ()'
     `unistd.h' (POSIX.1):  *Note Using Pause::.

`_PC_ASYNC_IO'
     `unistd.h' (POSIX.1):  *Note Pathconf::.

`_PC_CHOWN_RESTRICTED'
     `unistd.h' (POSIX.1):  *Note Pathconf::.

`_PC_FILESIZEBITS'
     `unistd.h' (LFS):  *Note Pathconf::.

`_PC_LINK_MAX'
     `unistd.h' (POSIX.1):  *Note Pathconf::.

`int pclose (FILE *STREAM)'
     `stdio.h' (POSIX.2, SVID, BSD):  *Note Pipe to a Subprocess::.

`_PC_MAX_CANON'
     `unistd.h' (POSIX.1):  *Note Pathconf::.

`_PC_MAX_INPUT'
     `unistd.h' (POSIX.1):  *Note Pathconf::.

`_PC_NAME_MAX'
     `unistd.h' (POSIX.1):  *Note Pathconf::.

`_PC_NO_TRUNC'
     `unistd.h' (POSIX.1):  *Note Pathconf::.

`_PC_PATH_MAX'
     `unistd.h' (POSIX.1):  *Note Pathconf::.

`_PC_PIPE_BUF'
     `unistd.h' (POSIX.1):  *Note Pathconf::.

`_PC_PRIO_IO'
     `unistd.h' (POSIX.1):  *Note Pathconf::.

`_PC_REC_INCR_XFER_SIZE'
     `unistd.h' (POSIX.1):  *Note Pathconf::.

`_PC_REC_MAX_XFER_SIZE'
     `unistd.h' (POSIX.1):  *Note Pathconf::.

`_PC_REC_MIN_XFER_SIZE'
     `unistd.h' (POSIX.1):  *Note Pathconf::.

`_PC_REC_XFER_ALIGN'
     `unistd.h' (POSIX.1):  *Note Pathconf::.

`_PC_SOCK_MAXBUF'
     `unistd.h' (POSIX.1g):  *Note Pathconf::.

`_PC_SYNC_IO'
     `unistd.h' (POSIX.1):  *Note Pathconf::.

`_PC_VDISABLE'
     `unistd.h' (POSIX.1):  *Note Pathconf::.

`tcflag_t PENDIN'
     `termios.h' (BSD):  *Note Local Modes::.

`void perror (const char *MESSAGE)'
     `stdio.h' (ISO):  *Note Error Messages::.

`int PF_FILE'
     `sys/socket.h' (GNU):  *Note Local Namespace Details::.

`int PF_INET'
     `sys/socket.h' (BSD):  *Note Internet Namespace::.

`int PF_INET6'
     `sys/socket.h' (X/Open):  *Note Internet Namespace::.

`int PF_LOCAL'
     `sys/socket.h' (POSIX):  *Note Local Namespace Details::.

`int PF_UNIX'
     `sys/socket.h' (BSD):  *Note Local Namespace Details::.

`pid_t'
     `sys/types.h' (POSIX.1):  *Note Process Identification::.

`int pipe (int FILEDES[2])'
     `unistd.h' (POSIX.1):  *Note Creating a Pipe::.

`int PIPE_BUF'
     `limits.h' (POSIX.1):  *Note Limits for Files::.

`FILE * popen (const char *COMMAND, const char *MODE)'
     `stdio.h' (POSIX.2, SVID, BSD):  *Note Pipe to a Subprocess::.

`_POSIX2_BC_BASE_MAX'
     `limits.h' (POSIX.2):  *Note Utility Minimums::.

`_POSIX2_BC_DIM_MAX'
     `limits.h' (POSIX.2):  *Note Utility Minimums::.

`_POSIX2_BC_SCALE_MAX'
     `limits.h' (POSIX.2):  *Note Utility Minimums::.

`_POSIX2_BC_STRING_MAX'
     `limits.h' (POSIX.2):  *Note Utility Minimums::.

`int _POSIX2_C_DEV'
     `unistd.h' (POSIX.2):  *Note System Options::.

`_POSIX2_COLL_WEIGHTS_MAX'
     `limits.h' (POSIX.2):  *Note Utility Minimums::.

`long int _POSIX2_C_VERSION'
     `unistd.h' (POSIX.2):  *Note Version Supported::.

`_POSIX2_EQUIV_CLASS_MAX'
     `limits.h' (POSIX.2):  *Note Utility Minimums::.

`_POSIX2_EXPR_NEST_MAX'
     `limits.h' (POSIX.2):  *Note Utility Minimums::.

`int _POSIX2_FORT_DEV'
     `unistd.h' (POSIX.2):  *Note System Options::.

`int _POSIX2_FORT_RUN'
     `unistd.h' (POSIX.2):  *Note System Options::.

`_POSIX2_LINE_MAX'
     `limits.h' (POSIX.2):  *Note Utility Minimums::.

`int _POSIX2_LOCALEDEF'
     `unistd.h' (POSIX.2):  *Note System Options::.

`_POSIX2_RE_DUP_MAX'
     `limits.h' (POSIX.2):  *Note Minimums::.

`int _POSIX2_SW_DEV'
     `unistd.h' (POSIX.2):  *Note System Options::.

`_POSIX_AIO_LISTIO_MAX'
     `limits.h' (POSIX.1):  *Note Minimums::.

`_POSIX_AIO_MAX'
     `limits.h' (POSIX.1):  *Note Minimums::.

`_POSIX_ARG_MAX'
     `limits.h' (POSIX.1):  *Note Minimums::.

`_POSIX_CHILD_MAX'
     `limits.h' (POSIX.1):  *Note Minimums::.

`int _POSIX_CHOWN_RESTRICTED'
     `unistd.h' (POSIX.1):  *Note Options for Files::.

`_POSIX_C_SOURCE'
     (POSIX.2):  *Note Feature Test Macros::.

`int _POSIX_JOB_CONTROL'
     `unistd.h' (POSIX.1):  *Note System Options::.

`_POSIX_LINK_MAX'
     `limits.h' (POSIX.1):  *Note File Minimums::.

`_POSIX_MAX_CANON'
     `limits.h' (POSIX.1):  *Note File Minimums::.

`_POSIX_MAX_INPUT'
     `limits.h' (POSIX.1):  *Note File Minimums::.

`int posix_memalign (void **MEMPTR, size_t ALIGNMENT, size_t SIZE)'
     `stdlib.h' (POSIX):  *Note Aligned Memory Blocks::.

`_POSIX_NAME_MAX'
     `limits.h' (POSIX.1):  *Note File Minimums::.

`_POSIX_NGROUPS_MAX'
     `limits.h' (POSIX.1):  *Note Minimums::.

`int _POSIX_NO_TRUNC'
     `unistd.h' (POSIX.1):  *Note Options for Files::.

`_POSIX_OPEN_MAX'
     `limits.h' (POSIX.1):  *Note Minimums::.

`_POSIX_PATH_MAX'
     `limits.h' (POSIX.1):  *Note File Minimums::.

`_POSIX_PIPE_BUF'
     `limits.h' (POSIX.1):  *Note File Minimums::.

`POSIX_REC_INCR_XFER_SIZE'
     `limits.h' (POSIX.1):  *Note File Minimums::.

`POSIX_REC_MAX_XFER_SIZE'
     `limits.h' (POSIX.1):  *Note File Minimums::.

`POSIX_REC_MIN_XFER_SIZE'
     `limits.h' (POSIX.1):  *Note File Minimums::.

`POSIX_REC_XFER_ALIGN'
     `limits.h' (POSIX.1):  *Note File Minimums::.

`int _POSIX_SAVED_IDS'
     `unistd.h' (POSIX.1):  *Note System Options::.

`_POSIX_SOURCE'
     (POSIX.1):  *Note Feature Test Macros::.

`_POSIX_SSIZE_MAX'
     `limits.h' (POSIX.1):  *Note Minimums::.

`_POSIX_STREAM_MAX'
     `limits.h' (POSIX.1):  *Note Minimums::.

`_POSIX_TZNAME_MAX'
     `limits.h' (POSIX.1):  *Note Minimums::.

`unsigned char _POSIX_VDISABLE'
     `unistd.h' (POSIX.1):  *Note Options for Files::.

`long int _POSIX_VERSION'
     `unistd.h' (POSIX.1):  *Note Version Supported::.

`double pow (double BASE, double POWER)'
     `math.h' (ISO):  *Note Exponents and Logarithms::.

`double pow10 (double X)'
     `math.h' (GNU):  *Note Exponents and Logarithms::.

`float pow10f (float X)'
     `math.h' (GNU):  *Note Exponents and Logarithms::.

`long double pow10l (long double X)'
     `math.h' (GNU):  *Note Exponents and Logarithms::.

`float powf (float BASE, float POWER)'
     `math.h' (ISO):  *Note Exponents and Logarithms::.

`long double powl (long double BASE, long double POWER)'
     `math.h' (ISO):  *Note Exponents and Logarithms::.

`ssize_t pread (int FILEDES, void *BUFFER, size_t SIZE, off_t OFFSET)'
     `unistd.h' (Unix98):  *Note I/O Primitives::.

`ssize_t pread64 (int FILEDES, void *BUFFER, size_t SIZE, off64_t OFFSET)'
     `unistd.h' (Unix98):  *Note I/O Primitives::.

`int printf (const char *TEMPLATE, ...)'
     `stdio.h' (ISO):  *Note Formatted Output Functions::.

`printf_arginfo_function'
     `printf.h' (GNU):  *Note Defining the Output Handler::.

`printf_function'
     `printf.h' (GNU):  *Note Defining the Output Handler::.

`int printf_size (FILE *FP, const struct printf_info *INFO, const void *const *ARGS)'
     `printf.h' (GNU):  *Note Predefined Printf Handlers::.

`int printf_size_info (const struct printf_info *INFO, size_t N, int *ARGTYPES)'
     `printf.h' (GNU):  *Note Predefined Printf Handlers::.

`PRIO_MAX'
     `sys/resource.h' (BSD):  *Note Traditional Scheduling Functions::.

`PRIO_MIN'
     `sys/resource.h' (BSD):  *Note Traditional Scheduling Functions::.

`PRIO_PGRP'
     `sys/resource.h' (BSD):  *Note Traditional Scheduling Functions::.

`PRIO_PROCESS'
     `sys/resource.h' (BSD):  *Note Traditional Scheduling Functions::.

`PRIO_USER'
     `sys/resource.h' (BSD):  *Note Traditional Scheduling Functions::.

`char * program_invocation_name'
     `errno.h' (GNU):  *Note Error Messages::.

`char * program_invocation_short_name'
     `errno.h' (GNU):  *Note Error Messages::.

`void psignal (int SIGNUM, const char *MESSAGE)'
     `signal.h' (BSD):  *Note Signal Messages::.

`int pthread_atfork (void (*PREPARE)(void), void (*PARENT)(void), void (*CHILD)(void))'
     `pthread.h' (POSIX):  *Note Threads and Fork::.

`int pthread_attr_destroy (pthread_attr_t *ATTR)'
     `pthread.h' (POSIX):  *Note Thread Attributes::.

`int pthread_attr_getattr (const pthread_attr_t *OBJ, int *VALUE)'
     `pthread.h' (POSIX):  *Note Thread Attributes::.

`int pthread_attr_init (pthread_attr_t *ATTR)'
     `pthread.h' (POSIX):  *Note Thread Attributes::.

`int pthread_attr_setattr (pthread_attr_t *OBJ, int VALUE)'
     `pthread.h' (POSIX):  *Note Thread Attributes::.

`int pthread_cancel (pthread_t THREAD)'
     `pthread.h' (POSIX):  *Note Basic Thread Operations::.

`void pthread_cleanup_pop (int EXECUTE)'
     `pthread.h' (POSIX):  *Note Cleanup Handlers::.

`void pthread_cleanup_pop_restore_np (int EXECUTE)'
     `pthread.h' (GNU):  *Note Cleanup Handlers::.

`void pthread_cleanup_push (void (*ROUTINE) (void *), void *ARG)'
     `pthread.h' (POSIX):  *Note Cleanup Handlers::.

`void pthread_cleanup_push_defer_np (void (*ROUTINE) (void *), void *ARG)'
     `pthread.h' (GNU):  *Note Cleanup Handlers::.

`int pthread_condattr_init (pthread_condattr_t *ATTR)'
     `pthread.h' (POSIX):  *Note Condition Variables::.

`int pthread_cond_broadcast (pthread_cond_t *COND)'
     `pthread.h' (POSIX):  *Note Condition Variables::.

`int pthread_cond_destroy (pthread_cond_t *COND)'
     `pthread.h' (POSIX):  *Note Condition Variables::.

`int pthread_cond_init (pthread_cond_t *COND, pthread_condattr_t *cond_ATTR)'
     `pthread.h' (POSIX):  *Note Condition Variables::.

`int pthread_cond_signal (pthread_cond_t *COND)'
     `pthread.h' (POSIX):  *Note Condition Variables::.

`int pthread_cond_timedwait (pthread_cond_t *COND, pthread_mutex_t *MUTEX, const struct timespec *ABSTIME)'
     `pthread.h' (POSIX):  *Note Condition Variables::.

`int pthread_cond_wait (pthread_cond_t *COND, pthread_mutex_t *MUTEX)'
     `pthread.h' (POSIX):  *Note Condition Variables::.

`int pthread_create (pthread_t * THREAD, pthread_attr_t * ATTR, void * (*START_ROUTINE)(void *), void * ARG)'
     `pthread.h' (POSIX):  *Note Basic Thread Operations::.

`int pthread_detach (pthread_t TH)'
     `pthread.h' (POSIX):  *Note Miscellaneous Thread Functions::.

`int pthread_equal (pthread_t thread1, pthread_t thread2)'
     `pthread.h' (POSIX):  *Note Miscellaneous Thread Functions::.

`void pthread_exit (void *RETVAL)'
     `pthread.h' (POSIX):  *Note Basic Thread Operations::.

`int pthread_getconcurrency ()'
     `pthread.h' (POSIX):  *Note Miscellaneous Thread Functions::.

`int pthread_getschedparam (pthread_t target_THREAD, int *POLICY, struct sched_param *PARAM)'
     `pthread.h' (POSIX):  *Note Miscellaneous Thread Functions::.

`void * pthread_getspecific (pthread_key_t KEY)'
     `pthread.h' (POSIX):  *Note Thread-Specific Data::.

`int pthread_join (pthread_t TH, void **thread_RETURN)'
     `pthread.h' (POSIX):  *Note Basic Thread Operations::.

`int pthread_key_create (pthread_key_t *KEY, void (*destr_function) (void *))'
     `pthread.h' (POSIX):  *Note Thread-Specific Data::.

`int pthread_key_delete (pthread_key_t KEY)'
     `pthread.h' (POSIX):  *Note Thread-Specific Data::.

`int pthread_kill (pthread_t THREAD, int SIGNO)'
     `pthread.h' (POSIX):  *Note Threads and Signal Handling::.

`void pthread_kill_other_threads_np (VOID)'
     `pthread.h' (GNU):  *Note Miscellaneous Thread Functions::.

`int pthread_mutexattr_destroy (pthread_mutexattr_t *ATTR)'
     `pthread.h' (POSIX):  *Note Mutexes::.

`int pthread_mutexattr_gettype (const pthread_mutexattr_t *ATTR, int *TYPE)'
     `pthread.h' (POSIX):  *Note Mutexes::.

`int pthread_mutexattr_init (pthread_mutexattr_t *ATTR)'
     `pthread.h' (POSIX):  *Note Mutexes::.

`int pthread_mutexattr_settype (pthread_mutexattr_t *ATTR, int TYPE)'
     `pthread.h' (POSIX):  *Note Mutexes::.

`int pthread_mutex_destroy (pthread_mutex_t *MUTEX)'
     `pthread.h' (POSIX):  *Note Mutexes::.

`int pthread_mutex_init (pthread_mutex_t *MUTEX, const pthread_mutexattr_t *MUTEXATTR)'
     `pthread.h' (POSIX):  *Note Mutexes::.

`int pthread_mutex_lock (pthread_mutex_t *mutex))'
     `pthread.h' (POSIX):  *Note Mutexes::.

`int pthread_mutex_timedlock (pthread_mutex_t *MUTEX, const struct timespec *ABSTIME)'
     `pthread.h' (POSIX):  *Note Mutexes::.

`int pthread_mutex_trylock (pthread_mutex_t *MUTEX)'
     `pthread.h' (POSIX):  *Note Mutexes::.

`int pthread_mutex_unlock (pthread_mutex_t *MUTEX)'
     `pthread.h' (POSIX):  *Note Mutexes::.

`int pthread_once (pthread_once_t *once_CONTROL, void (*INIT_ROUTINE) (void))'
     `pthread.h' (POSIX):  *Note Miscellaneous Thread Functions::.

`pthread_t pthread_self (VOID)'
     `pthread.h' (POSIX):  *Note Miscellaneous Thread Functions::.

`int pthread_setcancelstate (int STATE, int *OLDSTATE)'
     `pthread.h' (POSIX):  *Note Cancellation::.

`int pthread_setcanceltype (int TYPE, int *OLDTYPE)'
     `pthread.h' (POSIX):  *Note Cancellation::.

`int pthread_setconcurrency (int LEVEL)'
     `pthread.h' (POSIX):  *Note Miscellaneous Thread Functions::.

`int pthread_setschedparam (pthread_t target_THREAD, int POLICY, const struct sched_param *PARAM)'
     `pthread.h' (POSIX):  *Note Miscellaneous Thread Functions::.

`int pthread_setspecific (pthread_key_t KEY, const void *POINTER)'
     `pthread.h' (POSIX):  *Note Thread-Specific Data::.

`int pthread_sigmask (int HOW, const sigset_t *NEWMASK, sigset_t *OLDMASK)'
     `pthread.h' (POSIX):  *Note Threads and Signal Handling::.

`void pthread_testcancel (VOID)'
     `pthread.h' (POSIX):  *Note Cancellation::.

`char * P_tmpdir'
     `stdio.h' (SVID):  *Note Temporary Files::.

`ptrdiff_t'
     `stddef.h' (ISO):  *Note Important Data Types::.

`char * ptsname (int FILEDES)'
     `stdlib.h' (SVID, XPG4.2):  *Note Allocation::.

`int ptsname_r (int FILEDES, char *BUF, size_t LEN)'
     `stdlib.h' (GNU):  *Note Allocation::.

`int putc (int C, FILE *STREAM)'
     `stdio.h' (ISO):  *Note Simple Output::.

`int putchar (int C)'
     `stdio.h' (ISO):  *Note Simple Output::.

`int putchar_unlocked (int C)'
     `stdio.h' (POSIX):  *Note Simple Output::.

`int putc_unlocked (int C, FILE *STREAM)'
     `stdio.h' (POSIX):  *Note Simple Output::.

`int putenv (char *STRING)'
     `stdlib.h' (SVID):  *Note Environment Access::.

`int putpwent (const struct passwd *P, FILE *STREAM)'
     `pwd.h' (SVID):  *Note Writing a User Entry::.

`int puts (const char *S)'
     `stdio.h' (ISO):  *Note Simple Output::.

`struct utmp * pututline (const struct utmp *UTMP)'
     `utmp.h' (SVID):  *Note Manipulating the Database::.

`struct utmpx * pututxline (const struct utmpx *UTMP)'
     `utmpx.h' (XPG4.2):  *Note XPG Functions::.

`int putw (int W, FILE *STREAM)'
     `stdio.h' (SVID):  *Note Simple Output::.

`wint_t putwc (wchar_t WC, FILE *STREAM)'
     `wchar.h' (ISO):  *Note Simple Output::.

`wint_t putwchar (wchar_t WC)'
     `wchar.h' (ISO):  *Note Simple Output::.

`wint_t putwchar_unlocked (wchar_t WC)'
     `wchar.h' (GNU):  *Note Simple Output::.

`wint_t putwc_unlocked (wchar_t WC, FILE *STREAM)'
     `wchar.h' (GNU):  *Note Simple Output::.

`ssize_t pwrite (int FILEDES, const void *BUFFER, size_t SIZE, off_t OFFSET)'
     `unistd.h' (Unix98):  *Note I/O Primitives::.

`ssize_t pwrite64 (int FILEDES, const void *BUFFER, size_t SIZE, off64_t OFFSET)'
     `unistd.h' (Unix98):  *Note I/O Primitives::.

`char * qecvt (long double VALUE, int NDIGIT, int *DECPT, int *NEG)'
     `stdlib.h' (GNU):  *Note System V Number Conversion::.

`char * qecvt_r (long double VALUE, int NDIGIT, int *DECPT, int *NEG, char *BUF, size_t LEN)'
     `stdlib.h' (GNU):  *Note System V Number Conversion::.

`char * qfcvt (long double VALUE, int NDIGIT, int *DECPT, int *NEG)'
     `stdlib.h' (GNU):  *Note System V Number Conversion::.

`char * qfcvt_r (long double VALUE, int NDIGIT, int *DECPT, int *NEG, char *BUF, size_t LEN)'
     `stdlib.h' (GNU):  *Note System V Number Conversion::.

`char * qgcvt (long double VALUE, int NDIGIT, char *BUF)'
     `stdlib.h' (GNU):  *Note System V Number Conversion::.

`void qsort (void *ARRAY, size_t COUNT, size_t SIZE, comparison_fn_t COMPARE)'
     `stdlib.h' (ISO):  *Note Array Sort Function::.

`int raise (int SIGNUM)'
     `signal.h' (ISO):  *Note Signaling Yourself::.

`int rand (void)'
     `stdlib.h' (ISO):  *Note ISO Random::.

`int RAND_MAX'
     `stdlib.h' (ISO):  *Note ISO Random::.

`long int random (void)'
     `stdlib.h' (BSD):  *Note BSD Random::.

`int random_r (struct random_data *restrict BUF, int32_t *restrict RESULT)'
     `stdlib.h' (GNU):  *Note BSD Random::.

`int rand_r (unsigned int *SEED)'
     `stdlib.h' (POSIX.1):  *Note ISO Random::.

`void * rawmemchr (const void *BLOCK, int C)'
     `string.h' (GNU):  *Note Search Functions::.

`ssize_t read (int FILEDES, void *BUFFER, size_t SIZE)'
     `unistd.h' (POSIX.1):  *Note I/O Primitives::.

`struct dirent * readdir (DIR *DIRSTREAM)'
     `dirent.h' (POSIX.1):  *Note Reading/Closing Directory::.

`struct dirent64 * readdir64 (DIR *DIRSTREAM)'
     `dirent.h' (LFS):  *Note Reading/Closing Directory::.

`int readdir64_r (DIR *DIRSTREAM, struct dirent64 *ENTRY, struct dirent64 **RESULT)'
     `dirent.h' (LFS):  *Note Reading/Closing Directory::.

`int readdir_r (DIR *DIRSTREAM, struct dirent *ENTRY, struct dirent **RESULT)'
     `dirent.h' (GNU):  *Note Reading/Closing Directory::.

`int readlink (const char *FILENAME, char *BUFFER, size_t SIZE)'
     `unistd.h' (BSD):  *Note Symbolic Links::.

`ssize_t readv (int FILEDES, const struct iovec *VECTOR, int COUNT)'
     `sys/uio.h' (BSD):  *Note Scatter-Gather::.

`void * realloc (void *PTR, size_t NEWSIZE)'
     `malloc.h', `stdlib.h' (ISO):  *Note Changing Block Size::.

`__realloc_hook'
     `malloc.h' (GNU):  *Note Hooks for Malloc::.

`char * realpath (const char *restrict NAME, char *restrict RESOLVED)'
     `stdlib.h' (XPG):  *Note Symbolic Links::.

`int recv (int SOCKET, void *BUFFER, size_t SIZE, int FLAGS)'
     `sys/socket.h' (BSD):  *Note Receiving Data::.

`int recvfrom (int SOCKET, void *BUFFER, size_t SIZE, int FLAGS, struct sockaddr *ADDR, socklen_t *LENGTH-PTR)'
     `sys/socket.h' (BSD):  *Note Receiving Datagrams::.

`int recvmsg (int SOCKET, struct msghdr *MESSAGE, int FLAGS)'
     `sys/socket.h' (BSD):  *Note Receiving Datagrams::.

`int RE_DUP_MAX'
     `limits.h' (POSIX.2):  *Note General Limits::.

`_REENTRANT'
     (GNU):  *Note Feature Test Macros::.

`REG_BADBR'
     `regex.h' (POSIX.2):  *Note POSIX Regexp Compilation::.

`REG_BADPAT'
     `regex.h' (POSIX.2):  *Note POSIX Regexp Compilation::.

`REG_BADRPT'
     `regex.h' (POSIX.2):  *Note POSIX Regexp Compilation::.

`int regcomp (regex_t *COMPILED, const char *PATTERN, int CFLAGS)'
     `regex.h' (POSIX.2):  *Note POSIX Regexp Compilation::.

`REG_EBRACE'
     `regex.h' (POSIX.2):  *Note POSIX Regexp Compilation::.

`REG_EBRACK'
     `regex.h' (POSIX.2):  *Note POSIX Regexp Compilation::.

`REG_ECOLLATE'
     `regex.h' (POSIX.2):  *Note POSIX Regexp Compilation::.

`REG_ECTYPE'
     `regex.h' (POSIX.2):  *Note POSIX Regexp Compilation::.

`REG_EESCAPE'
     `regex.h' (POSIX.2):  *Note POSIX Regexp Compilation::.

`REG_EPAREN'
     `regex.h' (POSIX.2):  *Note POSIX Regexp Compilation::.

`REG_ERANGE'
     `regex.h' (POSIX.2):  *Note POSIX Regexp Compilation::.

`size_t regerror (int ERRCODE, regex_t *COMPILED, char *BUFFER, size_t LENGTH)'
     `regex.h' (POSIX.2):  *Note Regexp Cleanup::.

`REG_ESPACE'
     `regex.h' (POSIX.2):  *Note Matching POSIX Regexps::.

`REG_ESPACE'
     `regex.h' (POSIX.2):  *Note POSIX Regexp Compilation::.

`REG_ESUBREG'
     `regex.h' (POSIX.2):  *Note POSIX Regexp Compilation::.

`int regexec (regex_t *COMPILED, char *STRING, size_t NMATCH, regmatch_t MATCHPTR [], int EFLAGS)'
     `regex.h' (POSIX.2):  *Note Matching POSIX Regexps::.

`regex_t'
     `regex.h' (POSIX.2):  *Note POSIX Regexp Compilation::.

`REG_EXTENDED'
     `regex.h' (POSIX.2):  *Note Flags for POSIX Regexps::.

`void regfree (regex_t *COMPILED)'
     `regex.h' (POSIX.2):  *Note Regexp Cleanup::.

`REG_ICASE'
     `regex.h' (POSIX.2):  *Note Flags for POSIX Regexps::.

`int register_printf_function (int SPEC, printf_function HANDLER-FUNCTION, printf_arginfo_function ARGINFO-FUNCTION)'
     `printf.h' (GNU):  *Note Registering New Conversions::.

`regmatch_t'
     `regex.h' (POSIX.2):  *Note Regexp Subexpressions::.

`REG_NEWLINE'
     `regex.h' (POSIX.2):  *Note Flags for POSIX Regexps::.

`REG_NOMATCH'
     `regex.h' (POSIX.2):  *Note Matching POSIX Regexps::.

`REG_NOSUB'
     `regex.h' (POSIX.2):  *Note Flags for POSIX Regexps::.

`REG_NOTBOL'
     `regex.h' (POSIX.2):  *Note Matching POSIX Regexps::.

`REG_NOTEOL'
     `regex.h' (POSIX.2):  *Note Matching POSIX Regexps::.

`regoff_t'
     `regex.h' (POSIX.2):  *Note Regexp Subexpressions::.

`double remainder (double NUMERATOR, double DENOMINATOR)'
     `math.h' (BSD):  *Note Remainder Functions::.

`float remainderf (float NUMERATOR, float DENOMINATOR)'
     `math.h' (BSD):  *Note Remainder Functions::.

`long double remainderl (long double NUMERATOR, long double DENOMINATOR)'
     `math.h' (BSD):  *Note Remainder Functions::.

`int remove (const char *FILENAME)'
     `stdio.h' (ISO):  *Note Deleting Files::.

`int rename (const char *OLDNAME, const char *NEWNAME)'
     `stdio.h' (ISO):  *Note Renaming Files::.

`void rewind (FILE *STREAM)'
     `stdio.h' (ISO):  *Note File Positioning::.

`void rewinddir (DIR *DIRSTREAM)'
     `dirent.h' (POSIX.1):  *Note Random Access Directory::.

`char * rindex (const char *STRING, int C)'
     `string.h' (BSD):  *Note Search Functions::.

`double rint (double X)'
     `math.h' (ISO):  *Note Rounding Functions::.

`float rintf (float X)'
     `math.h' (ISO):  *Note Rounding Functions::.

`long double rintl (long double X)'
     `math.h' (ISO):  *Note Rounding Functions::.

`int RLIM_INFINITY'
     `sys/resource.h' (BSD):  *Note Limits on Resources::.

`RLIMIT_AS'
     `sys/resource.h' (Unix98):  *Note Limits on Resources::.

`RLIMIT_CORE'
     `sys/resource.h' (BSD):  *Note Limits on Resources::.

`RLIMIT_CPU'
     `sys/resource.h' (BSD):  *Note Limits on Resources::.

`RLIMIT_DATA'
     `sys/resource.h' (BSD):  *Note Limits on Resources::.

`RLIMIT_FSIZE'
     `sys/resource.h' (BSD):  *Note Limits on Resources::.

`RLIMIT_MEMLOCK'
     `sys/resource.h' (BSD):  *Note Limits on Resources::.

`RLIMIT_NOFILE'
     `sys/resource.h' (BSD):  *Note Limits on Resources::.

`RLIMIT_NPROC'
     `sys/resource.h' (BSD):  *Note Limits on Resources::.

`RLIMIT_RSS'
     `sys/resource.h' (BSD):  *Note Limits on Resources::.

`RLIMIT_STACK'
     `sys/resource.h' (BSD):  *Note Limits on Resources::.

`RLIM_NLIMITS'
     `sys/resource.h' (BSD):  *Note Limits on Resources::.

`int rmdir (const char *FILENAME)'
     `unistd.h' (POSIX.1):  *Note Deleting Files::.

`int R_OK'
     `unistd.h' (POSIX.1):  *Note Testing File Access::.

`double round (double X)'
     `math.h' (ISO):  *Note Rounding Functions::.

`float roundf (float X)'
     `math.h' (ISO):  *Note Rounding Functions::.

`long double roundl (long double X)'
     `math.h' (ISO):  *Note Rounding Functions::.

`int rpmatch (const char *RESPONSE)'
     `stdlib.h' (stdlib.h):  *Note Yes-or-No Questions::.

`RUN_LVL'
     `utmp.h' (SVID):  *Note Manipulating the Database::.

`RUN_LVL'
     `utmpx.h' (XPG4.2):  *Note XPG Functions::.

`RUSAGE_CHILDREN'
     `sys/resource.h' (BSD):  *Note Resource Usage::.

`RUSAGE_SELF'
     `sys/resource.h' (BSD):  *Note Resource Usage::.

`int SA_NOCLDSTOP'
     `signal.h' (POSIX.1):  *Note Flags for Sigaction::.

`int SA_ONSTACK'
     `signal.h' (BSD):  *Note Flags for Sigaction::.

`int SA_RESTART'
     `signal.h' (BSD):  *Note Flags for Sigaction::.

`int sbrk (ptrdiff_t DELTA)'
     `unistd.h' (BSD):  *Note Resizing the Data Segment::.

`_SC_2_C_DEV'
     `unistd.h' (POSIX.2):  *Note Constants for Sysconf::.

`_SC_2_FORT_DEV'
     `unistd.h' (POSIX.2):  *Note Constants for Sysconf::.

`_SC_2_FORT_RUN'
     `unistd.h' (POSIX.2):  *Note Constants for Sysconf::.

`_SC_2_LOCALEDEF'
     `unistd.h' (POSIX.2):  *Note Constants for Sysconf::.

`_SC_2_SW_DEV'
     `unistd.h' (POSIX.2):  *Note Constants for Sysconf::.

`_SC_2_VERSION'
     `unistd.h' (POSIX.2):  *Note Constants for Sysconf::.

`_SC_AIO_LISTIO_MAX'
     `unistd.h' (POSIX.1):  *Note Constants for Sysconf::.

`_SC_AIO_MAX'
     `unistd.h' (POSIX.1):  *Note Constants for Sysconf::.

`_SC_AIO_PRIO_DELTA_MAX'
     `unistd.h' (POSIX.1):  *Note Constants for Sysconf::.

`double scalb (double VALUE, int EXPONENT)'
     `math.h' (BSD):  *Note Normalization Functions::.

`float scalbf (float VALUE, int EXPONENT)'
     `math.h' (BSD):  *Note Normalization Functions::.

`long double scalbl (long double VALUE, int EXPONENT)'
     `math.h' (BSD):  *Note Normalization Functions::.

`long long int scalbln (double X, long int n)'
     `math.h' (BSD):  *Note Normalization Functions::.

`long long int scalblnf (float X, long int n)'
     `math.h' (BSD):  *Note Normalization Functions::.

`long long int scalblnl (long double X, long int n)'
     `math.h' (BSD):  *Note Normalization Functions::.

`long long int scalbn (double X, int n)'
     `math.h' (BSD):  *Note Normalization Functions::.

`long long int scalbnf (float X, int n)'
     `math.h' (BSD):  *Note Normalization Functions::.

`long long int scalbnl (long double X, int n)'
     `math.h' (BSD):  *Note Normalization Functions::.

`int scandir (const char *DIR, struct dirent ***NAMELIST, int (*SELECTOR) (const struct dirent *), int (*CMP) (const void *, const void *))'
     `dirent.h' (BSD/SVID):  *Note Scanning Directory Content::.

`int scandir64 (const char *DIR, struct dirent64 ***NAMELIST, int (*SELECTOR) (const struct dirent64 *), int (*CMP) (const void *, const void *))'
     `dirent.h' (GNU):  *Note Scanning Directory Content::.

`int scanf (const char *TEMPLATE, ...)'
     `stdio.h' (ISO):  *Note Formatted Input Functions::.

`_SC_ARG_MAX'
     `unistd.h' (POSIX.1):  *Note Constants for Sysconf::.

`_SC_ASYNCHRONOUS_IO'
     `unistd.h' (POSIX.1):  *Note Constants for Sysconf::.

`_SC_ATEXIT_MAX'
     `unistd.h' (GNU):  *Note Constants for Sysconf::.

`_SC_AVPHYS_PAGES'
     `unistd.h' (GNU):  *Note Constants for Sysconf::.

`_SC_BC_BASE_MAX'
     `unistd.h' (POSIX.2):  *Note Constants for Sysconf::.

`_SC_BC_DIM_MAX'
     `unistd.h' (POSIX.2):  *Note Constants for Sysconf::.

`_SC_BC_SCALE_MAX'
     `unistd.h' (POSIX.2):  *Note Constants for Sysconf::.

`_SC_BC_STRING_MAX'
     `unistd.h' (POSIX.2):  *Note Constants for Sysconf::.

`_SC_CHAR_BIT'
     `unistd.h' (X/Open):  *Note Constants for Sysconf::.

`_SC_CHARCLASS_NAME_MAX'
     `unistd.h' (GNU):  *Note Constants for Sysconf::.

`_SC_CHAR_MAX'
     `unistd.h' (X/Open):  *Note Constants for Sysconf::.

`_SC_CHAR_MIN'
     `unistd.h' (X/Open):  *Note Constants for Sysconf::.

`_SC_CHILD_MAX'
     `unistd.h' (POSIX.1):  *Note Constants for Sysconf::.

`_SC_CLK_TCK'
     `unistd.h' (POSIX.1):  *Note Constants for Sysconf::.

`_SC_COLL_WEIGHTS_MAX'
     `unistd.h' (POSIX.2):  *Note Constants for Sysconf::.

`_SC_DELAYTIMER_MAX'
     `unistd.h' (POSIX.1):  *Note Constants for Sysconf::.

`_SC_EQUIV_CLASS_MAX'
     `unistd.h' (POSIX.2):  *Note Constants for Sysconf::.

`_SC_EXPR_NEST_MAX'
     `unistd.h' (POSIX.2):  *Note Constants for Sysconf::.

`_SC_FSYNC'
     `unistd.h' (POSIX.1):  *Note Constants for Sysconf::.

`_SC_GETGR_R_SIZE_MAX'
     `unistd.h' (POSIX.1):  *Note Constants for Sysconf::.

`_SC_GETPW_R_SIZE_MAX'
     `unistd.h' (POSIX.1):  *Note Constants for Sysconf::.

`SCHAR_MAX'
     `limits.h' (ISO):  *Note Range of Type::.

`SCHAR_MIN'
     `limits.h' (ISO):  *Note Range of Type::.

`int sched_getparam (pid_t PID, const struct sched_param *PARAM)'
     `sched.h' (POSIX):  *Note Basic Scheduling Functions::.

`int sched_get_priority_max (int *POLICY);'
     `sched.h' (POSIX):  *Note Basic Scheduling Functions::.

`int sched_get_priority_min (int *POLICY);'
     `sched.h' (POSIX):  *Note Basic Scheduling Functions::.

`int sched_getscheduler (pid_t PID)'
     `sched.h' (POSIX):  *Note Basic Scheduling Functions::.

`int sched_rr_get_interval (pid_t PID, struct timespec *INTERVAL)'
     `sched.h' (POSIX):  *Note Basic Scheduling Functions::.

`int sched_setparam (pid_t PID, const struct sched_param *PARAM)'
     `sched.h' (POSIX):  *Note Basic Scheduling Functions::.

`int sched_setscheduler (pid_t PID, int POLICY, const struct sched_param *PARAM)'
     `sched.h' (POSIX):  *Note Basic Scheduling Functions::.

`int sched_yield (void)'
     `sched.h' (POSIX):  *Note Basic Scheduling Functions::.

`_SC_INT_MAX'
     `unistd.h' (X/Open):  *Note Constants for Sysconf::.

`_SC_INT_MIN'
     `unistd.h' (X/Open):  *Note Constants for Sysconf::.

`_SC_JOB_CONTROL'
     `unistd.h' (POSIX.1):  *Note Constants for Sysconf::.

`_SC_LINE_MAX'
     `unistd.h' (POSIX.2):  *Note Constants for Sysconf::.

`_SC_LOGIN_NAME_MAX'
     `unistd.h' (POSIX.1):  *Note Constants for Sysconf::.

`_SC_LONG_BIT'
     `unistd.h' (X/Open):  *Note Constants for Sysconf::.

`_SC_MAPPED_FILES'
     `unistd.h' (POSIX.1):  *Note Constants for Sysconf::.

`_SC_MB_LEN_MAX'
     `unistd.h' (X/Open):  *Note Constants for Sysconf::.

`_SC_MEMLOCK'
     `unistd.h' (POSIX.1):  *Note Constants for Sysconf::.

`_SC_MEMLOCK_RANGE'
     `unistd.h' (POSIX.1):  *Note Constants for Sysconf::.

`_SC_MEMORY_PROTECTION'
     `unistd.h' (POSIX.1):  *Note Constants for Sysconf::.

`_SC_MESSAGE_PASSING'
     `unistd.h' (POSIX.1):  *Note Constants for Sysconf::.

`_SC_MQ_OPEN_MAX'
     `unistd.h' (POSIX.1):  *Note Constants for Sysconf::.

`_SC_MQ_PRIO_MAX'
     `unistd.h' (POSIX.1):  *Note Constants for Sysconf::.

`_SC_NGROUPS_MAX'
     `unistd.h' (POSIX.1):  *Note Constants for Sysconf::.

`_SC_NL_ARGMAX'
     `unistd.h' (X/Open):  *Note Constants for Sysconf::.

`_SC_NL_LANGMAX'
     `unistd.h' (X/Open):  *Note Constants for Sysconf::.

`_SC_NL_MSGMAX'
     `unistd.h' (X/Open):  *Note Constants for Sysconf::.

`_SC_NL_NMAX'
     `unistd.h' (X/Open):  *Note Constants for Sysconf::.

`_SC_NL_SETMAX'
     `unistd.h' (X/Open):  *Note Constants for Sysconf::.

`_SC_NL_TEXTMAX'
     `unistd.h' (X/Open):  *Note Constants for Sysconf::.

`_SC_NPROCESSORS_CONF'
     `unistd.h' (GNU):  *Note Constants for Sysconf::.

`_SC_NPROCESSORS_ONLN'
     `unistd.h' (GNU):  *Note Constants for Sysconf::.

`_SC_NZERO'
     `unistd.h' (X/Open):  *Note Constants for Sysconf::.

`_SC_OPEN_MAX'
     `unistd.h' (POSIX.1):  *Note Constants for Sysconf::.

`_SC_PAGESIZE'
     `unistd.h' (GNU):  *Note Constants for Sysconf::.

`_SC_PHYS_PAGES'
     `unistd.h' (GNU):  *Note Constants for Sysconf::.

`_SC_PII'
     `unistd.h' (POSIX.1g):  *Note Constants for Sysconf::.

`_SC_PII_INTERNET'
     `unistd.h' (POSIX.1g):  *Note Constants for Sysconf::.

`_SC_PII_INTERNET_DGRAM'
     `unistd.h' (POSIX.1g):  *Note Constants for Sysconf::.

`_SC_PII_INTERNET_STREAM'
     `unistd.h' (POSIX.1g):  *Note Constants for Sysconf::.

`_SC_PII_OSI'
     `unistd.h' (POSIX.1g):  *Note Constants for Sysconf::.

`_SC_PII_OSI_CLTS'
     `unistd.h' (POSIX.1g):  *Note Constants for Sysconf::.

`_SC_PII_OSI_COTS'
     `unistd.h' (POSIX.1g):  *Note Constants for Sysconf::.

`_SC_PII_OSI_M'
     `unistd.h' (POSIX.1g):  *Note Constants for Sysconf::.

`_SC_PII_SOCKET'
     `unistd.h' (POSIX.1g):  *Note Constants for Sysconf::.

`_SC_PII_XTI'
     `unistd.h' (POSIX.1g):  *Note Constants for Sysconf::.

`_SC_PRIORITIZED_IO'
     `unistd.h' (POSIX.1):  *Note Constants for Sysconf::.

`_SC_PRIORITY_SCHEDULING'
     `unistd.h' (POSIX.1):  *Note Constants for Sysconf::.

`_SC_REALTIME_SIGNALS'
     `unistdh.h' (POSIX.1):  *Note Constants for Sysconf::.

`_SC_RTSIG_MAX'
     `unistd.h' (POSIX.1):  *Note Constants for Sysconf::.

`_SC_SAVED_IDS'
     `unistd.h' (POSIX.1):  *Note Constants for Sysconf::.

`_SC_SCHAR_MAX'
     `unistd.h' (X/Open):  *Note Constants for Sysconf::.

`_SC_SCHAR_MIN'
     `unistd.h' (X/Open):  *Note Constants for Sysconf::.

`_SC_SELECT'
     `unistd.h' (POSIX.1g):  *Note Constants for Sysconf::.

`_SC_SEMAPHORES'
     `unistd.h' (POSIX.1):  *Note Constants for Sysconf::.

`_SC_SEM_NSEMS_MAX'
     `unistd.h' (POSIX.1):  *Note Constants for Sysconf::.

`_SC_SEM_VALUE_MAX'
     `unistd.h' (POSIX.1):  *Note Constants for Sysconf::.

`_SC_SHARED_MEMORY_OBJECTS'
     `unistd.h' (POSIX.1):  *Note Constants for Sysconf::.

`_SC_SHRT_MAX'
     `unistd.h' (X/Open):  *Note Constants for Sysconf::.

`_SC_SHRT_MIN'
     `unistd.h' (X/Open):  *Note Constants for Sysconf::.

`_SC_SIGQUEUE_MAX'
     `unistd.h' (POSIX.1):  *Note Constants for Sysconf::.

`SC_SSIZE_MAX'
     `unistd.h' (X/Open):  *Note Constants for Sysconf::.

`_SC_STREAM_MAX'
     `unistd.h' (POSIX.1):  *Note Constants for Sysconf::.

`_SC_SYNCHRONIZED_IO'
     `unistd.h' (POSIX.1):  *Note Constants for Sysconf::.

`_SC_THREAD_ATTR_STACKADDR'
     `unistd.h' (POSIX.1):  *Note Constants for Sysconf::.

`_SC_THREAD_ATTR_STACKSIZE'
     `unistd.h' (POSIX.1):  *Note Constants for Sysconf::.

`_SC_THREAD_DESTRUCTOR_ITERATIONS'
     `unistd.h' (POSIX.1):  *Note Constants for Sysconf::.

`_SC_THREAD_KEYS_MAX'
     `unistd.h' (POSIX.1):  *Note Constants for Sysconf::.

`_SC_THREAD_PRIO_INHERIT'
     `unistd.h' (POSIX.1):  *Note Constants for Sysconf::.

`_SC_THREAD_PRIO_PROTECT'
     `unistd.h' (POSIX.1):  *Note Constants for Sysconf::.

`_SC_THREAD_PRIORITY_SCHEDULING'
     `unistd.h' (POSIX.1):  *Note Constants for Sysconf::.

`_SC_THREAD_PROCESS_SHARED'
     `unistd.h' (POSIX.1):  *Note Constants for Sysconf::.

`_SC_THREADS'
     `unistd.h' (POSIX.1):  *Note Constants for Sysconf::.

`_SC_THREAD_SAFE_FUNCTIONS'
     `unistd.h' (POSIX.1):  *Note Constants for Sysconf::.

`_SC_THREAD_STACK_MIN'
     `unistd.h' (POSIX.1):  *Note Constants for Sysconf::.

`_SC_THREAD_THREADS_MAX'
     `unistd.h' (POSIX.1):  *Note Constants for Sysconf::.

`_SC_TIMER_MAX'
     `unistd.h' (POSIX.1):  *Note Constants for Sysconf::.

`_SC_TIMERS'
     `unistd.h' (POSIX.1):  *Note Constants for Sysconf::.

`_SC_T_IOV_MAX'
     `unistd.h' (POSIX.1g):  *Note Constants for Sysconf::.

`_SC_TTY_NAME_MAX'
     `unistd.h' (POSIX.1):  *Note Constants for Sysconf::.

`_SC_TZNAME_MAX'
     `unistd.h' (POSIX.1):  *Note Constants for Sysconf::.

`_SC_UCHAR_MAX'
     `unistd.h' (X/Open):  *Note Constants for Sysconf::.

`_SC_UINT_MAX'
     `unistd.h' (X/Open):  *Note Constants for Sysconf::.

`_SC_UIO_MAXIOV'
     `unistd.h' (POSIX.1g):  *Note Constants for Sysconf::.

`_SC_ULONG_MAX'
     `unistd.h' (X/Open):  *Note Constants for Sysconf::.

`_SC_USHRT_MAX'
     `unistd.h' (X/Open):  *Note Constants for Sysconf::.

`_SC_VERSION'
     `unistd.h' (POSIX.1):  *Note Constants for Sysconf::.

`_SC_VERSION'
     `unistd.h' (POSIX.2):  *Note Constants for Sysconf::.

`_SC_WORD_BIT'
     `unistd.h' (X/Open):  *Note Constants for Sysconf::.

`_SC_XOPEN_CRYPT'
     `unistd.h' (X/Open):  *Note Constants for Sysconf::.

`_SC_XOPEN_ENH_I18N'
     `unistd.h' (X/Open):  *Note Constants for Sysconf::.

`_SC_XOPEN_LEGACY'
     `unistd.h' (X/Open):  *Note Constants for Sysconf::.

`_SC_XOPEN_REALTIME'
     `unistd.h' (X/Open):  *Note Constants for Sysconf::.

`_SC_XOPEN_REALTIME_THREADS'
     `unistd.h' (X/Open):  *Note Constants for Sysconf::.

`_SC_XOPEN_SHM'
     `unistd.h' (X/Open):  *Note Constants for Sysconf::.

`_SC_XOPEN_UNIX'
     `unistd.h' (X/Open):  *Note Constants for Sysconf::.

`_SC_XOPEN_VERSION'
     `unistd.h' (X/Open):  *Note Constants for Sysconf::.

`_SC_XOPEN_XCU_VERSION'
     `unistd.h' (X/Open):  *Note Constants for Sysconf::.

`_SC_XOPEN_XPG2'
     `unistd.h' (X/Open):  *Note Constants for Sysconf::.

`_SC_XOPEN_XPG3'
     `unistd.h' (X/Open):  *Note Constants for Sysconf::.

`_SC_XOPEN_XPG4'
     `unistd.h' (X/Open):  *Note Constants for Sysconf::.

`unsigned short int * seed48 (unsigned short int SEED16V[3])'
     `stdlib.h' (SVID):  *Note SVID Random::.

`int seed48_r (unsigned short int SEED16V[3], struct drand48_data *BUFFER)'
     `stdlib.h' (GNU):  *Note SVID Random::.

`int SEEK_CUR'
     `stdio.h' (ISO):  *Note File Positioning::.

`void seekdir (DIR *DIRSTREAM, off_t POS)'
     `dirent.h' (BSD):  *Note Random Access Directory::.

`int SEEK_END'
     `stdio.h' (ISO):  *Note File Positioning::.

`int SEEK_SET'
     `stdio.h' (ISO):  *Note File Positioning::.

`int select (int NFDS, fd_set *READ-FDS, fd_set *WRITE-FDS, fd_set *EXCEPT-FDS, struct timeval *TIMEOUT)'
     `sys/types.h' (BSD):  *Note Waiting for I/O::.

`int sem_destroy (sem_t * SEM)'
     `semaphore.h' (POSIX):  *Note POSIX Semaphores::.

`int sem_getvalue (sem_t * SEM, int * SVAL)'
     `semaphore.h' (POSIX):  *Note POSIX Semaphores::.

`int sem_init (sem_t *SEM, int PSHARED, unsigned int VALUE)'
     `semaphore.h' (POSIX):  *Note POSIX Semaphores::.

`int sem_post (sem_t * SEM)'
     `semaphore.h' (POSIX):  *Note POSIX Semaphores::.

`int sem_trywait (sem_t * SEM)'
     `semaphore.h' (POSIX):  *Note POSIX Semaphores::.

`int sem_wait (sem_t * SEM)'
     `semaphore.h' (POSIX):  *Note POSIX Semaphores::.

`int send (int SOCKET, void *BUFFER, size_t SIZE, int FLAGS)'
     `sys/socket.h' (BSD):  *Note Sending Data::.

`int sendmsg (int SOCKET, const struct msghdr *MESSAGE, int FLAGS)'
     `sys/socket.h' (BSD):  *Note Receiving Datagrams::.

`int sendto (int SOCKET, void *BUFFER. size_t SIZE, int FLAGS, struct sockaddr *ADDR, socklen_t LENGTH)'
     `sys/socket.h' (BSD):  *Note Sending Datagrams::.

`void setbuf (FILE *STREAM, char *BUF)'
     `stdio.h' (ISO):  *Note Controlling Buffering::.

`void setbuffer (FILE *STREAM, char *BUF, size_t SIZE)'
     `stdio.h' (BSD):  *Note Controlling Buffering::.

`int setcontext (const ucontext_t *UCP)'
     `ucontext.h' (SVID):  *Note System V contexts::.

`int setdomainname (const char *NAME, size_t LENGTH)'
     `unistd.h' (???):  *Note Host Identification::.

`int setegid (gid_t NEWGID)'
     `unistd.h' (POSIX.1):  *Note Setting Groups::.

`int setenv (const char *NAME, const char *VALUE, int REPLACE)'
     `stdlib.h' (BSD):  *Note Environment Access::.

`int seteuid (uid_t NEWEUID)'
     `unistd.h' (POSIX.1):  *Note Setting User ID::.

`int setfsent (void)'
     `fstab.h' (BSD):  *Note fstab::.

`int setgid (gid_t NEWGID)'
     `unistd.h' (POSIX.1):  *Note Setting Groups::.

`void setgrent (void)'
     `grp.h' (SVID, BSD):  *Note Scanning All Groups::.

`int setgroups (size_t COUNT, gid_t *GROUPS)'
     `grp.h' (BSD):  *Note Setting Groups::.

`void sethostent (int STAYOPEN)'
     `netdb.h' (BSD):  *Note Host Names::.

`int sethostid (long int ID)'
     `unistd.h' (BSD):  *Note Host Identification::.

`int sethostname (const char *NAME, size_t LENGTH)'
     `unistd.h' (BSD):  *Note Host Identification::.

`int setitimer (int WHICH, struct itimerval *NEW, struct itimerval *OLD)'
     `sys/time.h' (BSD):  *Note Setting an Alarm::.

`int setjmp (jmp_buf STATE)'
     `setjmp.h' (ISO):  *Note Non-Local Details::.

`void setkey (const char *KEY)'
     `crypt.h' (BSD, SVID):  *Note DES Encryption::.

`void setkey_r (const char *KEY, struct crypt_data * DATA)'
     `crypt.h' (GNU):  *Note DES Encryption::.

`void setlinebuf (FILE *STREAM)'
     `stdio.h' (BSD):  *Note Controlling Buffering::.

`char * setlocale (int CATEGORY, const char *LOCALE)'
     `locale.h' (ISO):  *Note Setting the Locale::.

`int setlogmask (int MASK)'
     `syslog.h' (BSD):  *Note setlogmask::.

`FILE * setmntent (const char *FILE, const char *MODE)'
     `mntent.h' (BSD):  *Note mtab::.

`void setnetent (int STAYOPEN)'
     `netdb.h' (BSD):  *Note Networks Database::.

`int setnetgrent (const char *NETGROUP)'
     `netdb.h' (BSD):  *Note Lookup Netgroup::.

`int setpgid (pid_t PID, pid_t PGID)'
     `unistd.h' (POSIX.1):  *Note Process Group Functions::.

`int setpgrp (pid_t PID, pid_t PGID)'
     `unistd.h' (BSD):  *Note Process Group Functions::.

`int setpriority (int CLASS, int ID, int NICEVAL)'
     `sys/resource.h' (BSD,POSIX):  *Note Traditional Scheduling
     Functions::.

`void setprotoent (int STAYOPEN)'
     `netdb.h' (BSD):  *Note Protocols Database::.

`void setpwent (void)'
     `pwd.h' (SVID, BSD):  *Note Scanning All Users::.

`int setregid (gid_t RGID, gid_t EGID)'
     `unistd.h' (BSD):  *Note Setting Groups::.

`int setreuid (uid_t RUID, uid_t EUID)'
     `unistd.h' (BSD):  *Note Setting User ID::.

`int setrlimit (int RESOURCE, const struct rlimit *RLP)'
     `sys/resource.h' (BSD):  *Note Limits on Resources::.

`int setrlimit64 (int RESOURCE, const struct rlimit64 *RLP)'
     `sys/resource.h' (Unix98):  *Note Limits on Resources::.

`void setservent (int STAYOPEN)'
     `netdb.h' (BSD):  *Note Services Database::.

`pid_t setsid (void)'
     `unistd.h' (POSIX.1):  *Note Process Group Functions::.

`int setsockopt (int SOCKET, int LEVEL, int OPTNAME, void *OPTVAL, socklen_t OPTLEN)'
     `sys/socket.h' (BSD):  *Note Socket Option Functions::.

`void * setstate (void *STATE)'
     `stdlib.h' (BSD):  *Note BSD Random::.

`int setstate_r (char *restrict STATEBUF, struct random_data *restrict BUF)'
     `stdlib.h' (GNU):  *Note BSD Random::.

`int settimeofday (const struct timeval *TP, const struct timezone *TZP)'
     `sys/time.h' (BSD):  *Note High-Resolution Calendar::.

`int setuid (uid_t NEWUID)'
     `unistd.h' (POSIX.1):  *Note Setting User ID::.

`void setutent (void)'
     `utmp.h' (SVID):  *Note Manipulating the Database::.

`void setutxent (void)'
     `utmpx.h' (XPG4.2):  *Note XPG Functions::.

`int setvbuf (FILE *STREAM, char *BUF, int MODE, size_t SIZE)'
     `stdio.h' (ISO):  *Note Controlling Buffering::.

`SHRT_MAX'
     `limits.h' (ISO):  *Note Range of Type::.

`SHRT_MIN'
     `limits.h' (ISO):  *Note Range of Type::.

`int shutdown (int SOCKET, int HOW)'
     `sys/socket.h' (BSD):  *Note Closing a Socket::.

`S_IEXEC'
     `sys/stat.h' (BSD):  *Note Permission Bits::.

`S_IFBLK'
     `sys/stat.h' (BSD):  *Note Testing File Type::.

`S_IFCHR'
     `sys/stat.h' (BSD):  *Note Testing File Type::.

`S_IFDIR'
     `sys/stat.h' (BSD):  *Note Testing File Type::.

`S_IFIFO'
     `sys/stat.h' (BSD):  *Note Testing File Type::.

`S_IFLNK'
     `sys/stat.h' (BSD):  *Note Testing File Type::.

`int S_IFMT'
     `sys/stat.h' (BSD):  *Note Testing File Type::.

`S_IFREG'
     `sys/stat.h' (BSD):  *Note Testing File Type::.

`S_IFSOCK'
     `sys/stat.h' (BSD):  *Note Testing File Type::.

`int SIGABRT'
     `signal.h' (ISO):  *Note Program Error Signals::.

`int sigaction (int SIGNUM, const struct sigaction *restrict ACTION, struct sigaction *restrict OLD-ACTION)'
     `signal.h' (POSIX.1):  *Note Advanced Signal Handling::.

`int sigaddset (sigset_t *SET, int SIGNUM)'
     `signal.h' (POSIX.1):  *Note Signal Sets::.

`int SIGALRM'
     `signal.h' (POSIX.1):  *Note Alarm Signals::.

`int sigaltstack (const stack_t *restrict STACK, stack_t *restrict OLDSTACK)'
     `signal.h' (XPG):  *Note Signal Stack::.

`sig_atomic_t'
     `signal.h' (ISO):  *Note Atomic Types::.

`SIG_BLOCK'
     `signal.h' (POSIX.1):  *Note Process Signal Mask::.

`int sigblock (int MASK)'
     `signal.h' (BSD):  *Note Blocking in BSD::.

`int SIGBUS'
     `signal.h' (BSD):  *Note Program Error Signals::.

`int SIGCHLD'
     `signal.h' (POSIX.1):  *Note Job Control Signals::.

`int SIGCLD'
     `signal.h' (SVID):  *Note Job Control Signals::.

`int SIGCONT'
     `signal.h' (POSIX.1):  *Note Job Control Signals::.

`int sigdelset (sigset_t *SET, int SIGNUM)'
     `signal.h' (POSIX.1):  *Note Signal Sets::.

`int sigemptyset (sigset_t *SET)'
     `signal.h' (POSIX.1):  *Note Signal Sets::.

`int SIGEMT'
     `signal.h' (BSD):  *Note Program Error Signals::.

`sighandler_t SIG_ERR'
     `signal.h' (ISO):  *Note Basic Signal Handling::.

`int sigfillset (sigset_t *SET)'
     `signal.h' (POSIX.1):  *Note Signal Sets::.

`int SIGFPE'
     `signal.h' (ISO):  *Note Program Error Signals::.

`sighandler_t'
     `signal.h' (GNU):  *Note Basic Signal Handling::.

`int SIGHUP'
     `signal.h' (POSIX.1):  *Note Termination Signals::.

`int SIGILL'
     `signal.h' (ISO):  *Note Program Error Signals::.

`int SIGINFO'
     `signal.h' (BSD):  *Note Miscellaneous Signals::.

`int SIGINT'
     `signal.h' (ISO):  *Note Termination Signals::.

`int siginterrupt (int SIGNUM, int FAILFLAG)'
     `signal.h' (BSD):  *Note BSD Handler::.

`int SIGIO'
     `signal.h' (BSD):  *Note Asynchronous I/O Signals::.

`int SIGIOT'
     `signal.h' (Unix):  *Note Program Error Signals::.

`int sigismember (const sigset_t *SET, int SIGNUM)'
     `signal.h' (POSIX.1):  *Note Signal Sets::.

`sigjmp_buf'
     `setjmp.h' (POSIX.1):  *Note Non-Local Exits and Signals::.

`int SIGKILL'
     `signal.h' (POSIX.1):  *Note Termination Signals::.

`void siglongjmp (sigjmp_buf STATE, int VALUE)'
     `setjmp.h' (POSIX.1):  *Note Non-Local Exits and Signals::.

`int SIGLOST'
     `signal.h' (GNU):  *Note Operation Error Signals::.

`int sigmask (int SIGNUM)'
     `signal.h' (BSD):  *Note Blocking in BSD::.

`sighandler_t signal (int SIGNUM, sighandler_t ACTION)'
     `signal.h' (ISO):  *Note Basic Signal Handling::.

`int signbit (_float-type_ X)'
     `math.h' (ISO):  *Note FP Bit Twiddling::.

`long long int significand (double X)'
     `math.h' (BSD):  *Note Normalization Functions::.

`long long int significandf (float X)'
     `math.h' (BSD):  *Note Normalization Functions::.

`long long int significandl (long double X)'
     `math.h' (BSD):  *Note Normalization Functions::.

`int sigpause (int MASK)'
     `signal.h' (BSD):  *Note Blocking in BSD::.

`int sigpending (sigset_t *SET)'
     `signal.h' (POSIX.1):  *Note Checking for Pending Signals::.

`int SIGPIPE'
     `signal.h' (POSIX.1):  *Note Operation Error Signals::.

`int SIGPOLL'
     `signal.h' (SVID):  *Note Asynchronous I/O Signals::.

`int sigprocmask (int HOW, const sigset_t *restrict SET, sigset_t *restrict OLDSET)'
     `signal.h' (POSIX.1):  *Note Process Signal Mask::.

`int SIGPROF'
     `signal.h' (BSD):  *Note Alarm Signals::.

`int SIGQUIT'
     `signal.h' (POSIX.1):  *Note Termination Signals::.

`int SIGSEGV'
     `signal.h' (ISO):  *Note Program Error Signals::.

`int sigsetjmp (sigjmp_buf STATE, int SAVESIGS)'
     `setjmp.h' (POSIX.1):  *Note Non-Local Exits and Signals::.

`SIG_SETMASK'
     `signal.h' (POSIX.1):  *Note Process Signal Mask::.

`int sigsetmask (int MASK)'
     `signal.h' (BSD):  *Note Blocking in BSD::.

`sigset_t'
     `signal.h' (POSIX.1):  *Note Signal Sets::.

`int sigstack (const struct sigstack *STACK, struct sigstack *OLDSTACK)'
     `signal.h' (BSD):  *Note Signal Stack::.

`int SIGSTOP'
     `signal.h' (POSIX.1):  *Note Job Control Signals::.

`int sigsuspend (const sigset_t *SET)'
     `signal.h' (POSIX.1):  *Note Sigsuspend::.

`int SIGSYS'
     `signal.h' (Unix):  *Note Program Error Signals::.

`int SIGTERM'
     `signal.h' (ISO):  *Note Termination Signals::.

`int SIGTRAP'
     `signal.h' (BSD):  *Note Program Error Signals::.

`int SIGTSTP'
     `signal.h' (POSIX.1):  *Note Job Control Signals::.

`int SIGTTIN'
     `signal.h' (POSIX.1):  *Note Job Control Signals::.

`int SIGTTOU'
     `signal.h' (POSIX.1):  *Note Job Control Signals::.

`SIG_UNBLOCK'
     `signal.h' (POSIX.1):  *Note Process Signal Mask::.

`int SIGURG'
     `signal.h' (BSD):  *Note Asynchronous I/O Signals::.

`int SIGUSR1'
     `signal.h' (POSIX.1):  *Note Miscellaneous Signals::.

`int SIGUSR2'
     `signal.h' (POSIX.1):  *Note Miscellaneous Signals::.

`int sigvec (int SIGNUM, const struct sigvec *ACTION,struct sigvec *OLD-ACTION)'
     `signal.h' (BSD):  *Note BSD Handler::.

`int SIGVTALRM'
     `signal.h' (BSD):  *Note Alarm Signals::.

`int sigwait (const sigset_t *SET, int *SIG)'
     `pthread.h' (POSIX):  *Note Threads and Signal Handling::.

`int SIGWINCH'
     `signal.h' (BSD):  *Note Miscellaneous Signals::.

`int SIGXCPU'
     `signal.h' (BSD):  *Note Operation Error Signals::.

`int SIGXFSZ'
     `signal.h' (BSD):  *Note Operation Error Signals::.

`double sin (double X)'
     `math.h' (ISO):  *Note Trig Functions::.

`void sincos (double X, double *SINX, double *COSX)'
     `math.h' (GNU):  *Note Trig Functions::.

`void sincosf (float X, float *SINX, float *COSX)'
     `math.h' (GNU):  *Note Trig Functions::.

`void sincosl (long double X, long double *SINX, long double *COSX)'
     `math.h' (GNU):  *Note Trig Functions::.

`float sinf (float X)'
     `math.h' (ISO):  *Note Trig Functions::.

`double sinh (double X)'
     `math.h' (ISO):  *Note Hyperbolic Functions::.

`float sinhf (float X)'
     `math.h' (ISO):  *Note Hyperbolic Functions::.

`long double sinhl (long double X)'
     `math.h' (ISO):  *Note Hyperbolic Functions::.

`long double sinl (long double X)'
     `math.h' (ISO):  *Note Trig Functions::.

`S_IREAD'
     `sys/stat.h' (BSD):  *Note Permission Bits::.

`S_IRGRP'
     `sys/stat.h' (POSIX.1):  *Note Permission Bits::.

`S_IROTH'
     `sys/stat.h' (POSIX.1):  *Note Permission Bits::.

`S_IRUSR'
     `sys/stat.h' (POSIX.1):  *Note Permission Bits::.

`S_IRWXG'
     `sys/stat.h' (POSIX.1):  *Note Permission Bits::.

`S_IRWXO'
     `sys/stat.h' (POSIX.1):  *Note Permission Bits::.

`S_IRWXU'
     `sys/stat.h' (POSIX.1):  *Note Permission Bits::.

`int S_ISBLK (mode_t M)'
     `sys/stat.h' (POSIX):  *Note Testing File Type::.

`int S_ISCHR (mode_t M)'
     `sys/stat.h' (POSIX):  *Note Testing File Type::.

`int S_ISDIR (mode_t M)'
     `sys/stat.h' (POSIX):  *Note Testing File Type::.

`int S_ISFIFO (mode_t M)'
     `sys/stat.h' (POSIX):  *Note Testing File Type::.

`S_ISGID'
     `sys/stat.h' (POSIX):  *Note Permission Bits::.

`int S_ISLNK (mode_t M)'
     `sys/stat.h' (GNU):  *Note Testing File Type::.

`int S_ISREG (mode_t M)'
     `sys/stat.h' (POSIX):  *Note Testing File Type::.

`int S_ISSOCK (mode_t M)'
     `sys/stat.h' (GNU):  *Note Testing File Type::.

`S_ISUID'
     `sys/stat.h' (POSIX):  *Note Permission Bits::.

`S_ISVTX'
     `sys/stat.h' (BSD):  *Note Permission Bits::.

`S_IWGRP'
     `sys/stat.h' (POSIX.1):  *Note Permission Bits::.

`S_IWOTH'
     `sys/stat.h' (POSIX.1):  *Note Permission Bits::.

`S_IWRITE'
     `sys/stat.h' (BSD):  *Note Permission Bits::.

`S_IWUSR'
     `sys/stat.h' (POSIX.1):  *Note Permission Bits::.

`S_IXGRP'
     `sys/stat.h' (POSIX.1):  *Note Permission Bits::.

`S_IXOTH'
     `sys/stat.h' (POSIX.1):  *Note Permission Bits::.

`S_IXUSR'
     `sys/stat.h' (POSIX.1):  *Note Permission Bits::.

`size_t'
     `stddef.h' (ISO):  *Note Important Data Types::.

`unsigned int sleep (unsigned int SECONDS)'
     `unistd.h' (POSIX.1):  *Note Sleeping::.

`int snprintf (char *S, size_t SIZE, const char *TEMPLATE, ...)'
     `stdio.h' (GNU):  *Note Formatted Output Functions::.

`SO_BROADCAST'
     `sys/socket.h' (BSD):  *Note Socket-Level Options::.

`int SOCK_DGRAM'
     `sys/socket.h' (BSD):  *Note Communication Styles::.

`int socket (int NAMESPACE, int STYLE, int PROTOCOL)'
     `sys/socket.h' (BSD):  *Note Creating a Socket::.

`int socketpair (int NAMESPACE, int STYLE, int PROTOCOL, int FILEDES[2])'
     `sys/socket.h' (BSD):  *Note Socket Pairs::.

`int SOCK_RAW'
     `sys/socket.h' (BSD):  *Note Communication Styles::.

`int SOCK_RDM'
     `sys/socket.h' (BSD):  *Note Communication Styles::.

`int SOCK_SEQPACKET'
     `sys/socket.h' (BSD):  *Note Communication Styles::.

`int SOCK_STREAM'
     `sys/socket.h' (BSD):  *Note Communication Styles::.

`SO_DEBUG'
     `sys/socket.h' (BSD):  *Note Socket-Level Options::.

`SO_DONTROUTE'
     `sys/socket.h' (BSD):  *Note Socket-Level Options::.

`SO_ERROR'
     `sys/socket.h' (BSD):  *Note Socket-Level Options::.

`SO_KEEPALIVE'
     `sys/socket.h' (BSD):  *Note Socket-Level Options::.

`SO_LINGER'
     `sys/socket.h' (BSD):  *Note Socket-Level Options::.

`int SOL_SOCKET'
     `sys/socket.h' (BSD):  *Note Socket-Level Options::.

`SO_OOBINLINE'
     `sys/socket.h' (BSD):  *Note Socket-Level Options::.

`SO_RCVBUF'
     `sys/socket.h' (BSD):  *Note Socket-Level Options::.

`SO_REUSEADDR'
     `sys/socket.h' (BSD):  *Note Socket-Level Options::.

`SO_SNDBUF'
     `sys/socket.h' (BSD):  *Note Socket-Level Options::.

`SO_STYLE'
     `sys/socket.h' (GNU):  *Note Socket-Level Options::.

`SO_TYPE'
     `sys/socket.h' (BSD):  *Note Socket-Level Options::.

`speed_t'
     `termios.h' (POSIX.1):  *Note Line Speed::.

`int sprintf (char *S, const char *TEMPLATE, ...)'
     `stdio.h' (ISO):  *Note Formatted Output Functions::.

`double sqrt (double X)'
     `math.h' (ISO):  *Note Exponents and Logarithms::.

`float sqrtf (float X)'
     `math.h' (ISO):  *Note Exponents and Logarithms::.

`long double sqrtl (long double X)'
     `math.h' (ISO):  *Note Exponents and Logarithms::.

`void srand (unsigned int SEED)'
     `stdlib.h' (ISO):  *Note ISO Random::.

`void srand48 (long int SEEDVAL)'
     `stdlib.h' (SVID):  *Note SVID Random::.

`int srand48_r (long int SEEDVAL, struct drand48_data *BUFFER)'
     `stdlib.h' (GNU):  *Note SVID Random::.

`void srandom (unsigned int SEED)'
     `stdlib.h' (BSD):  *Note BSD Random::.

`int srandom_r (unsigned int SEED, struct random_data *BUF)'
     `stdlib.h' (GNU):  *Note BSD Random::.

`int sscanf (const char *S, const char *TEMPLATE, ...)'
     `stdio.h' (ISO):  *Note Formatted Input Functions::.

`sighandler_t ssignal (int SIGNUM, sighandler_t ACTION)'
     `signal.h' (SVID):  *Note Basic Signal Handling::.

`int SSIZE_MAX'
     `limits.h' (POSIX.1):  *Note General Limits::.

`ssize_t'
     `unistd.h' (POSIX.1):  *Note I/O Primitives::.

`stack_t'
     `signal.h' (XPG):  *Note Signal Stack::.

`int stat (const char *FILENAME, struct stat *BUF)'
     `sys/stat.h' (POSIX.1):  *Note Reading Attributes::.

`int stat64 (const char *FILENAME, struct stat64 *BUF)'
     `sys/stat.h' (Unix98):  *Note Reading Attributes::.

`FILE * stderr'
     `stdio.h' (ISO):  *Note Standard Streams::.

`STDERR_FILENO'
     `unistd.h' (POSIX.1):  *Note Descriptors and Streams::.

`FILE * stdin'
     `stdio.h' (ISO):  *Note Standard Streams::.

`STDIN_FILENO'
     `unistd.h' (POSIX.1):  *Note Descriptors and Streams::.

`FILE * stdout'
     `stdio.h' (ISO):  *Note Standard Streams::.

`STDOUT_FILENO'
     `unistd.h' (POSIX.1):  *Note Descriptors and Streams::.

`int stime (time_t *NEWTIME)'
     `time.h' (SVID, XPG):  *Note Simple Calendar Time::.

`char * stpcpy (char *restrict TO, const char *restrict FROM)'
     `string.h' (Unknown origin):  *Note Copying and Concatenation::.

`char * stpncpy (char *restrict TO, const char *restrict FROM, size_t SIZE)'
     `string.h' (GNU):  *Note Copying and Concatenation::.

`int strcasecmp (const char *S1, const char *S2)'
     `string.h' (BSD):  *Note String/Array Comparison::.

`char * strcasestr (const char *HAYSTACK, const char *NEEDLE)'
     `string.h' (GNU):  *Note Search Functions::.

`char * strcat (char *restrict TO, const char *restrict FROM)'
     `string.h' (ISO):  *Note Copying and Concatenation::.

`char * strchr (const char *STRING, int C)'
     `string.h' (ISO):  *Note Search Functions::.

`char * strchrnul (const char *STRING, int C)'
     `string.h' (GNU):  *Note Search Functions::.

`int strcmp (const char *S1, const char *S2)'
     `string.h' (ISO):  *Note String/Array Comparison::.

`int strcoll (const char *S1, const char *S2)'
     `string.h' (ISO):  *Note Collation Functions::.

`char * strcpy (char *restrict TO, const char *restrict FROM)'
     `string.h' (ISO):  *Note Copying and Concatenation::.

`size_t strcspn (const char *STRING, const char *STOPSET)'
     `string.h' (ISO):  *Note Search Functions::.

`char * strdup (const char *S)'
     `string.h' (SVID):  *Note Copying and Concatenation::.

`char * strdupa (const char *S)'
     `string.h' (GNU):  *Note Copying and Concatenation::.

`int STREAM_MAX'
     `limits.h' (POSIX.1):  *Note General Limits::.

`char * strerror (int ERRNUM)'
     `string.h' (ISO):  *Note Error Messages::.

`char * strerror_r (int ERRNUM, char *BUF, size_t N)'
     `string.h' (GNU):  *Note Error Messages::.

`char * strfry (char *STRING)'
     `string.h' (GNU):  *Note strfry::.

`size_t strftime (char *S, size_t SIZE, const char *TEMPLATE, const struct tm *BROKENTIME)'
     `time.h' (ISO):  *Note Formatting Calendar Time::.

`size_t strlen (const char *S)'
     `string.h' (ISO):  *Note String Length::.

`int strncasecmp (const char *S1, const char *S2, size_t N)'
     `string.h' (BSD):  *Note String/Array Comparison::.

`char * strncat (char *restrict TO, const char *restrict FROM, size_t SIZE)'
     `string.h' (ISO):  *Note Copying and Concatenation::.

`int strncmp (const char *S1, const char *S2, size_t SIZE)'
     `string.h' (ISO):  *Note String/Array Comparison::.

`char * strncpy (char *restrict TO, const char *restrict FROM, size_t SIZE)'
     `string.h' (ISO):  *Note Copying and Concatenation::.

`char * strndup (const char *S, size_t SIZE)'
     `string.h' (GNU):  *Note Copying and Concatenation::.

`char * strndupa (const char *S, size_t SIZE)'
     `string.h' (GNU):  *Note Copying and Concatenation::.

`size_t strnlen (const char *S, size_t MAXLEN)'
     `string.h' (GNU):  *Note String Length::.

`char * strpbrk (const char *STRING, const char *STOPSET)'
     `string.h' (ISO):  *Note Search Functions::.

`char * strptime (const char *S, const char *FMT, struct tm *TP)'
     `time.h' (XPG4):  *Note Low-Level Time String Parsing::.

`char * strrchr (const char *STRING, int C)'
     `string.h' (ISO):  *Note Search Functions::.

`char * strsep (char **STRING_PTR, const char *DELIMITER)'
     `string.h' (BSD):  *Note Finding Tokens in a String::.

`char * strsignal (int SIGNUM)'
     `string.h' (GNU):  *Note Signal Messages::.

`size_t strspn (const char *STRING, const char *SKIPSET)'
     `string.h' (ISO):  *Note Search Functions::.

`char * strstr (const char *HAYSTACK, const char *NEEDLE)'
     `string.h' (ISO):  *Note Search Functions::.

`double strtod (const char *restrict STRING, char **restrict TAILPTR)'
     `stdlib.h' (ISO):  *Note Parsing of Floats::.

`float strtof (const char *STRING, char **TAILPTR)'
     `stdlib.h' (ISO):  *Note Parsing of Floats::.

`intmax_t strtoimax (const char *restrict STRING, char **restrict TAILPTR, int BASE)'
     `inttypes.h' (ISO):  *Note Parsing of Integers::.

`char * strtok (char *restrict NEWSTRING, const char *restrict DELIMITERS)'
     `string.h' (ISO):  *Note Finding Tokens in a String::.

`char * strtok_r (char *NEWSTRING, const char *DELIMITERS, char **SAVE_PTR)'
     `string.h' (POSIX):  *Note Finding Tokens in a String::.

`long int strtol (const char *restrict STRING, char **restrict TAILPTR, int BASE)'
     `stdlib.h' (ISO):  *Note Parsing of Integers::.

`long double strtold (const char *STRING, char **TAILPTR)'
     `stdlib.h' (ISO):  *Note Parsing of Floats::.

`long long int strtoll (const char *restrict STRING, char **restrict TAILPTR, int BASE)'
     `stdlib.h' (ISO):  *Note Parsing of Integers::.

`long long int strtoq (const char *restrict STRING, char **restrict TAILPTR, int BASE)'
     `stdlib.h' (BSD):  *Note Parsing of Integers::.

`unsigned long int strtoul (const char *retrict STRING, char **restrict TAILPTR, int BASE)'
     `stdlib.h' (ISO):  *Note Parsing of Integers::.

`unsigned long long int strtoull (const char *restrict STRING, char **restrict TAILPTR, int BASE)'
     `stdlib.h' (ISO):  *Note Parsing of Integers::.

`uintmax_t strtoumax (const char *restrict STRING, char **restrict TAILPTR, int BASE)'
     `inttypes.h' (ISO):  *Note Parsing of Integers::.

`unsigned long long int strtouq (const char *restrict STRING, char **restrict TAILPTR, int BASE)'
     `stdlib.h' (BSD):  *Note Parsing of Integers::.

`struct aiocb'
     `aio.h' (POSIX.1b):  *Note Asynchronous I/O::.

`struct aiocb64'
     `aio.h' (POSIX.1b):  *Note Asynchronous I/O::.

`struct aioinit'
     `aio.h' (GNU):  *Note Configuration of AIO::.

`struct argp'
     `argp.h' (GNU):  *Note Argp Parsers::.

`struct argp_child'
     `argp.h' (GNU):  *Note Argp Children::.

`struct argp_option'
     `argp.h' (GNU):  *Note Argp Option Vectors::.

`struct argp_state'
     `argp.h' (GNU):  *Note Argp Parsing State::.

`struct dirent'
     `dirent.h' (POSIX.1):  *Note Directory Entries::.

`struct exit_status'
     `utmp.h' (SVID):  *Note Manipulating the Database::.

`struct flock'
     `fcntl.h' (POSIX.1):  *Note File Locks::.

`struct fstab'
     `fstab.h' (BSD):  *Note fstab::.

`struct FTW'
     `ftw.h' (XPG4.2):  *Note Working with Directory Trees::.

`struct __gconv_step'
     `gconv.h' (GNU):  *Note glibc iconv Implementation::.

`struct __gconv_step_data'
     `gconv.h' (GNU):  *Note glibc iconv Implementation::.

`struct group'
     `grp.h' (POSIX.1):  *Note Group Data Structure::.

`struct hostent'
     `netdb.h' (BSD):  *Note Host Names::.

`struct if_nameindex'
     `net/if.h' (IPv6 basic API):  *Note Interface Naming::.

`struct in6_addr'
     `netinet/in.h' (IPv6 basic API):  *Note Host Address Data Type::.

`struct in_addr'
     `netinet/in.h' (BSD):  *Note Host Address Data Type::.

`struct iovec'
     `sys/uio.h' (BSD):  *Note Scatter-Gather::.

`struct itimerval'
     `sys/time.h' (BSD):  *Note Setting an Alarm::.

`struct lconv'
     `locale.h' (ISO):  *Note The Lame Way to Locale Data::.

`struct linger'
     `sys/socket.h' (BSD):  *Note Socket-Level Options::.

`struct mallinfo'
     `malloc.h' (GNU):  *Note Statistics of Malloc::.

`struct mntent'
     `mntent.h' (BSD):  *Note mtab::.

`struct msghdr'
     `sys/socket.h' (BSD):  *Note Receiving Datagrams::.

`struct netent'
     `netdb.h' (BSD):  *Note Networks Database::.

`struct obstack'
     `obstack.h' (GNU):  *Note Creating Obstacks::.

`struct option'
     `getopt.h' (GNU):  *Note Getopt Long Options::.

`struct passwd'
     `pwd.h' (POSIX.1):  *Note User Data Structure::.

`struct printf_info'
     `printf.h' (GNU):  *Note Conversion Specifier Options::.

`struct protoent'
     `netdb.h' (BSD):  *Note Protocols Database::.

`struct random_data'
     `stdlib.h' (GNU):  *Note BSD Random::.

`struct rlimit'
     `sys/resource.h' (BSD):  *Note Limits on Resources::.

`struct rlimit64'
     `sys/resource.h' (Unix98):  *Note Limits on Resources::.

`struct rusage'
     `sys/resource.h' (BSD):  *Note Resource Usage::.

`struct sched_param'
     `sched.h' (POSIX):  *Note Basic Scheduling Functions::.

`struct servent'
     `netdb.h' (BSD):  *Note Services Database::.

`struct sgttyb'
     `termios.h' (BSD):  *Note BSD Terminal Modes::.

`struct sigaction'
     `signal.h' (POSIX.1):  *Note Advanced Signal Handling::.

`struct sigstack'
     `signal.h' (BSD):  *Note Signal Stack::.

`struct sigvec'
     `signal.h' (BSD):  *Note BSD Handler::.

`struct sockaddr'
     `sys/socket.h' (BSD):  *Note Address Formats::.

`struct sockaddr_in'
     `netinet/in.h' (BSD):  *Note Internet Address Formats::.

`struct sockaddr_un'
     `sys/un.h' (BSD):  *Note Local Namespace Details::.

`struct stat'
     `sys/stat.h' (POSIX.1):  *Note Attribute Meanings::.

`struct stat64'
     `sys/stat.h' (LFS):  *Note Attribute Meanings::.

`struct termios'
     `termios.h' (POSIX.1):  *Note Mode Data Types::.

`struct timespec'
     `sys/time.h' (POSIX.1):  *Note Elapsed Time::.

`struct timeval'
     `sys/time.h' (BSD):  *Note Elapsed Time::.

`struct timezone'
     `sys/time.h' (BSD):  *Note High-Resolution Calendar::.

`struct tm'
     `time.h' (ISO):  *Note Broken-down Time::.

`struct tms'
     `sys/times.h' (POSIX.1):  *Note Processor Time::.

`struct utimbuf'
     `time.h' (POSIX.1):  *Note File Times::.

`struct utsname'
     `sys/utsname.h' (POSIX.1):  *Note Platform Type::.

`int strverscmp (const char *S1, const char *S2)'
     `string.h' (GNU):  *Note String/Array Comparison::.

`size_t strxfrm (char *restrict TO, const char *restrict FROM, size_t SIZE)'
     `string.h' (ISO):  *Note Collation Functions::.

`int stty (int FILEDES, struct sgttyb * attributes)'
     `sgtty.h' (BSD):  *Note BSD Terminal Modes::.

`int S_TYPEISMQ (struct stat *S)'
     `sys/stat.h' (POSIX):  *Note Testing File Type::.

`int S_TYPEISSEM (struct stat *S)'
     `sys/stat.h' (POSIX):  *Note Testing File Type::.

`int S_TYPEISSHM (struct stat *S)'
     `sys/stat.h' (POSIX):  *Note Testing File Type::.

`int SUN_LEN (_struct sockaddr_un *_ PTR)'
     `sys/un.h' (BSD):  *Note Local Namespace Details::.

`_SVID_SOURCE'
     (GNU):  *Note Feature Test Macros::.

`int SV_INTERRUPT'
     `signal.h' (BSD):  *Note BSD Handler::.

`int SV_ONSTACK'
     `signal.h' (BSD):  *Note BSD Handler::.

`int SV_RESETHAND'
     `signal.h' (Sun):  *Note BSD Handler::.

`int swapcontext (ucontext_t *restrict OUCP, const ucontext_t *restrict UCP)'
     `ucontext.h' (SVID):  *Note System V contexts::.

`int swprintf (wchar_t *S, size_t SIZE, const wchar_t *TEMPLATE, ...)'
     `wchar.h' (GNU):  *Note Formatted Output Functions::.

`int swscanf (const wchar_t *WS, const char *TEMPLATE, ...)'
     `wchar.h' (ISO):  *Note Formatted Input Functions::.

`int symlink (const char *OLDNAME, const char *NEWNAME)'
     `unistd.h' (BSD):  *Note Symbolic Links::.

`SYMLINK_MAX'
     `limits.h' (POSIX.1):  *Note File Minimums::.

`int sync (void)'
     `unistd.h' (X/Open):  *Note Synchronizing I/O::.

`long int syscall (long int SYSNO, ...)'
     `unistd.h' (???):  *Note System Calls::.

`long int sysconf (int PARAMETER)'
     `unistd.h' (POSIX.1):  *Note Sysconf Definition::.

`int sysctl (int *NAMES, int NLEN, void *OLDVAL,'
     `sysctl.h' (BSD):  *Note System Parameters::.

`void syslog (int FACILITY_PRIORITY, char *FORMAT, ...)'
     `syslog.h' (BSD):  *Note syslog; vsyslog::.

`int system (const char *COMMAND)'
     `stdlib.h' (ISO):  *Note Running a Command::.

`sighandler_t sysv_signal (int SIGNUM, sighandler_t ACTION)'
     `signal.h' (GNU):  *Note Basic Signal Handling::.

`double tan (double X)'
     `math.h' (ISO):  *Note Trig Functions::.

`float tanf (float X)'
     `math.h' (ISO):  *Note Trig Functions::.

`double tanh (double X)'
     `math.h' (ISO):  *Note Hyperbolic Functions::.

`float tanhf (float X)'
     `math.h' (ISO):  *Note Hyperbolic Functions::.

`long double tanhl (long double X)'
     `math.h' (ISO):  *Note Hyperbolic Functions::.

`long double tanl (long double X)'
     `math.h' (ISO):  *Note Trig Functions::.

`int tcdrain (int FILEDES)'
     `termios.h' (POSIX.1):  *Note Line Control::.

`tcflag_t'
     `termios.h' (POSIX.1):  *Note Mode Data Types::.

`int tcflow (int FILEDES, int ACTION)'
     `termios.h' (POSIX.1):  *Note Line Control::.

`int tcflush (int FILEDES, int QUEUE)'
     `termios.h' (POSIX.1):  *Note Line Control::.

`int tcgetattr (int FILEDES, struct termios *TERMIOS-P)'
     `termios.h' (POSIX.1):  *Note Mode Functions::.

`pid_t tcgetpgrp (int FILEDES)'
     `unistd.h' (POSIX.1):  *Note Terminal Access Functions::.

`pid_t tcgetsid (int FILDES)'
     `termios.h' (Unix98):  *Note Terminal Access Functions::.

`TCSADRAIN'
     `termios.h' (POSIX.1):  *Note Mode Functions::.

`TCSAFLUSH'
     `termios.h' (POSIX.1):  *Note Mode Functions::.

`TCSANOW'
     `termios.h' (POSIX.1):  *Note Mode Functions::.

`TCSASOFT'
     `termios.h' (BSD):  *Note Mode Functions::.

`int tcsendbreak (int FILEDES, int DURATION)'
     `termios.h' (POSIX.1):  *Note Line Control::.

`int tcsetattr (int FILEDES, int WHEN, const struct termios *TERMIOS-P)'
     `termios.h' (POSIX.1):  *Note Mode Functions::.

`int tcsetpgrp (int FILEDES, pid_t PGID)'
     `unistd.h' (POSIX.1):  *Note Terminal Access Functions::.

`void * tdelete (const void *KEY, void **ROOTP, comparison_fn_t COMPAR)'
     `search.h' (SVID):  *Note Tree Search Function::.

`void tdestroy (void *VROOT, __free_fn_t FREEFCT)'
     `search.h' (GNU):  *Note Tree Search Function::.

`off_t telldir (DIR *DIRSTREAM)'
     `dirent.h' (BSD):  *Note Random Access Directory::.

`TEMP_FAILURE_RETRY (EXPRESSION)'
     `unistd.h' (GNU):  *Note Interrupted Primitives::.

`char * tempnam (const char *DIR, const char *PREFIX)'
     `stdio.h' (SVID):  *Note Temporary Files::.

`char * textdomain (const char *DOMAINNAME)'
     `libintl.h' (GNU):  *Note Locating gettext catalog::.

`void * tfind (const void *KEY, void *const *ROOTP, comparison_fn_t COMPAR)'
     `search.h' (SVID):  *Note Tree Search Function::.

`double tgamma (double X)'
     `math.h' (XPG, ISO):  *Note Special Functions::.

`float tgammaf (float X)'
     `math.h' (XPG, ISO):  *Note Special Functions::.

`long double tgammal (long double X)'
     `math.h' (XPG, ISO):  *Note Special Functions::.

`time_t time (time_t *RESULT)'
     `time.h' (ISO):  *Note Simple Calendar Time::.

`time_t timegm (struct tm *BROKENTIME)'
     `time.h' (???):  *Note Broken-down Time::.

`time_t timelocal (struct tm *BROKENTIME)'
     `time.h' (???):  *Note Broken-down Time::.

`clock_t times (struct tms *BUFFER)'
     `sys/times.h' (POSIX.1):  *Note Processor Time::.

`time_t'
     `time.h' (ISO):  *Note Simple Calendar Time::.

`long int timezone'
     `time.h' (SVID):  *Note Time Zone Functions::.

`FILE * tmpfile (void)'
     `stdio.h' (ISO):  *Note Temporary Files::.

`FILE * tmpfile64 (void)'
     `stdio.h' (Unix98):  *Note Temporary Files::.

`int TMP_MAX'
     `stdio.h' (ISO):  *Note Temporary Files::.

`char * tmpnam (char *RESULT)'
     `stdio.h' (ISO):  *Note Temporary Files::.

`char * tmpnam_r (char *RESULT)'
     `stdio.h' (GNU):  *Note Temporary Files::.

`int toascii (int C)'
     `ctype.h' (SVID, BSD):  *Note Case Conversion::.

`int _tolower (int C)'
     `ctype.h' (SVID):  *Note Case Conversion::.

`int tolower (int C)'
     `ctype.h' (ISO):  *Note Case Conversion::.

`tcflag_t TOSTOP'
     `termios.h' (POSIX.1):  *Note Local Modes::.

`int _toupper (int C)'
     `ctype.h' (SVID):  *Note Case Conversion::.

`int toupper (int C)'
     `ctype.h' (ISO):  *Note Case Conversion::.

`wint_t towctrans (wint_t WC, wctrans_t DESC)'
     `wctype.h' (ISO):  *Note Wide Character Case Conversion::.

`wint_t towlower (wint_t WC)'
     `wctype.h' (ISO):  *Note Wide Character Case Conversion::.

`wint_t towupper (wint_t WC)'
     `wctype.h' (ISO):  *Note Wide Character Case Conversion::.

`double trunc (double X)'
     `math.h' (ISO):  *Note Rounding Functions::.

`int truncate (const char *FILENAME, off_t LENGTH)'
     `unistd.h' (X/Open):  *Note File Size::.

`int truncate64 (const char *NAME, off64_t LENGTH)'
     `unistd.h' (Unix98):  *Note File Size::.

`float truncf (float X)'
     `math.h' (ISO):  *Note Rounding Functions::.

`long double truncl (long double X)'
     `math.h' (ISO):  *Note Rounding Functions::.

`TRY_AGAIN'
     `netdb.h' (BSD):  *Note Host Names::.

`void * tsearch (const void *KEY, void **ROOTP, comparison_fn_t COMPAR)'
     `search.h' (SVID):  *Note Tree Search Function::.

`char * ttyname (int FILEDES)'
     `unistd.h' (POSIX.1):  *Note Is It a Terminal::.

`int ttyname_r (int FILEDES, char *BUF, size_t LEN)'
     `unistd.h' (POSIX.1):  *Note Is It a Terminal::.

`void twalk (const void *ROOT, __action_fn_t ACTION)'
     `search.h' (SVID):  *Note Tree Search Function::.

`char * tzname [2]'
     `time.h' (POSIX.1):  *Note Time Zone Functions::.

`int TZNAME_MAX'
     `limits.h' (POSIX.1):  *Note General Limits::.

`void tzset (void)'
     `time.h' (POSIX.1):  *Note Time Zone Functions::.

`UCHAR_MAX'
     `limits.h' (ISO):  *Note Range of Type::.

`ucontext_t'
     `ucontext.h' (SVID):  *Note System V contexts::.

`uid_t'
     `sys/types.h' (POSIX.1):  *Note Reading Persona::.

`UINT_MAX'
     `limits.h' (ISO):  *Note Range of Type::.

`int ulimit (int CMD, ...)'
     `ulimit.h' (BSD):  *Note Limits on Resources::.

`ULONG_LONG_MAX'
     `limits.h' (ISO):  *Note Range of Type::.

`ULONG_MAX'
     `limits.h' (ISO):  *Note Range of Type::.

`mode_t umask (mode_t MASK)'
     `sys/stat.h' (POSIX.1):  *Note Setting Permissions::.

`int umount (const char *FILE)'
     `sys/mount.h' (SVID, GNU):  *Note Mount-Unmount-Remount::.

`int umount2 (const char *FILE, int FLAGS)'
     `sys/mount.h' (GNU):  *Note Mount-Unmount-Remount::.

`int uname (struct utsname *INFO)'
     `sys/utsname.h' (POSIX.1):  *Note Platform Type::.

`int ungetc (int C, FILE *STREAM)'
     `stdio.h' (ISO):  *Note How Unread::.

`wint_t ungetwc (wint_t WC, FILE *STREAM)'
     `wchar.h' (ISO):  *Note How Unread::.

`union wait'
     `sys/wait.h' (BSD):  *Note BSD Wait Functions::.

`int unlink (const char *FILENAME)'
     `unistd.h' (POSIX.1):  *Note Deleting Files::.

`int unlockpt (int FILEDES)'
     `stdlib.h' (SVID, XPG4.2):  *Note Allocation::.

`int unsetenv (const char *NAME)'
     `stdlib.h' (BSD):  *Note Environment Access::.

`void updwtmp (const char *WTMP_FILE, const struct utmp *UTMP)'
     `utmp.h' (SVID):  *Note Manipulating the Database::.

`USER_PROCESS'
     `utmp.h' (SVID):  *Note Manipulating the Database::.

`USER_PROCESS'
     `utmpx.h' (XPG4.2):  *Note XPG Functions::.

`USHRT_MAX'
     `limits.h' (ISO):  *Note Range of Type::.

`int utime (const char *FILENAME, const struct utimbuf *TIMES)'
     `time.h' (POSIX.1):  *Note File Times::.

`int utimes (const char *FILENAME, struct timeval TVP[2])'
     `sys/time.h' (BSD):  *Note File Times::.

`int utmpname (const char *FILE)'
     `utmp.h' (SVID):  *Note Manipulating the Database::.

`int utmpxname (const char *FILE)'
     `utmpx.h' (XPG4.2):  *Note XPG Functions::.

`va_alist'
     `varargs.h' (Unix):  *Note Old Varargs::.

`TYPE va_arg (va_list AP, TYPE)'
     `stdarg.h' (ISO):  *Note Argument Macros::.

`void __va_copy (va_list DEST, va_list SRC)'
     `stdarg.h' (GNU):  *Note Argument Macros::.

`va_dcl'
     `varargs.h' (Unix):  *Note Old Varargs::.

`void va_end (va_list AP)'
     `stdarg.h' (ISO):  *Note Argument Macros::.

`va_list'
     `stdarg.h' (ISO):  *Note Argument Macros::.

`void * valloc (size_t SIZE)'
     `malloc.h', `stdlib.h' (BSD):  *Note Aligned Memory Blocks::.

`int vasprintf (char **PTR, const char *TEMPLATE, va_list AP)'
     `stdio.h' (GNU):  *Note Variable Arguments Output::.

`void va_start (va_list AP)'
     `varargs.h' (Unix):  *Note Old Varargs::.

`void va_start (va_list AP, LAST-REQUIRED)'
     `stdarg.h' (ISO):  *Note Argument Macros::.

`int VDISCARD'
     `termios.h' (BSD):  *Note Other Special::.

`int VDSUSP'
     `termios.h' (BSD):  *Note Signal Characters::.

`int VEOF'
     `termios.h' (POSIX.1):  *Note Editing Characters::.

`int VEOL'
     `termios.h' (POSIX.1):  *Note Editing Characters::.

`int VEOL2'
     `termios.h' (BSD):  *Note Editing Characters::.

`int VERASE'
     `termios.h' (POSIX.1):  *Note Editing Characters::.

`void verr (int STATUS, const char *FORMAT, va_list)'
     `err.h' (BSD):  *Note Error Messages::.

`void verrx (int STATUS, const char *FORMAT, va_list)'
     `err.h' (BSD):  *Note Error Messages::.

`int versionsort (const void *A, const void *B)'
     `dirent.h' (GNU):  *Note Scanning Directory Content::.

`int versionsort64 (const void *A, const void *B)'
     `dirent.h' (GNU):  *Note Scanning Directory Content::.

`pid_t vfork (void)'
     `unistd.h' (BSD):  *Note Creating a Process::.

`int vfprintf (FILE *STREAM, const char *TEMPLATE, va_list AP)'
     `stdio.h' (ISO):  *Note Variable Arguments Output::.

`int vfscanf (FILE *STREAM, const char *TEMPLATE, va_list AP)'
     `stdio.h' (ISO):  *Note Variable Arguments Input::.

`int vfwprintf (FILE *STREAM, const wchar_t *TEMPLATE, va_list AP)'
     `wchar.h' (ISO):  *Note Variable Arguments Output::.

`int vfwscanf (FILE *STREAM, const wchar_t *TEMPLATE, va_list AP)'
     `wchar.h' (ISO):  *Note Variable Arguments Input::.

`int VINTR'
     `termios.h' (POSIX.1):  *Note Signal Characters::.

`int VKILL'
     `termios.h' (POSIX.1):  *Note Editing Characters::.

`int vlimit (int RESOURCE, int LIMIT)'
     `sys/vlimit.h' (BSD):  *Note Limits on Resources::.

`int VLNEXT'
     `termios.h' (BSD):  *Note Other Special::.

`int VMIN'
     `termios.h' (POSIX.1):  *Note Noncanonical Input::.

`int vprintf (const char *TEMPLATE, va_list AP)'
     `stdio.h' (ISO):  *Note Variable Arguments Output::.

`int VQUIT'
     `termios.h' (POSIX.1):  *Note Signal Characters::.

`int VREPRINT'
     `termios.h' (BSD):  *Note Editing Characters::.

`int vscanf (const char *TEMPLATE, va_list AP)'
     `stdio.h' (ISO):  *Note Variable Arguments Input::.

`int vsnprintf (char *S, size_t SIZE, const char *TEMPLATE, va_list AP)'
     `stdio.h' (GNU):  *Note Variable Arguments Output::.

`int vsprintf (char *S, const char *TEMPLATE, va_list AP)'
     `stdio.h' (ISO):  *Note Variable Arguments Output::.

`int vsscanf (const char *S, const char *TEMPLATE, va_list AP)'
     `stdio.h' (ISO):  *Note Variable Arguments Input::.

`int VSTART'
     `termios.h' (POSIX.1):  *Note Start/Stop Characters::.

`int VSTATUS'
     `termios.h' (BSD):  *Note Other Special::.

`int VSTOP'
     `termios.h' (POSIX.1):  *Note Start/Stop Characters::.

`int VSUSP'
     `termios.h' (POSIX.1):  *Note Signal Characters::.

`int vswprintf (wchar_t *S, size_t SIZE, const wchar_t *TEMPLATE, va_list AP)'
     `wchar.h' (GNU):  *Note Variable Arguments Output::.

`int vswscanf (const wchar_t *S, const wchar_t *TEMPLATE, va_list AP)'
     `wchar.h' (ISO):  *Note Variable Arguments Input::.

`void vsyslog (int FACILITY_PRIORITY, char *FORMAT, va_list arglist)'
     `syslog.h' (BSD):  *Note syslog; vsyslog::.

`int VTIME'
     `termios.h' (POSIX.1):  *Note Noncanonical Input::.

`int vtimes (struct vtimes CURRENT, struct vtimes CHILD)'
     `vtimes.h' (vtimes.h):  *Note Resource Usage::.

`void vwarn (const char *FORMAT, va_list)'
     `err.h' (BSD):  *Note Error Messages::.

`void vwarnx (const char *FORMAT, va_list)'
     `err.h' (BSD):  *Note Error Messages::.

`int VWERASE'
     `termios.h' (BSD):  *Note Editing Characters::.

`int vwprintf (const wchar_t *TEMPLATE, va_list AP)'
     `wchar.h' (ISO):  *Note Variable Arguments Output::.

`int vwscanf (const wchar_t *TEMPLATE, va_list AP)'
     `wchar.h' (ISO):  *Note Variable Arguments Input::.

`pid_t wait (int *STATUS-PTR)'
     `sys/wait.h' (POSIX.1):  *Note Process Completion::.

`pid_t wait3 (union wait *STATUS-PTR, int OPTIONS, struct rusage *USAGE)'
     `sys/wait.h' (BSD):  *Note BSD Wait Functions::.

`pid_t wait4 (pid_t PID, int *STATUS-PTR, int OPTIONS, struct rusage *USAGE)'
     `sys/wait.h' (BSD):  *Note Process Completion::.

`pid_t waitpid (pid_t PID, int *STATUS-PTR, int OPTIONS)'
     `sys/wait.h' (POSIX.1):  *Note Process Completion::.

`void warn (const char *FORMAT, ...)'
     `err.h' (BSD):  *Note Error Messages::.

`void warnx (const char *FORMAT, ...)'
     `err.h' (BSD):  *Note Error Messages::.

`WCHAR_MAX'
     `limits.h' (GNU):  *Note Range of Type::.

`wint_t WCHAR_MAX'
     `wchar.h' (ISO):  *Note Extended Char Intro::.

`wint_t WCHAR_MIN'
     `wchar.h' (ISO):  *Note Extended Char Intro::.

`wchar_t'
     `stddef.h' (ISO):  *Note Extended Char Intro::.

`int WCOREDUMP (int STATUS)'
     `sys/wait.h' (BSD):  *Note Process Completion Status::.

`wchar_t * wcpcpy (wchar_t *restrict WTO, const wchar_t *restrict WFROM)'
     `wchar.h' (GNU):  *Note Copying and Concatenation::.

`wchar_t * wcpncpy (wchar_t *restrict WTO, const wchar_t *restrict WFROM, size_t SIZE)'
     `wchar.h' (GNU):  *Note Copying and Concatenation::.

`size_t wcrtomb (char *restrict S, wchar_t WC, mbstate_t *restrict PS)'
     `wchar.h' (ISO):  *Note Converting a Character::.

`int wcscasecmp (const wchar_t *WS1, const wchar_T *WS2)'
     `wchar.h' (GNU):  *Note String/Array Comparison::.

`wchar_t * wcscat (wchar_t *restrict WTO, const wchar_t *restrict WFROM)'
     `wchar.h' (ISO):  *Note Copying and Concatenation::.

`wchar_t * wcschr (const wchar_t *WSTRING, int WC)'
     `wchar.h' (ISO):  *Note Search Functions::.

`wchar_t * wcschrnul (const wchar_t *WSTRING, wchar_t WC)'
     `wchar.h' (GNU):  *Note Search Functions::.

`int wcscmp (const wchar_t *WS1, const wchar_t *WS2)'
     `wchar.h' (ISO):  *Note String/Array Comparison::.

`int wcscoll (const wchar_t *WS1, const wchar_t *WS2)'
     `wchar.h' (ISO):  *Note Collation Functions::.

`wchar_t * wcscpy (wchar_t *restrict WTO, const wchar_t *restrict WFROM)'
     `wchar.h' (ISO):  *Note Copying and Concatenation::.

`size_t wcscspn (const wchar_t *WSTRING, const wchar_t *STOPSET)'
     `wchar.h' (ISO):  *Note Search Functions::.

`wchar_t * wcsdup (const wchar_t *WS)'
     `wchar.h' (GNU):  *Note Copying and Concatenation::.

`size_t wcsftime (wchar_t *S, size_t SIZE, const wchar_t *TEMPLATE, const struct tm *BROKENTIME)'
     `time.h' (ISO/Amend1):  *Note Formatting Calendar Time::.

`size_t wcslen (const wchar_t *WS)'
     `wchar.h' (ISO):  *Note String Length::.

`int wcsncasecmp (const wchar_t *WS1, const wchar_t *S2, size_t N)'
     `wchar.h' (GNU):  *Note String/Array Comparison::.

`wchar_t * wcsncat (wchar_t *restrict WTO, const wchar_t *restrict WFROM, size_t SIZE)'
     `wchar.h' (ISO):  *Note Copying and Concatenation::.

`int wcsncmp (const wchar_t *WS1, const wchar_t *WS2, size_t SIZE)'
     `wchar.h' (ISO):  *Note String/Array Comparison::.

`wchar_t * wcsncpy (wchar_t *restrict WTO, const wchar_t *restrict WFROM, size_t SIZE)'
     `wchar.h' (ISO):  *Note Copying and Concatenation::.

`size_t wcsnlen (const wchar_t *WS, size_t MAXLEN)'
     `wchar.h' (GNU):  *Note String Length::.

`size_t wcsnrtombs (char *restrict DST, const wchar_t **restrict SRC, size_t NWC, size_t LEN, mbstate_t *restrict PS)'
     `wchar.h' (GNU):  *Note Converting Strings::.

`wchar_t * wcspbrk (const wchar_t *WSTRING, const wchar_t *STOPSET)'
     `wchar.h' (ISO):  *Note Search Functions::.

`wchar_t * wcsrchr (const wchar_t *WSTRING, wchar_t C)'
     `wchar.h' (ISO):  *Note Search Functions::.

`size_t wcsrtombs (char *restrict DST, const wchar_t **restrict SRC, size_t LEN, mbstate_t *restrict PS)'
     `wchar.h' (ISO):  *Note Converting Strings::.

`size_t wcsspn (const wchar_t *WSTRING, const wchar_t *SKIPSET)'
     `wchar.h' (ISO):  *Note Search Functions::.

`wchar_t * wcsstr (const wchar_t *HAYSTACK, const wchar_t *NEEDLE)'
     `wchar.h' (ISO):  *Note Search Functions::.

`double wcstod (const wchar_t *restrict STRING, wchar_t **restrict TAILPTR)'
     `wchar.h' (ISO):  *Note Parsing of Floats::.

`float wcstof (const wchar_t *STRING, wchar_t **TAILPTR)'
     `stdlib.h' (ISO):  *Note Parsing of Floats::.

`intmax_t wcstoimax (const wchar_t *restrict STRING, wchar_t **restrict TAILPTR, int BASE)'
     `wchar.h' (ISO):  *Note Parsing of Integers::.

`wchar_t * wcstok (wchar_t *NEWSTRING, const char *DELIMITERS)'
     `wchar.h' (ISO):  *Note Finding Tokens in a String::.

`long int wcstol (const wchar_t *restrict STRING, wchar_t **restrict TAILPTR, int BASE)'
     `wchar.h' (ISO):  *Note Parsing of Integers::.

`long double wcstold (const wchar_t *STRING, wchar_t **TAILPTR)'
     `stdlib.h' (ISO):  *Note Parsing of Floats::.

`long long int wcstoll (const wchar_t *restrict STRING, wchar_t **restrict TAILPTR, int BASE)'
     `wchar.h' (ISO):  *Note Parsing of Integers::.

`size_t wcstombs (char *STRING, const wchar_t *WSTRING, size_t SIZE)'
     `stdlib.h' (ISO):  *Note Non-reentrant String Conversion::.

`long long int wcstoq (const wchar_t *restrict STRING, wchar_t **restrict TAILPTR, int BASE)'
     `wchar.h' (GNU):  *Note Parsing of Integers::.

`unsigned long int wcstoul (const wchar_t *restrict STRING, wchar_t **restrict TAILPTR, int BASE)'
     `wchar.h' (ISO):  *Note Parsing of Integers::.

`unsigned long long int wcstoull (const wchar_t *restrict STRING, wchar_t **restrict TAILPTR, int BASE)'
     `wchar.h' (ISO):  *Note Parsing of Integers::.

`uintmax_t wcstoumax (const wchar_t *restrict STRING, wchar_t **restrict TAILPTR, int BASE)'
     `wchar.h' (ISO):  *Note Parsing of Integers::.

`unsigned long long int wcstouq (const wchar_t *restrict STRING, wchar_t **restrict TAILPTR, int BASE)'
     `wchar.h' (GNU):  *Note Parsing of Integers::.

`wchar_t * wcswcs (const wchar_t *HAYSTACK, const wchar_t *NEEDLE)'
     `wchar.h' (XPG):  *Note Search Functions::.

`size_t wcsxfrm (wchar_t *restrict WTO, const wchar_t *WFROM, size_t SIZE)'
     `wchar.h' (ISO):  *Note Collation Functions::.

`int wctob (wint_t C)'
     `wchar.h' (ISO):  *Note Converting a Character::.

`int wctomb (char *STRING, wchar_t WCHAR)'
     `stdlib.h' (ISO):  *Note Non-reentrant Character Conversion::.

`wctrans_t wctrans (const char *PROPERTY)'
     `wctype.h' (ISO):  *Note Wide Character Case Conversion::.

`wctrans_t'
     `wctype.h' (ISO):  *Note Wide Character Case Conversion::.

`wctype_t wctype (const char *PROPERTY)'
     `wctype.h' (ISO):  *Note Classification of Wide Characters::.

`wctype_t'
     `wctype.h' (ISO):  *Note Classification of Wide Characters::.

`int WEOF'
     `wchar.h' (ISO):  *Note EOF and Errors::.

`wint_t WEOF'
     `wchar.h' (ISO):  *Note Extended Char Intro::.

`int WEXITSTATUS (int STATUS)'
     `sys/wait.h' (POSIX.1):  *Note Process Completion Status::.

`int WIFEXITED (int STATUS)'
     `sys/wait.h' (POSIX.1):  *Note Process Completion Status::.

`int WIFSIGNALED (int STATUS)'
     `sys/wait.h' (POSIX.1):  *Note Process Completion Status::.

`int WIFSTOPPED (int STATUS)'
     `sys/wait.h' (POSIX.1):  *Note Process Completion Status::.

`wint_t'
     `wchar.h' (ISO):  *Note Extended Char Intro::.

`wchar_t * wmemchr (const wchar_t *BLOCK, wchar_t WC, size_t SIZE)'
     `wchar.h' (ISO):  *Note Search Functions::.

`int wmemcmp (const wchar_t *A1, const wchar_t *A2, size_t SIZE)'
     `wcjar.h' (ISO):  *Note String/Array Comparison::.

`wchar_t * wmemcpy (wchar_t *restrict WTO, const wchar_t *restruct WFROM, size_t SIZE)'
     `wchar.h' (ISO):  *Note Copying and Concatenation::.

`wchar_t * wmemmove (wchar *WTO, const wchar_t *WFROM, size_t SIZE)'
     `wchar.h' (ISO):  *Note Copying and Concatenation::.

`wchar_t * wmempcpy (wchar_t *restrict WTO, const wchar_t *restrict WFROM, size_t SIZE)'
     `wchar.h' (GNU):  *Note Copying and Concatenation::.

`wchar_t * wmemset (wchar_t *BLOCK, wchar_t WC, size_t SIZE)'
     `wchar.h' (ISO):  *Note Copying and Concatenation::.

`int W_OK'
     `unistd.h' (POSIX.1):  *Note Testing File Access::.

`int wordexp (const char *WORDS, wordexp_t *WORD-VECTOR-PTR, int FLAGS)'
     `wordexp.h' (POSIX.2):  *Note Calling Wordexp::.

`wordexp_t'
     `wordexp.h' (POSIX.2):  *Note Calling Wordexp::.

`void wordfree (wordexp_t *WORD-VECTOR-PTR)'
     `wordexp.h' (POSIX.2):  *Note Calling Wordexp::.

`int wprintf (const wchar_t *TEMPLATE, ...)'
     `wchar.h' (ISO):  *Note Formatted Output Functions::.

`WRDE_APPEND'
     `wordexp.h' (POSIX.2):  *Note Flags for Wordexp::.

`WRDE_BADCHAR'
     `wordexp.h' (POSIX.2):  *Note Calling Wordexp::.

`WRDE_BADVAL'
     `wordexp.h' (POSIX.2):  *Note Calling Wordexp::.

`WRDE_CMDSUB'
     `wordexp.h' (POSIX.2):  *Note Calling Wordexp::.

`WRDE_DOOFFS'
     `wordexp.h' (POSIX.2):  *Note Flags for Wordexp::.

`WRDE_NOCMD'
     `wordexp.h' (POSIX.2):  *Note Flags for Wordexp::.

`WRDE_NOSPACE'
     `wordexp.h' (POSIX.2):  *Note Calling Wordexp::.

`WRDE_REUSE'
     `wordexp.h' (POSIX.2):  *Note Flags for Wordexp::.

`WRDE_SHOWERR'
     `wordexp.h' (POSIX.2):  *Note Flags for Wordexp::.

`WRDE_SYNTAX'
     `wordexp.h' (POSIX.2):  *Note Calling Wordexp::.

`WRDE_UNDEF'
     `wordexp.h' (POSIX.2):  *Note Flags for Wordexp::.

`ssize_t write (int FILEDES, const void *BUFFER, size_t SIZE)'
     `unistd.h' (POSIX.1):  *Note I/O Primitives::.

`ssize_t writev (int FILEDES, const struct iovec *VECTOR, int COUNT)'
     `sys/uio.h' (BSD):  *Note Scatter-Gather::.

`int wscanf (const wchar_t *TEMPLATE, ...)'
     `wchar.h' (ISO):  *Note Formatted Input Functions::.

`int WSTOPSIG (int STATUS)'
     `sys/wait.h' (POSIX.1):  *Note Process Completion Status::.

`int WTERMSIG (int STATUS)'
     `sys/wait.h' (POSIX.1):  *Note Process Completion Status::.

`int X_OK'
     `unistd.h' (POSIX.1):  *Note Testing File Access::.

`_XOPEN_SOURCE'
     (X/Open):  *Note Feature Test Macros::.

`_XOPEN_SOURCE_EXTENDED'
     (X/Open):  *Note Feature Test Macros::.

`double y0 (double X)'
     `math.h' (SVID):  *Note Special Functions::.

`float y0f (float X)'
     `math.h' (SVID):  *Note Special Functions::.

`long double y0l (long double X)'
     `math.h' (SVID):  *Note Special Functions::.

`double y1 (double X)'
     `math.h' (SVID):  *Note Special Functions::.

`float y1f (float X)'
     `math.h' (SVID):  *Note Special Functions::.

`long double y1l (long double X)'
     `math.h' (SVID):  *Note Special Functions::.

`double yn (int n, double X)'
     `math.h' (SVID):  *Note Special Functions::.

`float ynf (int n, float X)'
     `math.h' (SVID):  *Note Special Functions::.

`long double ynl (int n, long double X)'
     `math.h' (SVID):  *Note Special Functions::.


#! /bin/sh
#
# (hacked from egcs_update and pikt_update)
#
# Update a local CVS tree from the NTP repository, with an emphasis
# on treating generated files correctly, so that autoconf, bison et
# al are not required for the ``end'' user.
#
# By default all command-line options are passed to `cvs update` in
# addition to $UPDATE_OPTIONS (defined below). If the first parameter
# reads --nostdflags, $UPDATE_OPTIONS as well as this parameter itself
# are omitted. 
# 
# Examples:
#
# ntp_update -r ntp_latest_snapshot
# ntp_update -A
# ntp_update --nostdflags -P -r ntp_1_1_branch foo/bar
#
#
# (C) 1998 Free Software Foundation
# Originally by Gerald Pfeifer <pfeifer@dbai.tuwien.ac.at>, August 1998.
#
# This script is Free Software, and it can be copied, distributed and
# modified as defined in the GNU General Public License.  A copy of
# its license can be downloaded from http://www.gnu.org/copyleft/gpl.html


UPDATE_OPTIONS="-P -d"
# Add -d to create any directories that exist in the repository but not
#        locally.
# Add -A to reset any sticky tags, dates, or `-k' options.


echo "Current directory is `pwd`."

# First of all, check whether this indeed looks like a local CVS of ntp.
if [ ! -d CVS ] || [ ! -f ntpd/ntpd.c ]; then
	echo "This does not seem to be an ntp CVS tree!"
	exit
fi

# Check command-line options

if [ x"${1}"x = x"--nostdflags"x ]; then
    shift
else
    set -- $UPDATE_OPTIONS ${1+"$@"}
fi

echo "Pass 1: Updating autoconf and bison source files"
find . -name configure.in -o -name '*.y' -o -name copyright.htm | grep -v '^\./A\.'| xargs cvs -q update

echo "Pass 2: Updating full tree"
cvs -q update ${1+"$@"}

echo "Pass 3: Fixing local tree"
touch `find . -name aclocal.m4 -print`
touch `find . -name configure -print`
touch `find . -name Makefile.in -print`
#touch `find texinfo -name \*.pot -print`
#touch `find texinfo -name \*.gmo -print`
# The following code should also touch the generated lex/yacc/rpc files
for f in \
 stamp-h.in \
 COPYRIGHT
do
	touch $f
done
